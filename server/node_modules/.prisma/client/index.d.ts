
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Cuentas
 * 
 */
export type Cuentas = $Result.DefaultSelection<Prisma.$CuentasPayload>
/**
 * Model Roles
 * 
 */
export type Roles = $Result.DefaultSelection<Prisma.$RolesPayload>
/**
 * Model EstadosUsuario
 * 
 */
export type EstadosUsuario = $Result.DefaultSelection<Prisma.$EstadosUsuarioPayload>
/**
 * Model Categorias
 * 
 */
export type Categorias = $Result.DefaultSelection<Prisma.$CategoriasPayload>
/**
 * Model EstadosProducto
 * 
 */
export type EstadosProducto = $Result.DefaultSelection<Prisma.$EstadosProductoPayload>
/**
 * Model Productos
 * 
 */
export type Productos = $Result.DefaultSelection<Prisma.$ProductosPayload>
/**
 * Model ImagenesProducto
 * 
 */
export type ImagenesProducto = $Result.DefaultSelection<Prisma.$ImagenesProductoPayload>
/**
 * Model EstadosTransaccion
 * 
 */
export type EstadosTransaccion = $Result.DefaultSelection<Prisma.$EstadosTransaccionPayload>
/**
 * Model Transacciones
 * 
 */
export type Transacciones = $Result.DefaultSelection<Prisma.$TransaccionesPayload>
/**
 * Model Calificaciones
 * 
 */
export type Calificaciones = $Result.DefaultSelection<Prisma.$CalificacionesPayload>
/**
 * Model Carrito
 * 
 */
export type Carrito = $Result.DefaultSelection<Prisma.$CarritoPayload>
/**
 * Model Mensajes
 * 
 */
export type Mensajes = $Result.DefaultSelection<Prisma.$MensajesPayload>
/**
 * Model EstadosReporte
 * 
 */
export type EstadosReporte = $Result.DefaultSelection<Prisma.$EstadosReportePayload>
/**
 * Model Reportes
 * 
 */
export type Reportes = $Result.DefaultSelection<Prisma.$ReportesPayload>
/**
 * Model ActividadUsuario
 * 
 */
export type ActividadUsuario = $Result.DefaultSelection<Prisma.$ActividadUsuarioPayload>
/**
 * Model Notificaciones
 * 
 */
export type Notificaciones = $Result.DefaultSelection<Prisma.$NotificacionesPayload>
/**
 * Model Publicaciones
 * 
 */
export type Publicaciones = $Result.DefaultSelection<Prisma.$PublicacionesPayload>
/**
 * Model Foros
 * 
 */
export type Foros = $Result.DefaultSelection<Prisma.$ForosPayload>
/**
 * Model PublicacionesForo
 * 
 */
export type PublicacionesForo = $Result.DefaultSelection<Prisma.$PublicacionesForoPayload>
/**
 * Model ComentariosPublicacion
 * 
 */
export type ComentariosPublicacion = $Result.DefaultSelection<Prisma.$ComentariosPublicacionPayload>
/**
 * Model Ubicaciones
 * 
 */
export type Ubicaciones = $Result.DefaultSelection<Prisma.$UbicacionesPayload>
/**
 * Model ResumenUsuario
 * 
 */
export type ResumenUsuario = $Result.DefaultSelection<Prisma.$ResumenUsuarioPayload>
/**
 * Model Seguidores
 * 
 */
export type Seguidores = $Result.DefaultSelection<Prisma.$SeguidoresPayload>
/**
 * Model MetricasDiarias
 * 
 */
export type MetricasDiarias = $Result.DefaultSelection<Prisma.$MetricasDiariasPayload>
/**
 * Model Favoritos
 * 
 */
export type Favoritos = $Result.DefaultSelection<Prisma.$FavoritosPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Cuentas
 * const cuentas = await prisma.cuentas.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Cuentas
   * const cuentas = await prisma.cuentas.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.cuentas`: Exposes CRUD operations for the **Cuentas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cuentas
    * const cuentas = await prisma.cuentas.findMany()
    * ```
    */
  get cuentas(): Prisma.CuentasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roles`: Exposes CRUD operations for the **Roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.roles.findMany()
    * ```
    */
  get roles(): Prisma.RolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadosUsuario`: Exposes CRUD operations for the **EstadosUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstadosUsuarios
    * const estadosUsuarios = await prisma.estadosUsuario.findMany()
    * ```
    */
  get estadosUsuario(): Prisma.EstadosUsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categorias`: Exposes CRUD operations for the **Categorias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categorias
    * const categorias = await prisma.categorias.findMany()
    * ```
    */
  get categorias(): Prisma.CategoriasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadosProducto`: Exposes CRUD operations for the **EstadosProducto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstadosProductos
    * const estadosProductos = await prisma.estadosProducto.findMany()
    * ```
    */
  get estadosProducto(): Prisma.EstadosProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productos`: Exposes CRUD operations for the **Productos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.productos.findMany()
    * ```
    */
  get productos(): Prisma.ProductosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.imagenesProducto`: Exposes CRUD operations for the **ImagenesProducto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ImagenesProductos
    * const imagenesProductos = await prisma.imagenesProducto.findMany()
    * ```
    */
  get imagenesProducto(): Prisma.ImagenesProductoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadosTransaccion`: Exposes CRUD operations for the **EstadosTransaccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstadosTransaccions
    * const estadosTransaccions = await prisma.estadosTransaccion.findMany()
    * ```
    */
  get estadosTransaccion(): Prisma.EstadosTransaccionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transacciones`: Exposes CRUD operations for the **Transacciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transacciones
    * const transacciones = await prisma.transacciones.findMany()
    * ```
    */
  get transacciones(): Prisma.TransaccionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.calificaciones`: Exposes CRUD operations for the **Calificaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Calificaciones
    * const calificaciones = await prisma.calificaciones.findMany()
    * ```
    */
  get calificaciones(): Prisma.CalificacionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.carrito`: Exposes CRUD operations for the **Carrito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Carritos
    * const carritos = await prisma.carrito.findMany()
    * ```
    */
  get carrito(): Prisma.CarritoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mensajes`: Exposes CRUD operations for the **Mensajes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mensajes
    * const mensajes = await prisma.mensajes.findMany()
    * ```
    */
  get mensajes(): Prisma.MensajesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estadosReporte`: Exposes CRUD operations for the **EstadosReporte** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EstadosReportes
    * const estadosReportes = await prisma.estadosReporte.findMany()
    * ```
    */
  get estadosReporte(): Prisma.EstadosReporteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reportes`: Exposes CRUD operations for the **Reportes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reportes
    * const reportes = await prisma.reportes.findMany()
    * ```
    */
  get reportes(): Prisma.ReportesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.actividadUsuario`: Exposes CRUD operations for the **ActividadUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ActividadUsuarios
    * const actividadUsuarios = await prisma.actividadUsuario.findMany()
    * ```
    */
  get actividadUsuario(): Prisma.ActividadUsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notificaciones`: Exposes CRUD operations for the **Notificaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notificaciones
    * const notificaciones = await prisma.notificaciones.findMany()
    * ```
    */
  get notificaciones(): Prisma.NotificacionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.publicaciones`: Exposes CRUD operations for the **Publicaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Publicaciones
    * const publicaciones = await prisma.publicaciones.findMany()
    * ```
    */
  get publicaciones(): Prisma.PublicacionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.foros`: Exposes CRUD operations for the **Foros** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Foros
    * const foros = await prisma.foros.findMany()
    * ```
    */
  get foros(): Prisma.ForosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.publicacionesForo`: Exposes CRUD operations for the **PublicacionesForo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PublicacionesForos
    * const publicacionesForos = await prisma.publicacionesForo.findMany()
    * ```
    */
  get publicacionesForo(): Prisma.PublicacionesForoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comentariosPublicacion`: Exposes CRUD operations for the **ComentariosPublicacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ComentariosPublicacions
    * const comentariosPublicacions = await prisma.comentariosPublicacion.findMany()
    * ```
    */
  get comentariosPublicacion(): Prisma.ComentariosPublicacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ubicaciones`: Exposes CRUD operations for the **Ubicaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ubicaciones
    * const ubicaciones = await prisma.ubicaciones.findMany()
    * ```
    */
  get ubicaciones(): Prisma.UbicacionesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.resumenUsuario`: Exposes CRUD operations for the **ResumenUsuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ResumenUsuarios
    * const resumenUsuarios = await prisma.resumenUsuario.findMany()
    * ```
    */
  get resumenUsuario(): Prisma.ResumenUsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.seguidores`: Exposes CRUD operations for the **Seguidores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Seguidores
    * const seguidores = await prisma.seguidores.findMany()
    * ```
    */
  get seguidores(): Prisma.SeguidoresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.metricasDiarias`: Exposes CRUD operations for the **MetricasDiarias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MetricasDiarias
    * const metricasDiarias = await prisma.metricasDiarias.findMany()
    * ```
    */
  get metricasDiarias(): Prisma.MetricasDiariasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.favoritos`: Exposes CRUD operations for the **Favoritos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favoritos
    * const favoritos = await prisma.favoritos.findMany()
    * ```
    */
  get favoritos(): Prisma.FavoritosDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.16.3
   * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Cuentas: 'Cuentas',
    Roles: 'Roles',
    EstadosUsuario: 'EstadosUsuario',
    Categorias: 'Categorias',
    EstadosProducto: 'EstadosProducto',
    Productos: 'Productos',
    ImagenesProducto: 'ImagenesProducto',
    EstadosTransaccion: 'EstadosTransaccion',
    Transacciones: 'Transacciones',
    Calificaciones: 'Calificaciones',
    Carrito: 'Carrito',
    Mensajes: 'Mensajes',
    EstadosReporte: 'EstadosReporte',
    Reportes: 'Reportes',
    ActividadUsuario: 'ActividadUsuario',
    Notificaciones: 'Notificaciones',
    Publicaciones: 'Publicaciones',
    Foros: 'Foros',
    PublicacionesForo: 'PublicacionesForo',
    ComentariosPublicacion: 'ComentariosPublicacion',
    Ubicaciones: 'Ubicaciones',
    ResumenUsuario: 'ResumenUsuario',
    Seguidores: 'Seguidores',
    MetricasDiarias: 'MetricasDiarias',
    Favoritos: 'Favoritos'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "cuentas" | "roles" | "estadosUsuario" | "categorias" | "estadosProducto" | "productos" | "imagenesProducto" | "estadosTransaccion" | "transacciones" | "calificaciones" | "carrito" | "mensajes" | "estadosReporte" | "reportes" | "actividadUsuario" | "notificaciones" | "publicaciones" | "foros" | "publicacionesForo" | "comentariosPublicacion" | "ubicaciones" | "resumenUsuario" | "seguidores" | "metricasDiarias" | "favoritos"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Cuentas: {
        payload: Prisma.$CuentasPayload<ExtArgs>
        fields: Prisma.CuentasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CuentasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CuentasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload>
          }
          findFirst: {
            args: Prisma.CuentasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CuentasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload>
          }
          findMany: {
            args: Prisma.CuentasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload>[]
          }
          create: {
            args: Prisma.CuentasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload>
          }
          createMany: {
            args: Prisma.CuentasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CuentasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload>[]
          }
          delete: {
            args: Prisma.CuentasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload>
          }
          update: {
            args: Prisma.CuentasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload>
          }
          deleteMany: {
            args: Prisma.CuentasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CuentasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CuentasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload>[]
          }
          upsert: {
            args: Prisma.CuentasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CuentasPayload>
          }
          aggregate: {
            args: Prisma.CuentasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCuentas>
          }
          groupBy: {
            args: Prisma.CuentasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CuentasGroupByOutputType>[]
          }
          count: {
            args: Prisma.CuentasCountArgs<ExtArgs>
            result: $Utils.Optional<CuentasCountAggregateOutputType> | number
          }
        }
      }
      Roles: {
        payload: Prisma.$RolesPayload<ExtArgs>
        fields: Prisma.RolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload>
          }
          findFirst: {
            args: Prisma.RolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload>
          }
          findMany: {
            args: Prisma.RolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload>[]
          }
          create: {
            args: Prisma.RolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload>
          }
          createMany: {
            args: Prisma.RolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RolesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload>[]
          }
          delete: {
            args: Prisma.RolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload>
          }
          update: {
            args: Prisma.RolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload>
          }
          deleteMany: {
            args: Prisma.RolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RolesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload>[]
          }
          upsert: {
            args: Prisma.RolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolesPayload>
          }
          aggregate: {
            args: Prisma.RolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoles>
          }
          groupBy: {
            args: Prisma.RolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolesCountArgs<ExtArgs>
            result: $Utils.Optional<RolesCountAggregateOutputType> | number
          }
        }
      }
      EstadosUsuario: {
        payload: Prisma.$EstadosUsuarioPayload<ExtArgs>
        fields: Prisma.EstadosUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstadosUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstadosUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload>
          }
          findFirst: {
            args: Prisma.EstadosUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstadosUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload>
          }
          findMany: {
            args: Prisma.EstadosUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload>[]
          }
          create: {
            args: Prisma.EstadosUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload>
          }
          createMany: {
            args: Prisma.EstadosUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstadosUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload>[]
          }
          delete: {
            args: Prisma.EstadosUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload>
          }
          update: {
            args: Prisma.EstadosUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.EstadosUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstadosUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstadosUsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload>[]
          }
          upsert: {
            args: Prisma.EstadosUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosUsuarioPayload>
          }
          aggregate: {
            args: Prisma.EstadosUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadosUsuario>
          }
          groupBy: {
            args: Prisma.EstadosUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadosUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstadosUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<EstadosUsuarioCountAggregateOutputType> | number
          }
        }
      }
      Categorias: {
        payload: Prisma.$CategoriasPayload<ExtArgs>
        fields: Prisma.CategoriasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload>
          }
          findFirst: {
            args: Prisma.CategoriasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload>
          }
          findMany: {
            args: Prisma.CategoriasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload>[]
          }
          create: {
            args: Prisma.CategoriasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload>
          }
          createMany: {
            args: Prisma.CategoriasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoriasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload>[]
          }
          delete: {
            args: Prisma.CategoriasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload>
          }
          update: {
            args: Prisma.CategoriasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload>
          }
          deleteMany: {
            args: Prisma.CategoriasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoriasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload>[]
          }
          upsert: {
            args: Prisma.CategoriasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoriasPayload>
          }
          aggregate: {
            args: Prisma.CategoriasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategorias>
          }
          groupBy: {
            args: Prisma.CategoriasGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriasGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriasCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriasCountAggregateOutputType> | number
          }
        }
      }
      EstadosProducto: {
        payload: Prisma.$EstadosProductoPayload<ExtArgs>
        fields: Prisma.EstadosProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstadosProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstadosProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload>
          }
          findFirst: {
            args: Prisma.EstadosProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstadosProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload>
          }
          findMany: {
            args: Prisma.EstadosProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload>[]
          }
          create: {
            args: Prisma.EstadosProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload>
          }
          createMany: {
            args: Prisma.EstadosProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstadosProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload>[]
          }
          delete: {
            args: Prisma.EstadosProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload>
          }
          update: {
            args: Prisma.EstadosProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload>
          }
          deleteMany: {
            args: Prisma.EstadosProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstadosProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstadosProductoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload>[]
          }
          upsert: {
            args: Prisma.EstadosProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosProductoPayload>
          }
          aggregate: {
            args: Prisma.EstadosProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadosProducto>
          }
          groupBy: {
            args: Prisma.EstadosProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadosProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstadosProductoCountArgs<ExtArgs>
            result: $Utils.Optional<EstadosProductoCountAggregateOutputType> | number
          }
        }
      }
      Productos: {
        payload: Prisma.$ProductosPayload<ExtArgs>
        fields: Prisma.ProductosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          findFirst: {
            args: Prisma.ProductosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          findMany: {
            args: Prisma.ProductosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>[]
          }
          create: {
            args: Prisma.ProductosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          createMany: {
            args: Prisma.ProductosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>[]
          }
          delete: {
            args: Prisma.ProductosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          update: {
            args: Prisma.ProductosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          deleteMany: {
            args: Prisma.ProductosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>[]
          }
          upsert: {
            args: Prisma.ProductosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductosPayload>
          }
          aggregate: {
            args: Prisma.ProductosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductos>
          }
          groupBy: {
            args: Prisma.ProductosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductosGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductosCountArgs<ExtArgs>
            result: $Utils.Optional<ProductosCountAggregateOutputType> | number
          }
        }
      }
      ImagenesProducto: {
        payload: Prisma.$ImagenesProductoPayload<ExtArgs>
        fields: Prisma.ImagenesProductoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ImagenesProductoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ImagenesProductoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload>
          }
          findFirst: {
            args: Prisma.ImagenesProductoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ImagenesProductoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload>
          }
          findMany: {
            args: Prisma.ImagenesProductoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload>[]
          }
          create: {
            args: Prisma.ImagenesProductoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload>
          }
          createMany: {
            args: Prisma.ImagenesProductoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ImagenesProductoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload>[]
          }
          delete: {
            args: Prisma.ImagenesProductoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload>
          }
          update: {
            args: Prisma.ImagenesProductoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload>
          }
          deleteMany: {
            args: Prisma.ImagenesProductoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ImagenesProductoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ImagenesProductoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload>[]
          }
          upsert: {
            args: Prisma.ImagenesProductoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagenesProductoPayload>
          }
          aggregate: {
            args: Prisma.ImagenesProductoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImagenesProducto>
          }
          groupBy: {
            args: Prisma.ImagenesProductoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImagenesProductoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ImagenesProductoCountArgs<ExtArgs>
            result: $Utils.Optional<ImagenesProductoCountAggregateOutputType> | number
          }
        }
      }
      EstadosTransaccion: {
        payload: Prisma.$EstadosTransaccionPayload<ExtArgs>
        fields: Prisma.EstadosTransaccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstadosTransaccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstadosTransaccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload>
          }
          findFirst: {
            args: Prisma.EstadosTransaccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstadosTransaccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload>
          }
          findMany: {
            args: Prisma.EstadosTransaccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload>[]
          }
          create: {
            args: Prisma.EstadosTransaccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload>
          }
          createMany: {
            args: Prisma.EstadosTransaccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstadosTransaccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload>[]
          }
          delete: {
            args: Prisma.EstadosTransaccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload>
          }
          update: {
            args: Prisma.EstadosTransaccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload>
          }
          deleteMany: {
            args: Prisma.EstadosTransaccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstadosTransaccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstadosTransaccionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload>[]
          }
          upsert: {
            args: Prisma.EstadosTransaccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosTransaccionPayload>
          }
          aggregate: {
            args: Prisma.EstadosTransaccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadosTransaccion>
          }
          groupBy: {
            args: Prisma.EstadosTransaccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadosTransaccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstadosTransaccionCountArgs<ExtArgs>
            result: $Utils.Optional<EstadosTransaccionCountAggregateOutputType> | number
          }
        }
      }
      Transacciones: {
        payload: Prisma.$TransaccionesPayload<ExtArgs>
        fields: Prisma.TransaccionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransaccionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransaccionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload>
          }
          findFirst: {
            args: Prisma.TransaccionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransaccionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload>
          }
          findMany: {
            args: Prisma.TransaccionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload>[]
          }
          create: {
            args: Prisma.TransaccionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload>
          }
          createMany: {
            args: Prisma.TransaccionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransaccionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload>[]
          }
          delete: {
            args: Prisma.TransaccionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload>
          }
          update: {
            args: Prisma.TransaccionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload>
          }
          deleteMany: {
            args: Prisma.TransaccionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransaccionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransaccionesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload>[]
          }
          upsert: {
            args: Prisma.TransaccionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransaccionesPayload>
          }
          aggregate: {
            args: Prisma.TransaccionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransacciones>
          }
          groupBy: {
            args: Prisma.TransaccionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransaccionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransaccionesCountArgs<ExtArgs>
            result: $Utils.Optional<TransaccionesCountAggregateOutputType> | number
          }
        }
      }
      Calificaciones: {
        payload: Prisma.$CalificacionesPayload<ExtArgs>
        fields: Prisma.CalificacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CalificacionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CalificacionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload>
          }
          findFirst: {
            args: Prisma.CalificacionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CalificacionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload>
          }
          findMany: {
            args: Prisma.CalificacionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload>[]
          }
          create: {
            args: Prisma.CalificacionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload>
          }
          createMany: {
            args: Prisma.CalificacionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CalificacionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload>[]
          }
          delete: {
            args: Prisma.CalificacionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload>
          }
          update: {
            args: Prisma.CalificacionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload>
          }
          deleteMany: {
            args: Prisma.CalificacionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CalificacionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CalificacionesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload>[]
          }
          upsert: {
            args: Prisma.CalificacionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CalificacionesPayload>
          }
          aggregate: {
            args: Prisma.CalificacionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCalificaciones>
          }
          groupBy: {
            args: Prisma.CalificacionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CalificacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.CalificacionesCountArgs<ExtArgs>
            result: $Utils.Optional<CalificacionesCountAggregateOutputType> | number
          }
        }
      }
      Carrito: {
        payload: Prisma.$CarritoPayload<ExtArgs>
        fields: Prisma.CarritoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CarritoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CarritoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload>
          }
          findFirst: {
            args: Prisma.CarritoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CarritoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload>
          }
          findMany: {
            args: Prisma.CarritoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload>[]
          }
          create: {
            args: Prisma.CarritoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload>
          }
          createMany: {
            args: Prisma.CarritoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CarritoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload>[]
          }
          delete: {
            args: Prisma.CarritoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload>
          }
          update: {
            args: Prisma.CarritoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload>
          }
          deleteMany: {
            args: Prisma.CarritoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CarritoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CarritoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload>[]
          }
          upsert: {
            args: Prisma.CarritoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CarritoPayload>
          }
          aggregate: {
            args: Prisma.CarritoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCarrito>
          }
          groupBy: {
            args: Prisma.CarritoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CarritoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CarritoCountArgs<ExtArgs>
            result: $Utils.Optional<CarritoCountAggregateOutputType> | number
          }
        }
      }
      Mensajes: {
        payload: Prisma.$MensajesPayload<ExtArgs>
        fields: Prisma.MensajesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MensajesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MensajesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload>
          }
          findFirst: {
            args: Prisma.MensajesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MensajesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload>
          }
          findMany: {
            args: Prisma.MensajesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload>[]
          }
          create: {
            args: Prisma.MensajesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload>
          }
          createMany: {
            args: Prisma.MensajesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MensajesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload>[]
          }
          delete: {
            args: Prisma.MensajesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload>
          }
          update: {
            args: Prisma.MensajesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload>
          }
          deleteMany: {
            args: Prisma.MensajesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MensajesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MensajesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload>[]
          }
          upsert: {
            args: Prisma.MensajesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MensajesPayload>
          }
          aggregate: {
            args: Prisma.MensajesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMensajes>
          }
          groupBy: {
            args: Prisma.MensajesGroupByArgs<ExtArgs>
            result: $Utils.Optional<MensajesGroupByOutputType>[]
          }
          count: {
            args: Prisma.MensajesCountArgs<ExtArgs>
            result: $Utils.Optional<MensajesCountAggregateOutputType> | number
          }
        }
      }
      EstadosReporte: {
        payload: Prisma.$EstadosReportePayload<ExtArgs>
        fields: Prisma.EstadosReporteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstadosReporteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstadosReporteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload>
          }
          findFirst: {
            args: Prisma.EstadosReporteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstadosReporteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload>
          }
          findMany: {
            args: Prisma.EstadosReporteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload>[]
          }
          create: {
            args: Prisma.EstadosReporteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload>
          }
          createMany: {
            args: Prisma.EstadosReporteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstadosReporteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload>[]
          }
          delete: {
            args: Prisma.EstadosReporteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload>
          }
          update: {
            args: Prisma.EstadosReporteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload>
          }
          deleteMany: {
            args: Prisma.EstadosReporteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstadosReporteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstadosReporteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload>[]
          }
          upsert: {
            args: Prisma.EstadosReporteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstadosReportePayload>
          }
          aggregate: {
            args: Prisma.EstadosReporteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstadosReporte>
          }
          groupBy: {
            args: Prisma.EstadosReporteGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstadosReporteGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstadosReporteCountArgs<ExtArgs>
            result: $Utils.Optional<EstadosReporteCountAggregateOutputType> | number
          }
        }
      }
      Reportes: {
        payload: Prisma.$ReportesPayload<ExtArgs>
        fields: Prisma.ReportesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReportesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReportesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload>
          }
          findFirst: {
            args: Prisma.ReportesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReportesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload>
          }
          findMany: {
            args: Prisma.ReportesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload>[]
          }
          create: {
            args: Prisma.ReportesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload>
          }
          createMany: {
            args: Prisma.ReportesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReportesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload>[]
          }
          delete: {
            args: Prisma.ReportesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload>
          }
          update: {
            args: Prisma.ReportesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload>
          }
          deleteMany: {
            args: Prisma.ReportesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReportesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReportesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload>[]
          }
          upsert: {
            args: Prisma.ReportesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportesPayload>
          }
          aggregate: {
            args: Prisma.ReportesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReportes>
          }
          groupBy: {
            args: Prisma.ReportesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReportesCountArgs<ExtArgs>
            result: $Utils.Optional<ReportesCountAggregateOutputType> | number
          }
        }
      }
      ActividadUsuario: {
        payload: Prisma.$ActividadUsuarioPayload<ExtArgs>
        fields: Prisma.ActividadUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ActividadUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ActividadUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload>
          }
          findFirst: {
            args: Prisma.ActividadUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ActividadUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload>
          }
          findMany: {
            args: Prisma.ActividadUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload>[]
          }
          create: {
            args: Prisma.ActividadUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload>
          }
          createMany: {
            args: Prisma.ActividadUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ActividadUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload>[]
          }
          delete: {
            args: Prisma.ActividadUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload>
          }
          update: {
            args: Prisma.ActividadUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.ActividadUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ActividadUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ActividadUsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload>[]
          }
          upsert: {
            args: Prisma.ActividadUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ActividadUsuarioPayload>
          }
          aggregate: {
            args: Prisma.ActividadUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateActividadUsuario>
          }
          groupBy: {
            args: Prisma.ActividadUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ActividadUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.ActividadUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<ActividadUsuarioCountAggregateOutputType> | number
          }
        }
      }
      Notificaciones: {
        payload: Prisma.$NotificacionesPayload<ExtArgs>
        fields: Prisma.NotificacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificacionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificacionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload>
          }
          findFirst: {
            args: Prisma.NotificacionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificacionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload>
          }
          findMany: {
            args: Prisma.NotificacionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload>[]
          }
          create: {
            args: Prisma.NotificacionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload>
          }
          createMany: {
            args: Prisma.NotificacionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificacionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload>[]
          }
          delete: {
            args: Prisma.NotificacionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload>
          }
          update: {
            args: Prisma.NotificacionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload>
          }
          deleteMany: {
            args: Prisma.NotificacionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificacionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificacionesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload>[]
          }
          upsert: {
            args: Prisma.NotificacionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificacionesPayload>
          }
          aggregate: {
            args: Prisma.NotificacionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotificaciones>
          }
          groupBy: {
            args: Prisma.NotificacionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificacionesCountArgs<ExtArgs>
            result: $Utils.Optional<NotificacionesCountAggregateOutputType> | number
          }
        }
      }
      Publicaciones: {
        payload: Prisma.$PublicacionesPayload<ExtArgs>
        fields: Prisma.PublicacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PublicacionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PublicacionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          findFirst: {
            args: Prisma.PublicacionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PublicacionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          findMany: {
            args: Prisma.PublicacionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>[]
          }
          create: {
            args: Prisma.PublicacionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          createMany: {
            args: Prisma.PublicacionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PublicacionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>[]
          }
          delete: {
            args: Prisma.PublicacionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          update: {
            args: Prisma.PublicacionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          deleteMany: {
            args: Prisma.PublicacionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PublicacionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PublicacionesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>[]
          }
          upsert: {
            args: Prisma.PublicacionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesPayload>
          }
          aggregate: {
            args: Prisma.PublicacionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePublicaciones>
          }
          groupBy: {
            args: Prisma.PublicacionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PublicacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.PublicacionesCountArgs<ExtArgs>
            result: $Utils.Optional<PublicacionesCountAggregateOutputType> | number
          }
        }
      }
      Foros: {
        payload: Prisma.$ForosPayload<ExtArgs>
        fields: Prisma.ForosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ForosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ForosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload>
          }
          findFirst: {
            args: Prisma.ForosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ForosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload>
          }
          findMany: {
            args: Prisma.ForosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload>[]
          }
          create: {
            args: Prisma.ForosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload>
          }
          createMany: {
            args: Prisma.ForosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ForosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload>[]
          }
          delete: {
            args: Prisma.ForosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload>
          }
          update: {
            args: Prisma.ForosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload>
          }
          deleteMany: {
            args: Prisma.ForosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ForosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ForosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload>[]
          }
          upsert: {
            args: Prisma.ForosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForosPayload>
          }
          aggregate: {
            args: Prisma.ForosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateForos>
          }
          groupBy: {
            args: Prisma.ForosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ForosGroupByOutputType>[]
          }
          count: {
            args: Prisma.ForosCountArgs<ExtArgs>
            result: $Utils.Optional<ForosCountAggregateOutputType> | number
          }
        }
      }
      PublicacionesForo: {
        payload: Prisma.$PublicacionesForoPayload<ExtArgs>
        fields: Prisma.PublicacionesForoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PublicacionesForoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PublicacionesForoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload>
          }
          findFirst: {
            args: Prisma.PublicacionesForoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PublicacionesForoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload>
          }
          findMany: {
            args: Prisma.PublicacionesForoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload>[]
          }
          create: {
            args: Prisma.PublicacionesForoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload>
          }
          createMany: {
            args: Prisma.PublicacionesForoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PublicacionesForoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload>[]
          }
          delete: {
            args: Prisma.PublicacionesForoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload>
          }
          update: {
            args: Prisma.PublicacionesForoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload>
          }
          deleteMany: {
            args: Prisma.PublicacionesForoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PublicacionesForoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PublicacionesForoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload>[]
          }
          upsert: {
            args: Prisma.PublicacionesForoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PublicacionesForoPayload>
          }
          aggregate: {
            args: Prisma.PublicacionesForoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePublicacionesForo>
          }
          groupBy: {
            args: Prisma.PublicacionesForoGroupByArgs<ExtArgs>
            result: $Utils.Optional<PublicacionesForoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PublicacionesForoCountArgs<ExtArgs>
            result: $Utils.Optional<PublicacionesForoCountAggregateOutputType> | number
          }
        }
      }
      ComentariosPublicacion: {
        payload: Prisma.$ComentariosPublicacionPayload<ExtArgs>
        fields: Prisma.ComentariosPublicacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComentariosPublicacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComentariosPublicacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload>
          }
          findFirst: {
            args: Prisma.ComentariosPublicacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComentariosPublicacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload>
          }
          findMany: {
            args: Prisma.ComentariosPublicacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload>[]
          }
          create: {
            args: Prisma.ComentariosPublicacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload>
          }
          createMany: {
            args: Prisma.ComentariosPublicacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComentariosPublicacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload>[]
          }
          delete: {
            args: Prisma.ComentariosPublicacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload>
          }
          update: {
            args: Prisma.ComentariosPublicacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload>
          }
          deleteMany: {
            args: Prisma.ComentariosPublicacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComentariosPublicacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ComentariosPublicacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload>[]
          }
          upsert: {
            args: Prisma.ComentariosPublicacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComentariosPublicacionPayload>
          }
          aggregate: {
            args: Prisma.ComentariosPublicacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComentariosPublicacion>
          }
          groupBy: {
            args: Prisma.ComentariosPublicacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComentariosPublicacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComentariosPublicacionCountArgs<ExtArgs>
            result: $Utils.Optional<ComentariosPublicacionCountAggregateOutputType> | number
          }
        }
      }
      Ubicaciones: {
        payload: Prisma.$UbicacionesPayload<ExtArgs>
        fields: Prisma.UbicacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UbicacionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UbicacionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload>
          }
          findFirst: {
            args: Prisma.UbicacionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UbicacionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload>
          }
          findMany: {
            args: Prisma.UbicacionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload>[]
          }
          create: {
            args: Prisma.UbicacionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload>
          }
          createMany: {
            args: Prisma.UbicacionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UbicacionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload>[]
          }
          delete: {
            args: Prisma.UbicacionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload>
          }
          update: {
            args: Prisma.UbicacionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload>
          }
          deleteMany: {
            args: Prisma.UbicacionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UbicacionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UbicacionesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload>[]
          }
          upsert: {
            args: Prisma.UbicacionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UbicacionesPayload>
          }
          aggregate: {
            args: Prisma.UbicacionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUbicaciones>
          }
          groupBy: {
            args: Prisma.UbicacionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<UbicacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.UbicacionesCountArgs<ExtArgs>
            result: $Utils.Optional<UbicacionesCountAggregateOutputType> | number
          }
        }
      }
      ResumenUsuario: {
        payload: Prisma.$ResumenUsuarioPayload<ExtArgs>
        fields: Prisma.ResumenUsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ResumenUsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ResumenUsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload>
          }
          findFirst: {
            args: Prisma.ResumenUsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ResumenUsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload>
          }
          findMany: {
            args: Prisma.ResumenUsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload>[]
          }
          create: {
            args: Prisma.ResumenUsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload>
          }
          createMany: {
            args: Prisma.ResumenUsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ResumenUsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload>[]
          }
          delete: {
            args: Prisma.ResumenUsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload>
          }
          update: {
            args: Prisma.ResumenUsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload>
          }
          deleteMany: {
            args: Prisma.ResumenUsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ResumenUsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ResumenUsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload>[]
          }
          upsert: {
            args: Prisma.ResumenUsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ResumenUsuarioPayload>
          }
          aggregate: {
            args: Prisma.ResumenUsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateResumenUsuario>
          }
          groupBy: {
            args: Prisma.ResumenUsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<ResumenUsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.ResumenUsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<ResumenUsuarioCountAggregateOutputType> | number
          }
        }
      }
      Seguidores: {
        payload: Prisma.$SeguidoresPayload<ExtArgs>
        fields: Prisma.SeguidoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SeguidoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SeguidoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload>
          }
          findFirst: {
            args: Prisma.SeguidoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SeguidoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload>
          }
          findMany: {
            args: Prisma.SeguidoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload>[]
          }
          create: {
            args: Prisma.SeguidoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload>
          }
          createMany: {
            args: Prisma.SeguidoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SeguidoresCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload>[]
          }
          delete: {
            args: Prisma.SeguidoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload>
          }
          update: {
            args: Prisma.SeguidoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload>
          }
          deleteMany: {
            args: Prisma.SeguidoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SeguidoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SeguidoresUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload>[]
          }
          upsert: {
            args: Prisma.SeguidoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SeguidoresPayload>
          }
          aggregate: {
            args: Prisma.SeguidoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeguidores>
          }
          groupBy: {
            args: Prisma.SeguidoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<SeguidoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.SeguidoresCountArgs<ExtArgs>
            result: $Utils.Optional<SeguidoresCountAggregateOutputType> | number
          }
        }
      }
      MetricasDiarias: {
        payload: Prisma.$MetricasDiariasPayload<ExtArgs>
        fields: Prisma.MetricasDiariasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MetricasDiariasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MetricasDiariasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload>
          }
          findFirst: {
            args: Prisma.MetricasDiariasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MetricasDiariasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload>
          }
          findMany: {
            args: Prisma.MetricasDiariasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload>[]
          }
          create: {
            args: Prisma.MetricasDiariasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload>
          }
          createMany: {
            args: Prisma.MetricasDiariasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MetricasDiariasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload>[]
          }
          delete: {
            args: Prisma.MetricasDiariasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload>
          }
          update: {
            args: Prisma.MetricasDiariasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload>
          }
          deleteMany: {
            args: Prisma.MetricasDiariasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MetricasDiariasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MetricasDiariasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload>[]
          }
          upsert: {
            args: Prisma.MetricasDiariasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasDiariasPayload>
          }
          aggregate: {
            args: Prisma.MetricasDiariasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMetricasDiarias>
          }
          groupBy: {
            args: Prisma.MetricasDiariasGroupByArgs<ExtArgs>
            result: $Utils.Optional<MetricasDiariasGroupByOutputType>[]
          }
          count: {
            args: Prisma.MetricasDiariasCountArgs<ExtArgs>
            result: $Utils.Optional<MetricasDiariasCountAggregateOutputType> | number
          }
        }
      }
      Favoritos: {
        payload: Prisma.$FavoritosPayload<ExtArgs>
        fields: Prisma.FavoritosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoritosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoritosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          findFirst: {
            args: Prisma.FavoritosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoritosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          findMany: {
            args: Prisma.FavoritosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>[]
          }
          create: {
            args: Prisma.FavoritosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          createMany: {
            args: Prisma.FavoritosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoritosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>[]
          }
          delete: {
            args: Prisma.FavoritosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          update: {
            args: Prisma.FavoritosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          deleteMany: {
            args: Prisma.FavoritosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoritosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FavoritosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>[]
          }
          upsert: {
            args: Prisma.FavoritosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          aggregate: {
            args: Prisma.FavoritosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavoritos>
          }
          groupBy: {
            args: Prisma.FavoritosGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoritosGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoritosCountArgs<ExtArgs>
            result: $Utils.Optional<FavoritosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    cuentas?: CuentasOmit
    roles?: RolesOmit
    estadosUsuario?: EstadosUsuarioOmit
    categorias?: CategoriasOmit
    estadosProducto?: EstadosProductoOmit
    productos?: ProductosOmit
    imagenesProducto?: ImagenesProductoOmit
    estadosTransaccion?: EstadosTransaccionOmit
    transacciones?: TransaccionesOmit
    calificaciones?: CalificacionesOmit
    carrito?: CarritoOmit
    mensajes?: MensajesOmit
    estadosReporte?: EstadosReporteOmit
    reportes?: ReportesOmit
    actividadUsuario?: ActividadUsuarioOmit
    notificaciones?: NotificacionesOmit
    publicaciones?: PublicacionesOmit
    foros?: ForosOmit
    publicacionesForo?: PublicacionesForoOmit
    comentariosPublicacion?: ComentariosPublicacionOmit
    ubicaciones?: UbicacionesOmit
    resumenUsuario?: ResumenUsuarioOmit
    seguidores?: SeguidoresOmit
    metricasDiarias?: MetricasDiariasOmit
    favoritos?: FavoritosOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CuentasCountOutputType
   */

  export type CuentasCountOutputType = {
    productos: number
    transaccionesCompra: number
    transaccionesVenta: number
    calificacionesDadas: number
    calificacionesRecibidas: number
    carrito: number
    actividades: number
    mensajesEnviados: number
    mensajesRecibidos: number
    reportes: number
    reportesRecibidos: number
    publicaciones: number
    foros: number
    publicacionesForo: number
    comentariosPublicacion: number
    notificaciones: number
    ubicaciones: number
    siguiendo: number
    seguidores: number
    favoritos: number
  }

  export type CuentasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | CuentasCountOutputTypeCountProductosArgs
    transaccionesCompra?: boolean | CuentasCountOutputTypeCountTransaccionesCompraArgs
    transaccionesVenta?: boolean | CuentasCountOutputTypeCountTransaccionesVentaArgs
    calificacionesDadas?: boolean | CuentasCountOutputTypeCountCalificacionesDadasArgs
    calificacionesRecibidas?: boolean | CuentasCountOutputTypeCountCalificacionesRecibidasArgs
    carrito?: boolean | CuentasCountOutputTypeCountCarritoArgs
    actividades?: boolean | CuentasCountOutputTypeCountActividadesArgs
    mensajesEnviados?: boolean | CuentasCountOutputTypeCountMensajesEnviadosArgs
    mensajesRecibidos?: boolean | CuentasCountOutputTypeCountMensajesRecibidosArgs
    reportes?: boolean | CuentasCountOutputTypeCountReportesArgs
    reportesRecibidos?: boolean | CuentasCountOutputTypeCountReportesRecibidosArgs
    publicaciones?: boolean | CuentasCountOutputTypeCountPublicacionesArgs
    foros?: boolean | CuentasCountOutputTypeCountForosArgs
    publicacionesForo?: boolean | CuentasCountOutputTypeCountPublicacionesForoArgs
    comentariosPublicacion?: boolean | CuentasCountOutputTypeCountComentariosPublicacionArgs
    notificaciones?: boolean | CuentasCountOutputTypeCountNotificacionesArgs
    ubicaciones?: boolean | CuentasCountOutputTypeCountUbicacionesArgs
    siguiendo?: boolean | CuentasCountOutputTypeCountSiguiendoArgs
    seguidores?: boolean | CuentasCountOutputTypeCountSeguidoresArgs
    favoritos?: boolean | CuentasCountOutputTypeCountFavoritosArgs
  }

  // Custom InputTypes
  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CuentasCountOutputType
     */
    select?: CuentasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductosWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountTransaccionesCompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountTransaccionesVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountCalificacionesDadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountCalificacionesRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountCarritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarritoWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountActividadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActividadUsuarioWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountMensajesEnviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensajesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountMensajesRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensajesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountReportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountReportesRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountPublicacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountForosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ForosWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountPublicacionesForoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionesForoWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountComentariosPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentariosPublicacionWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountNotificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountUbicacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UbicacionesWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountSiguiendoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeguidoresWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountSeguidoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeguidoresWhereInput
  }

  /**
   * CuentasCountOutputType without action
   */
  export type CuentasCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritosWhereInput
  }


  /**
   * Count Type RolesCountOutputType
   */

  export type RolesCountOutputType = {
    cuentas: number
  }

  export type RolesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cuentas?: boolean | RolesCountOutputTypeCountCuentasArgs
  }

  // Custom InputTypes
  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolesCountOutputType
     */
    select?: RolesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountCuentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CuentasWhereInput
  }


  /**
   * Count Type EstadosUsuarioCountOutputType
   */

  export type EstadosUsuarioCountOutputType = {
    cuentas: number
  }

  export type EstadosUsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cuentas?: boolean | EstadosUsuarioCountOutputTypeCountCuentasArgs
  }

  // Custom InputTypes
  /**
   * EstadosUsuarioCountOutputType without action
   */
  export type EstadosUsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuarioCountOutputType
     */
    select?: EstadosUsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadosUsuarioCountOutputType without action
   */
  export type EstadosUsuarioCountOutputTypeCountCuentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CuentasWhereInput
  }


  /**
   * Count Type CategoriasCountOutputType
   */

  export type CategoriasCountOutputType = {
    subcategorias: number
    productos: number
  }

  export type CategoriasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subcategorias?: boolean | CategoriasCountOutputTypeCountSubcategoriasArgs
    productos?: boolean | CategoriasCountOutputTypeCountProductosArgs
  }

  // Custom InputTypes
  /**
   * CategoriasCountOutputType without action
   */
  export type CategoriasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriasCountOutputType
     */
    select?: CategoriasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriasCountOutputType without action
   */
  export type CategoriasCountOutputTypeCountSubcategoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriasWhereInput
  }

  /**
   * CategoriasCountOutputType without action
   */
  export type CategoriasCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductosWhereInput
  }


  /**
   * Count Type EstadosProductoCountOutputType
   */

  export type EstadosProductoCountOutputType = {
    productos: number
  }

  export type EstadosProductoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | EstadosProductoCountOutputTypeCountProductosArgs
  }

  // Custom InputTypes
  /**
   * EstadosProductoCountOutputType without action
   */
  export type EstadosProductoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProductoCountOutputType
     */
    select?: EstadosProductoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadosProductoCountOutputType without action
   */
  export type EstadosProductoCountOutputTypeCountProductosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductosWhereInput
  }


  /**
   * Count Type ProductosCountOutputType
   */

  export type ProductosCountOutputType = {
    transacciones: number
    carrito: number
    imagenes: number
    reportes: number
  }

  export type ProductosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transacciones?: boolean | ProductosCountOutputTypeCountTransaccionesArgs
    carrito?: boolean | ProductosCountOutputTypeCountCarritoArgs
    imagenes?: boolean | ProductosCountOutputTypeCountImagenesArgs
    reportes?: boolean | ProductosCountOutputTypeCountReportesArgs
  }

  // Custom InputTypes
  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductosCountOutputType
     */
    select?: ProductosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountTransaccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionesWhereInput
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountCarritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarritoWhereInput
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountImagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImagenesProductoWhereInput
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountReportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportesWhereInput
  }


  /**
   * Count Type EstadosTransaccionCountOutputType
   */

  export type EstadosTransaccionCountOutputType = {
    transacciones: number
  }

  export type EstadosTransaccionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transacciones?: boolean | EstadosTransaccionCountOutputTypeCountTransaccionesArgs
  }

  // Custom InputTypes
  /**
   * EstadosTransaccionCountOutputType without action
   */
  export type EstadosTransaccionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccionCountOutputType
     */
    select?: EstadosTransaccionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadosTransaccionCountOutputType without action
   */
  export type EstadosTransaccionCountOutputTypeCountTransaccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionesWhereInput
  }


  /**
   * Count Type TransaccionesCountOutputType
   */

  export type TransaccionesCountOutputType = {
    calificaciones: number
  }

  export type TransaccionesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    calificaciones?: boolean | TransaccionesCountOutputTypeCountCalificacionesArgs
  }

  // Custom InputTypes
  /**
   * TransaccionesCountOutputType without action
   */
  export type TransaccionesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransaccionesCountOutputType
     */
    select?: TransaccionesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TransaccionesCountOutputType without action
   */
  export type TransaccionesCountOutputTypeCountCalificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionesWhereInput
  }


  /**
   * Count Type EstadosReporteCountOutputType
   */

  export type EstadosReporteCountOutputType = {
    reportes: number
  }

  export type EstadosReporteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportes?: boolean | EstadosReporteCountOutputTypeCountReportesArgs
  }

  // Custom InputTypes
  /**
   * EstadosReporteCountOutputType without action
   */
  export type EstadosReporteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporteCountOutputType
     */
    select?: EstadosReporteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstadosReporteCountOutputType without action
   */
  export type EstadosReporteCountOutputTypeCountReportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportesWhereInput
  }


  /**
   * Count Type PublicacionesCountOutputType
   */

  export type PublicacionesCountOutputType = {
    favoritos: number
  }

  export type PublicacionesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favoritos?: boolean | PublicacionesCountOutputTypeCountFavoritosArgs
  }

  // Custom InputTypes
  /**
   * PublicacionesCountOutputType without action
   */
  export type PublicacionesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesCountOutputType
     */
    select?: PublicacionesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PublicacionesCountOutputType without action
   */
  export type PublicacionesCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritosWhereInput
  }


  /**
   * Count Type ForosCountOutputType
   */

  export type ForosCountOutputType = {
    publicaciones: number
  }

  export type ForosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    publicaciones?: boolean | ForosCountOutputTypeCountPublicacionesArgs
  }

  // Custom InputTypes
  /**
   * ForosCountOutputType without action
   */
  export type ForosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForosCountOutputType
     */
    select?: ForosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ForosCountOutputType without action
   */
  export type ForosCountOutputTypeCountPublicacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionesForoWhereInput
  }


  /**
   * Count Type PublicacionesForoCountOutputType
   */

  export type PublicacionesForoCountOutputType = {
    comentarios: number
  }

  export type PublicacionesForoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comentarios?: boolean | PublicacionesForoCountOutputTypeCountComentariosArgs
  }

  // Custom InputTypes
  /**
   * PublicacionesForoCountOutputType without action
   */
  export type PublicacionesForoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForoCountOutputType
     */
    select?: PublicacionesForoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PublicacionesForoCountOutputType without action
   */
  export type PublicacionesForoCountOutputTypeCountComentariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentariosPublicacionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Cuentas
   */

  export type AggregateCuentas = {
    _count: CuentasCountAggregateOutputType | null
    _avg: CuentasAvgAggregateOutputType | null
    _sum: CuentasSumAggregateOutputType | null
    _min: CuentasMinAggregateOutputType | null
    _max: CuentasMaxAggregateOutputType | null
  }

  export type CuentasAvgAggregateOutputType = {
    id: number | null
    rolId: number | null
    estadoId: number | null
    reputacion: Decimal | null
  }

  export type CuentasSumAggregateOutputType = {
    id: number | null
    rolId: number | null
    estadoId: number | null
    reputacion: Decimal | null
  }

  export type CuentasMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    correo: string | null
    usuario: string | null
    contrasena: string | null
    rolId: number | null
    estadoId: number | null
    fechaRegistro: Date | null
    campus: string | null
    reputacion: Decimal | null
  }

  export type CuentasMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    correo: string | null
    usuario: string | null
    contrasena: string | null
    rolId: number | null
    estadoId: number | null
    fechaRegistro: Date | null
    campus: string | null
    reputacion: Decimal | null
  }

  export type CuentasCountAggregateOutputType = {
    id: number
    nombre: number
    apellido: number
    correo: number
    usuario: number
    contrasena: number
    rolId: number
    estadoId: number
    fechaRegistro: number
    campus: number
    reputacion: number
    _all: number
  }


  export type CuentasAvgAggregateInputType = {
    id?: true
    rolId?: true
    estadoId?: true
    reputacion?: true
  }

  export type CuentasSumAggregateInputType = {
    id?: true
    rolId?: true
    estadoId?: true
    reputacion?: true
  }

  export type CuentasMinAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    correo?: true
    usuario?: true
    contrasena?: true
    rolId?: true
    estadoId?: true
    fechaRegistro?: true
    campus?: true
    reputacion?: true
  }

  export type CuentasMaxAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    correo?: true
    usuario?: true
    contrasena?: true
    rolId?: true
    estadoId?: true
    fechaRegistro?: true
    campus?: true
    reputacion?: true
  }

  export type CuentasCountAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    correo?: true
    usuario?: true
    contrasena?: true
    rolId?: true
    estadoId?: true
    fechaRegistro?: true
    campus?: true
    reputacion?: true
    _all?: true
  }

  export type CuentasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cuentas to aggregate.
     */
    where?: CuentasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cuentas to fetch.
     */
    orderBy?: CuentasOrderByWithRelationInput | CuentasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CuentasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cuentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cuentas
    **/
    _count?: true | CuentasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CuentasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CuentasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CuentasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CuentasMaxAggregateInputType
  }

  export type GetCuentasAggregateType<T extends CuentasAggregateArgs> = {
        [P in keyof T & keyof AggregateCuentas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCuentas[P]>
      : GetScalarType<T[P], AggregateCuentas[P]>
  }




  export type CuentasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CuentasWhereInput
    orderBy?: CuentasOrderByWithAggregationInput | CuentasOrderByWithAggregationInput[]
    by: CuentasScalarFieldEnum[] | CuentasScalarFieldEnum
    having?: CuentasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CuentasCountAggregateInputType | true
    _avg?: CuentasAvgAggregateInputType
    _sum?: CuentasSumAggregateInputType
    _min?: CuentasMinAggregateInputType
    _max?: CuentasMaxAggregateInputType
  }

  export type CuentasGroupByOutputType = {
    id: number
    nombre: string
    apellido: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro: Date
    campus: string | null
    reputacion: Decimal
    _count: CuentasCountAggregateOutputType | null
    _avg: CuentasAvgAggregateOutputType | null
    _sum: CuentasSumAggregateOutputType | null
    _min: CuentasMinAggregateOutputType | null
    _max: CuentasMaxAggregateOutputType | null
  }

  type GetCuentasGroupByPayload<T extends CuentasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CuentasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CuentasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CuentasGroupByOutputType[P]>
            : GetScalarType<T[P], CuentasGroupByOutputType[P]>
        }
      >
    >


  export type CuentasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    correo?: boolean
    usuario?: boolean
    contrasena?: boolean
    rolId?: boolean
    estadoId?: boolean
    fechaRegistro?: boolean
    campus?: boolean
    reputacion?: boolean
    rol?: boolean | RolesDefaultArgs<ExtArgs>
    estado?: boolean | EstadosUsuarioDefaultArgs<ExtArgs>
    productos?: boolean | Cuentas$productosArgs<ExtArgs>
    transaccionesCompra?: boolean | Cuentas$transaccionesCompraArgs<ExtArgs>
    transaccionesVenta?: boolean | Cuentas$transaccionesVentaArgs<ExtArgs>
    calificacionesDadas?: boolean | Cuentas$calificacionesDadasArgs<ExtArgs>
    calificacionesRecibidas?: boolean | Cuentas$calificacionesRecibidasArgs<ExtArgs>
    carrito?: boolean | Cuentas$carritoArgs<ExtArgs>
    actividades?: boolean | Cuentas$actividadesArgs<ExtArgs>
    mensajesEnviados?: boolean | Cuentas$mensajesEnviadosArgs<ExtArgs>
    mensajesRecibidos?: boolean | Cuentas$mensajesRecibidosArgs<ExtArgs>
    reportes?: boolean | Cuentas$reportesArgs<ExtArgs>
    reportesRecibidos?: boolean | Cuentas$reportesRecibidosArgs<ExtArgs>
    publicaciones?: boolean | Cuentas$publicacionesArgs<ExtArgs>
    foros?: boolean | Cuentas$forosArgs<ExtArgs>
    publicacionesForo?: boolean | Cuentas$publicacionesForoArgs<ExtArgs>
    comentariosPublicacion?: boolean | Cuentas$comentariosPublicacionArgs<ExtArgs>
    notificaciones?: boolean | Cuentas$notificacionesArgs<ExtArgs>
    ubicaciones?: boolean | Cuentas$ubicacionesArgs<ExtArgs>
    resumenUsuario?: boolean | Cuentas$resumenUsuarioArgs<ExtArgs>
    siguiendo?: boolean | Cuentas$siguiendoArgs<ExtArgs>
    seguidores?: boolean | Cuentas$seguidoresArgs<ExtArgs>
    favoritos?: boolean | Cuentas$favoritosArgs<ExtArgs>
    _count?: boolean | CuentasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cuentas"]>

  export type CuentasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    correo?: boolean
    usuario?: boolean
    contrasena?: boolean
    rolId?: boolean
    estadoId?: boolean
    fechaRegistro?: boolean
    campus?: boolean
    reputacion?: boolean
    rol?: boolean | RolesDefaultArgs<ExtArgs>
    estado?: boolean | EstadosUsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cuentas"]>

  export type CuentasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    correo?: boolean
    usuario?: boolean
    contrasena?: boolean
    rolId?: boolean
    estadoId?: boolean
    fechaRegistro?: boolean
    campus?: boolean
    reputacion?: boolean
    rol?: boolean | RolesDefaultArgs<ExtArgs>
    estado?: boolean | EstadosUsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cuentas"]>

  export type CuentasSelectScalar = {
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    correo?: boolean
    usuario?: boolean
    contrasena?: boolean
    rolId?: boolean
    estadoId?: boolean
    fechaRegistro?: boolean
    campus?: boolean
    reputacion?: boolean
  }

  export type CuentasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "apellido" | "correo" | "usuario" | "contrasena" | "rolId" | "estadoId" | "fechaRegistro" | "campus" | "reputacion", ExtArgs["result"]["cuentas"]>
  export type CuentasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolesDefaultArgs<ExtArgs>
    estado?: boolean | EstadosUsuarioDefaultArgs<ExtArgs>
    productos?: boolean | Cuentas$productosArgs<ExtArgs>
    transaccionesCompra?: boolean | Cuentas$transaccionesCompraArgs<ExtArgs>
    transaccionesVenta?: boolean | Cuentas$transaccionesVentaArgs<ExtArgs>
    calificacionesDadas?: boolean | Cuentas$calificacionesDadasArgs<ExtArgs>
    calificacionesRecibidas?: boolean | Cuentas$calificacionesRecibidasArgs<ExtArgs>
    carrito?: boolean | Cuentas$carritoArgs<ExtArgs>
    actividades?: boolean | Cuentas$actividadesArgs<ExtArgs>
    mensajesEnviados?: boolean | Cuentas$mensajesEnviadosArgs<ExtArgs>
    mensajesRecibidos?: boolean | Cuentas$mensajesRecibidosArgs<ExtArgs>
    reportes?: boolean | Cuentas$reportesArgs<ExtArgs>
    reportesRecibidos?: boolean | Cuentas$reportesRecibidosArgs<ExtArgs>
    publicaciones?: boolean | Cuentas$publicacionesArgs<ExtArgs>
    foros?: boolean | Cuentas$forosArgs<ExtArgs>
    publicacionesForo?: boolean | Cuentas$publicacionesForoArgs<ExtArgs>
    comentariosPublicacion?: boolean | Cuentas$comentariosPublicacionArgs<ExtArgs>
    notificaciones?: boolean | Cuentas$notificacionesArgs<ExtArgs>
    ubicaciones?: boolean | Cuentas$ubicacionesArgs<ExtArgs>
    resumenUsuario?: boolean | Cuentas$resumenUsuarioArgs<ExtArgs>
    siguiendo?: boolean | Cuentas$siguiendoArgs<ExtArgs>
    seguidores?: boolean | Cuentas$seguidoresArgs<ExtArgs>
    favoritos?: boolean | Cuentas$favoritosArgs<ExtArgs>
    _count?: boolean | CuentasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CuentasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolesDefaultArgs<ExtArgs>
    estado?: boolean | EstadosUsuarioDefaultArgs<ExtArgs>
  }
  export type CuentasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rol?: boolean | RolesDefaultArgs<ExtArgs>
    estado?: boolean | EstadosUsuarioDefaultArgs<ExtArgs>
  }

  export type $CuentasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Cuentas"
    objects: {
      rol: Prisma.$RolesPayload<ExtArgs>
      estado: Prisma.$EstadosUsuarioPayload<ExtArgs>
      productos: Prisma.$ProductosPayload<ExtArgs>[]
      transaccionesCompra: Prisma.$TransaccionesPayload<ExtArgs>[]
      transaccionesVenta: Prisma.$TransaccionesPayload<ExtArgs>[]
      calificacionesDadas: Prisma.$CalificacionesPayload<ExtArgs>[]
      calificacionesRecibidas: Prisma.$CalificacionesPayload<ExtArgs>[]
      carrito: Prisma.$CarritoPayload<ExtArgs>[]
      actividades: Prisma.$ActividadUsuarioPayload<ExtArgs>[]
      mensajesEnviados: Prisma.$MensajesPayload<ExtArgs>[]
      mensajesRecibidos: Prisma.$MensajesPayload<ExtArgs>[]
      reportes: Prisma.$ReportesPayload<ExtArgs>[]
      reportesRecibidos: Prisma.$ReportesPayload<ExtArgs>[]
      publicaciones: Prisma.$PublicacionesPayload<ExtArgs>[]
      foros: Prisma.$ForosPayload<ExtArgs>[]
      publicacionesForo: Prisma.$PublicacionesForoPayload<ExtArgs>[]
      comentariosPublicacion: Prisma.$ComentariosPublicacionPayload<ExtArgs>[]
      notificaciones: Prisma.$NotificacionesPayload<ExtArgs>[]
      ubicaciones: Prisma.$UbicacionesPayload<ExtArgs>[]
      resumenUsuario: Prisma.$ResumenUsuarioPayload<ExtArgs> | null
      siguiendo: Prisma.$SeguidoresPayload<ExtArgs>[]
      seguidores: Prisma.$SeguidoresPayload<ExtArgs>[]
      favoritos: Prisma.$FavoritosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      apellido: string | null
      correo: string
      usuario: string
      contrasena: string
      rolId: number
      estadoId: number
      fechaRegistro: Date
      campus: string | null
      reputacion: Prisma.Decimal
    }, ExtArgs["result"]["cuentas"]>
    composites: {}
  }

  type CuentasGetPayload<S extends boolean | null | undefined | CuentasDefaultArgs> = $Result.GetResult<Prisma.$CuentasPayload, S>

  type CuentasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CuentasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CuentasCountAggregateInputType | true
    }

  export interface CuentasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Cuentas'], meta: { name: 'Cuentas' } }
    /**
     * Find zero or one Cuentas that matches the filter.
     * @param {CuentasFindUniqueArgs} args - Arguments to find a Cuentas
     * @example
     * // Get one Cuentas
     * const cuentas = await prisma.cuentas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CuentasFindUniqueArgs>(args: SelectSubset<T, CuentasFindUniqueArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cuentas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CuentasFindUniqueOrThrowArgs} args - Arguments to find a Cuentas
     * @example
     * // Get one Cuentas
     * const cuentas = await prisma.cuentas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CuentasFindUniqueOrThrowArgs>(args: SelectSubset<T, CuentasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cuentas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuentasFindFirstArgs} args - Arguments to find a Cuentas
     * @example
     * // Get one Cuentas
     * const cuentas = await prisma.cuentas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CuentasFindFirstArgs>(args?: SelectSubset<T, CuentasFindFirstArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cuentas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuentasFindFirstOrThrowArgs} args - Arguments to find a Cuentas
     * @example
     * // Get one Cuentas
     * const cuentas = await prisma.cuentas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CuentasFindFirstOrThrowArgs>(args?: SelectSubset<T, CuentasFindFirstOrThrowArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cuentas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuentasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cuentas
     * const cuentas = await prisma.cuentas.findMany()
     * 
     * // Get first 10 Cuentas
     * const cuentas = await prisma.cuentas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cuentasWithIdOnly = await prisma.cuentas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CuentasFindManyArgs>(args?: SelectSubset<T, CuentasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cuentas.
     * @param {CuentasCreateArgs} args - Arguments to create a Cuentas.
     * @example
     * // Create one Cuentas
     * const Cuentas = await prisma.cuentas.create({
     *   data: {
     *     // ... data to create a Cuentas
     *   }
     * })
     * 
     */
    create<T extends CuentasCreateArgs>(args: SelectSubset<T, CuentasCreateArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cuentas.
     * @param {CuentasCreateManyArgs} args - Arguments to create many Cuentas.
     * @example
     * // Create many Cuentas
     * const cuentas = await prisma.cuentas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CuentasCreateManyArgs>(args?: SelectSubset<T, CuentasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cuentas and returns the data saved in the database.
     * @param {CuentasCreateManyAndReturnArgs} args - Arguments to create many Cuentas.
     * @example
     * // Create many Cuentas
     * const cuentas = await prisma.cuentas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cuentas and only return the `id`
     * const cuentasWithIdOnly = await prisma.cuentas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CuentasCreateManyAndReturnArgs>(args?: SelectSubset<T, CuentasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cuentas.
     * @param {CuentasDeleteArgs} args - Arguments to delete one Cuentas.
     * @example
     * // Delete one Cuentas
     * const Cuentas = await prisma.cuentas.delete({
     *   where: {
     *     // ... filter to delete one Cuentas
     *   }
     * })
     * 
     */
    delete<T extends CuentasDeleteArgs>(args: SelectSubset<T, CuentasDeleteArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cuentas.
     * @param {CuentasUpdateArgs} args - Arguments to update one Cuentas.
     * @example
     * // Update one Cuentas
     * const cuentas = await prisma.cuentas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CuentasUpdateArgs>(args: SelectSubset<T, CuentasUpdateArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cuentas.
     * @param {CuentasDeleteManyArgs} args - Arguments to filter Cuentas to delete.
     * @example
     * // Delete a few Cuentas
     * const { count } = await prisma.cuentas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CuentasDeleteManyArgs>(args?: SelectSubset<T, CuentasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cuentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuentasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cuentas
     * const cuentas = await prisma.cuentas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CuentasUpdateManyArgs>(args: SelectSubset<T, CuentasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cuentas and returns the data updated in the database.
     * @param {CuentasUpdateManyAndReturnArgs} args - Arguments to update many Cuentas.
     * @example
     * // Update many Cuentas
     * const cuentas = await prisma.cuentas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cuentas and only return the `id`
     * const cuentasWithIdOnly = await prisma.cuentas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CuentasUpdateManyAndReturnArgs>(args: SelectSubset<T, CuentasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cuentas.
     * @param {CuentasUpsertArgs} args - Arguments to update or create a Cuentas.
     * @example
     * // Update or create a Cuentas
     * const cuentas = await prisma.cuentas.upsert({
     *   create: {
     *     // ... data to create a Cuentas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cuentas we want to update
     *   }
     * })
     */
    upsert<T extends CuentasUpsertArgs>(args: SelectSubset<T, CuentasUpsertArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cuentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuentasCountArgs} args - Arguments to filter Cuentas to count.
     * @example
     * // Count the number of Cuentas
     * const count = await prisma.cuentas.count({
     *   where: {
     *     // ... the filter for the Cuentas we want to count
     *   }
     * })
    **/
    count<T extends CuentasCountArgs>(
      args?: Subset<T, CuentasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CuentasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cuentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuentasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CuentasAggregateArgs>(args: Subset<T, CuentasAggregateArgs>): Prisma.PrismaPromise<GetCuentasAggregateType<T>>

    /**
     * Group by Cuentas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CuentasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CuentasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CuentasGroupByArgs['orderBy'] }
        : { orderBy?: CuentasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CuentasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCuentasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Cuentas model
   */
  readonly fields: CuentasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Cuentas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CuentasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rol<T extends RolesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RolesDefaultArgs<ExtArgs>>): Prisma__RolesClient<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    estado<T extends EstadosUsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstadosUsuarioDefaultArgs<ExtArgs>>): Prisma__EstadosUsuarioClient<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    productos<T extends Cuentas$productosArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transaccionesCompra<T extends Cuentas$transaccionesCompraArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$transaccionesCompraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transaccionesVenta<T extends Cuentas$transaccionesVentaArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$transaccionesVentaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calificacionesDadas<T extends Cuentas$calificacionesDadasArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$calificacionesDadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    calificacionesRecibidas<T extends Cuentas$calificacionesRecibidasArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$calificacionesRecibidasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    carrito<T extends Cuentas$carritoArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$carritoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    actividades<T extends Cuentas$actividadesArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$actividadesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mensajesEnviados<T extends Cuentas$mensajesEnviadosArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$mensajesEnviadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mensajesRecibidos<T extends Cuentas$mensajesRecibidosArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$mensajesRecibidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reportes<T extends Cuentas$reportesArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$reportesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reportesRecibidos<T extends Cuentas$reportesRecibidosArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$reportesRecibidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    publicaciones<T extends Cuentas$publicacionesArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$publicacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    foros<T extends Cuentas$forosArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$forosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    publicacionesForo<T extends Cuentas$publicacionesForoArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$publicacionesForoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comentariosPublicacion<T extends Cuentas$comentariosPublicacionArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$comentariosPublicacionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notificaciones<T extends Cuentas$notificacionesArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$notificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ubicaciones<T extends Cuentas$ubicacionesArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$ubicacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    resumenUsuario<T extends Cuentas$resumenUsuarioArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$resumenUsuarioArgs<ExtArgs>>): Prisma__ResumenUsuarioClient<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    siguiendo<T extends Cuentas$siguiendoArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$siguiendoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    seguidores<T extends Cuentas$seguidoresArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$seguidoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    favoritos<T extends Cuentas$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, Cuentas$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Cuentas model
   */
  interface CuentasFieldRefs {
    readonly id: FieldRef<"Cuentas", 'Int'>
    readonly nombre: FieldRef<"Cuentas", 'String'>
    readonly apellido: FieldRef<"Cuentas", 'String'>
    readonly correo: FieldRef<"Cuentas", 'String'>
    readonly usuario: FieldRef<"Cuentas", 'String'>
    readonly contrasena: FieldRef<"Cuentas", 'String'>
    readonly rolId: FieldRef<"Cuentas", 'Int'>
    readonly estadoId: FieldRef<"Cuentas", 'Int'>
    readonly fechaRegistro: FieldRef<"Cuentas", 'DateTime'>
    readonly campus: FieldRef<"Cuentas", 'String'>
    readonly reputacion: FieldRef<"Cuentas", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Cuentas findUnique
   */
  export type CuentasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    /**
     * Filter, which Cuentas to fetch.
     */
    where: CuentasWhereUniqueInput
  }

  /**
   * Cuentas findUniqueOrThrow
   */
  export type CuentasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    /**
     * Filter, which Cuentas to fetch.
     */
    where: CuentasWhereUniqueInput
  }

  /**
   * Cuentas findFirst
   */
  export type CuentasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    /**
     * Filter, which Cuentas to fetch.
     */
    where?: CuentasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cuentas to fetch.
     */
    orderBy?: CuentasOrderByWithRelationInput | CuentasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cuentas.
     */
    cursor?: CuentasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cuentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cuentas.
     */
    distinct?: CuentasScalarFieldEnum | CuentasScalarFieldEnum[]
  }

  /**
   * Cuentas findFirstOrThrow
   */
  export type CuentasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    /**
     * Filter, which Cuentas to fetch.
     */
    where?: CuentasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cuentas to fetch.
     */
    orderBy?: CuentasOrderByWithRelationInput | CuentasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cuentas.
     */
    cursor?: CuentasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cuentas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cuentas.
     */
    distinct?: CuentasScalarFieldEnum | CuentasScalarFieldEnum[]
  }

  /**
   * Cuentas findMany
   */
  export type CuentasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    /**
     * Filter, which Cuentas to fetch.
     */
    where?: CuentasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cuentas to fetch.
     */
    orderBy?: CuentasOrderByWithRelationInput | CuentasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cuentas.
     */
    cursor?: CuentasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cuentas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cuentas.
     */
    skip?: number
    distinct?: CuentasScalarFieldEnum | CuentasScalarFieldEnum[]
  }

  /**
   * Cuentas create
   */
  export type CuentasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    /**
     * The data needed to create a Cuentas.
     */
    data: XOR<CuentasCreateInput, CuentasUncheckedCreateInput>
  }

  /**
   * Cuentas createMany
   */
  export type CuentasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cuentas.
     */
    data: CuentasCreateManyInput | CuentasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Cuentas createManyAndReturn
   */
  export type CuentasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * The data used to create many Cuentas.
     */
    data: CuentasCreateManyInput | CuentasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cuentas update
   */
  export type CuentasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    /**
     * The data needed to update a Cuentas.
     */
    data: XOR<CuentasUpdateInput, CuentasUncheckedUpdateInput>
    /**
     * Choose, which Cuentas to update.
     */
    where: CuentasWhereUniqueInput
  }

  /**
   * Cuentas updateMany
   */
  export type CuentasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cuentas.
     */
    data: XOR<CuentasUpdateManyMutationInput, CuentasUncheckedUpdateManyInput>
    /**
     * Filter which Cuentas to update
     */
    where?: CuentasWhereInput
    /**
     * Limit how many Cuentas to update.
     */
    limit?: number
  }

  /**
   * Cuentas updateManyAndReturn
   */
  export type CuentasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * The data used to update Cuentas.
     */
    data: XOR<CuentasUpdateManyMutationInput, CuentasUncheckedUpdateManyInput>
    /**
     * Filter which Cuentas to update
     */
    where?: CuentasWhereInput
    /**
     * Limit how many Cuentas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Cuentas upsert
   */
  export type CuentasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    /**
     * The filter to search for the Cuentas to update in case it exists.
     */
    where: CuentasWhereUniqueInput
    /**
     * In case the Cuentas found by the `where` argument doesn't exist, create a new Cuentas with this data.
     */
    create: XOR<CuentasCreateInput, CuentasUncheckedCreateInput>
    /**
     * In case the Cuentas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CuentasUpdateInput, CuentasUncheckedUpdateInput>
  }

  /**
   * Cuentas delete
   */
  export type CuentasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    /**
     * Filter which Cuentas to delete.
     */
    where: CuentasWhereUniqueInput
  }

  /**
   * Cuentas deleteMany
   */
  export type CuentasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cuentas to delete
     */
    where?: CuentasWhereInput
    /**
     * Limit how many Cuentas to delete.
     */
    limit?: number
  }

  /**
   * Cuentas.productos
   */
  export type Cuentas$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    where?: ProductosWhereInput
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    cursor?: ProductosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * Cuentas.transaccionesCompra
   */
  export type Cuentas$transaccionesCompraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    where?: TransaccionesWhereInput
    orderBy?: TransaccionesOrderByWithRelationInput | TransaccionesOrderByWithRelationInput[]
    cursor?: TransaccionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionesScalarFieldEnum | TransaccionesScalarFieldEnum[]
  }

  /**
   * Cuentas.transaccionesVenta
   */
  export type Cuentas$transaccionesVentaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    where?: TransaccionesWhereInput
    orderBy?: TransaccionesOrderByWithRelationInput | TransaccionesOrderByWithRelationInput[]
    cursor?: TransaccionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionesScalarFieldEnum | TransaccionesScalarFieldEnum[]
  }

  /**
   * Cuentas.calificacionesDadas
   */
  export type Cuentas$calificacionesDadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    where?: CalificacionesWhereInput
    orderBy?: CalificacionesOrderByWithRelationInput | CalificacionesOrderByWithRelationInput[]
    cursor?: CalificacionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalificacionesScalarFieldEnum | CalificacionesScalarFieldEnum[]
  }

  /**
   * Cuentas.calificacionesRecibidas
   */
  export type Cuentas$calificacionesRecibidasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    where?: CalificacionesWhereInput
    orderBy?: CalificacionesOrderByWithRelationInput | CalificacionesOrderByWithRelationInput[]
    cursor?: CalificacionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalificacionesScalarFieldEnum | CalificacionesScalarFieldEnum[]
  }

  /**
   * Cuentas.carrito
   */
  export type Cuentas$carritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    where?: CarritoWhereInput
    orderBy?: CarritoOrderByWithRelationInput | CarritoOrderByWithRelationInput[]
    cursor?: CarritoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CarritoScalarFieldEnum | CarritoScalarFieldEnum[]
  }

  /**
   * Cuentas.actividades
   */
  export type Cuentas$actividadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
    where?: ActividadUsuarioWhereInput
    orderBy?: ActividadUsuarioOrderByWithRelationInput | ActividadUsuarioOrderByWithRelationInput[]
    cursor?: ActividadUsuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ActividadUsuarioScalarFieldEnum | ActividadUsuarioScalarFieldEnum[]
  }

  /**
   * Cuentas.mensajesEnviados
   */
  export type Cuentas$mensajesEnviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    where?: MensajesWhereInput
    orderBy?: MensajesOrderByWithRelationInput | MensajesOrderByWithRelationInput[]
    cursor?: MensajesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MensajesScalarFieldEnum | MensajesScalarFieldEnum[]
  }

  /**
   * Cuentas.mensajesRecibidos
   */
  export type Cuentas$mensajesRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    where?: MensajesWhereInput
    orderBy?: MensajesOrderByWithRelationInput | MensajesOrderByWithRelationInput[]
    cursor?: MensajesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MensajesScalarFieldEnum | MensajesScalarFieldEnum[]
  }

  /**
   * Cuentas.reportes
   */
  export type Cuentas$reportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    where?: ReportesWhereInput
    orderBy?: ReportesOrderByWithRelationInput | ReportesOrderByWithRelationInput[]
    cursor?: ReportesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * Cuentas.reportesRecibidos
   */
  export type Cuentas$reportesRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    where?: ReportesWhereInput
    orderBy?: ReportesOrderByWithRelationInput | ReportesOrderByWithRelationInput[]
    cursor?: ReportesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * Cuentas.publicaciones
   */
  export type Cuentas$publicacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    where?: PublicacionesWhereInput
    orderBy?: PublicacionesOrderByWithRelationInput | PublicacionesOrderByWithRelationInput[]
    cursor?: PublicacionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PublicacionesScalarFieldEnum | PublicacionesScalarFieldEnum[]
  }

  /**
   * Cuentas.foros
   */
  export type Cuentas$forosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
    where?: ForosWhereInput
    orderBy?: ForosOrderByWithRelationInput | ForosOrderByWithRelationInput[]
    cursor?: ForosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ForosScalarFieldEnum | ForosScalarFieldEnum[]
  }

  /**
   * Cuentas.publicacionesForo
   */
  export type Cuentas$publicacionesForoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    where?: PublicacionesForoWhereInput
    orderBy?: PublicacionesForoOrderByWithRelationInput | PublicacionesForoOrderByWithRelationInput[]
    cursor?: PublicacionesForoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PublicacionesForoScalarFieldEnum | PublicacionesForoScalarFieldEnum[]
  }

  /**
   * Cuentas.comentariosPublicacion
   */
  export type Cuentas$comentariosPublicacionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    where?: ComentariosPublicacionWhereInput
    orderBy?: ComentariosPublicacionOrderByWithRelationInput | ComentariosPublicacionOrderByWithRelationInput[]
    cursor?: ComentariosPublicacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentariosPublicacionScalarFieldEnum | ComentariosPublicacionScalarFieldEnum[]
  }

  /**
   * Cuentas.notificaciones
   */
  export type Cuentas$notificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
    where?: NotificacionesWhereInput
    orderBy?: NotificacionesOrderByWithRelationInput | NotificacionesOrderByWithRelationInput[]
    cursor?: NotificacionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificacionesScalarFieldEnum | NotificacionesScalarFieldEnum[]
  }

  /**
   * Cuentas.ubicaciones
   */
  export type Cuentas$ubicacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
    where?: UbicacionesWhereInput
    orderBy?: UbicacionesOrderByWithRelationInput | UbicacionesOrderByWithRelationInput[]
    cursor?: UbicacionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UbicacionesScalarFieldEnum | UbicacionesScalarFieldEnum[]
  }

  /**
   * Cuentas.resumenUsuario
   */
  export type Cuentas$resumenUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
    where?: ResumenUsuarioWhereInput
  }

  /**
   * Cuentas.siguiendo
   */
  export type Cuentas$siguiendoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    where?: SeguidoresWhereInput
    orderBy?: SeguidoresOrderByWithRelationInput | SeguidoresOrderByWithRelationInput[]
    cursor?: SeguidoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SeguidoresScalarFieldEnum | SeguidoresScalarFieldEnum[]
  }

  /**
   * Cuentas.seguidores
   */
  export type Cuentas$seguidoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    where?: SeguidoresWhereInput
    orderBy?: SeguidoresOrderByWithRelationInput | SeguidoresOrderByWithRelationInput[]
    cursor?: SeguidoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SeguidoresScalarFieldEnum | SeguidoresScalarFieldEnum[]
  }

  /**
   * Cuentas.favoritos
   */
  export type Cuentas$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    where?: FavoritosWhereInput
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    cursor?: FavoritosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * Cuentas without action
   */
  export type CuentasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
  }


  /**
   * Model Roles
   */

  export type AggregateRoles = {
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  export type RolesAvgAggregateOutputType = {
    id: number | null
  }

  export type RolesSumAggregateOutputType = {
    id: number | null
  }

  export type RolesMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type RolesMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type RolesCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type RolesAvgAggregateInputType = {
    id?: true
  }

  export type RolesSumAggregateInputType = {
    id?: true
  }

  export type RolesMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type RolesMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type RolesCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type RolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to aggregate.
     */
    where?: RolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RolesOrderByWithRelationInput | RolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolesMaxAggregateInputType
  }

  export type GetRolesAggregateType<T extends RolesAggregateArgs> = {
        [P in keyof T & keyof AggregateRoles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoles[P]>
      : GetScalarType<T[P], AggregateRoles[P]>
  }




  export type RolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolesWhereInput
    orderBy?: RolesOrderByWithAggregationInput | RolesOrderByWithAggregationInput[]
    by: RolesScalarFieldEnum[] | RolesScalarFieldEnum
    having?: RolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolesCountAggregateInputType | true
    _avg?: RolesAvgAggregateInputType
    _sum?: RolesSumAggregateInputType
    _min?: RolesMinAggregateInputType
    _max?: RolesMaxAggregateInputType
  }

  export type RolesGroupByOutputType = {
    id: number
    nombre: string
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  type GetRolesGroupByPayload<T extends RolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolesGroupByOutputType[P]>
            : GetScalarType<T[P], RolesGroupByOutputType[P]>
        }
      >
    >


  export type RolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    cuentas?: boolean | Roles$cuentasArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roles"]>

  export type RolesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["roles"]>

  export type RolesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["roles"]>

  export type RolesSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type RolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["roles"]>
  export type RolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cuentas?: boolean | Roles$cuentasArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RolesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type RolesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Roles"
    objects: {
      cuentas: Prisma.$CuentasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["roles"]>
    composites: {}
  }

  type RolesGetPayload<S extends boolean | null | undefined | RolesDefaultArgs> = $Result.GetResult<Prisma.$RolesPayload, S>

  type RolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolesCountAggregateInputType | true
    }

  export interface RolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Roles'], meta: { name: 'Roles' } }
    /**
     * Find zero or one Roles that matches the filter.
     * @param {RolesFindUniqueArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolesFindUniqueArgs>(args: SelectSubset<T, RolesFindUniqueArgs<ExtArgs>>): Prisma__RolesClient<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RolesFindUniqueOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolesFindUniqueOrThrowArgs>(args: SelectSubset<T, RolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolesClient<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesFindFirstArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolesFindFirstArgs>(args?: SelectSubset<T, RolesFindFirstArgs<ExtArgs>>): Prisma__RolesClient<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesFindFirstOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolesFindFirstOrThrowArgs>(args?: SelectSubset<T, RolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolesClient<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.roles.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.roles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolesWithIdOnly = await prisma.roles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RolesFindManyArgs>(args?: SelectSubset<T, RolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Roles.
     * @param {RolesCreateArgs} args - Arguments to create a Roles.
     * @example
     * // Create one Roles
     * const Roles = await prisma.roles.create({
     *   data: {
     *     // ... data to create a Roles
     *   }
     * })
     * 
     */
    create<T extends RolesCreateArgs>(args: SelectSubset<T, RolesCreateArgs<ExtArgs>>): Prisma__RolesClient<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RolesCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolesCreateManyArgs>(args?: SelectSubset<T, RolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RolesCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const rolesWithIdOnly = await prisma.roles.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RolesCreateManyAndReturnArgs>(args?: SelectSubset<T, RolesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Roles.
     * @param {RolesDeleteArgs} args - Arguments to delete one Roles.
     * @example
     * // Delete one Roles
     * const Roles = await prisma.roles.delete({
     *   where: {
     *     // ... filter to delete one Roles
     *   }
     * })
     * 
     */
    delete<T extends RolesDeleteArgs>(args: SelectSubset<T, RolesDeleteArgs<ExtArgs>>): Prisma__RolesClient<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Roles.
     * @param {RolesUpdateArgs} args - Arguments to update one Roles.
     * @example
     * // Update one Roles
     * const roles = await prisma.roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolesUpdateArgs>(args: SelectSubset<T, RolesUpdateArgs<ExtArgs>>): Prisma__RolesClient<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RolesDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolesDeleteManyArgs>(args?: SelectSubset<T, RolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolesUpdateManyArgs>(args: SelectSubset<T, RolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RolesUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const rolesWithIdOnly = await prisma.roles.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RolesUpdateManyAndReturnArgs>(args: SelectSubset<T, RolesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Roles.
     * @param {RolesUpsertArgs} args - Arguments to update or create a Roles.
     * @example
     * // Update or create a Roles
     * const roles = await prisma.roles.upsert({
     *   create: {
     *     // ... data to create a Roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Roles we want to update
     *   }
     * })
     */
    upsert<T extends RolesUpsertArgs>(args: SelectSubset<T, RolesUpsertArgs<ExtArgs>>): Prisma__RolesClient<$Result.GetResult<Prisma.$RolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.roles.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RolesCountArgs>(
      args?: Subset<T, RolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolesAggregateArgs>(args: Subset<T, RolesAggregateArgs>): Prisma.PrismaPromise<GetRolesAggregateType<T>>

    /**
     * Group by Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolesGroupByArgs['orderBy'] }
        : { orderBy?: RolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Roles model
   */
  readonly fields: RolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cuentas<T extends Roles$cuentasArgs<ExtArgs> = {}>(args?: Subset<T, Roles$cuentasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Roles model
   */
  interface RolesFieldRefs {
    readonly id: FieldRef<"Roles", 'Int'>
    readonly nombre: FieldRef<"Roles", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Roles findUnique
   */
  export type RolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolesInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where: RolesWhereUniqueInput
  }

  /**
   * Roles findUniqueOrThrow
   */
  export type RolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolesInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where: RolesWhereUniqueInput
  }

  /**
   * Roles findFirst
   */
  export type RolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolesInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RolesOrderByWithRelationInput | RolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * Roles findFirstOrThrow
   */
  export type RolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolesInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RolesOrderByWithRelationInput | RolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * Roles findMany
   */
  export type RolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolesInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RolesOrderByWithRelationInput | RolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * Roles create
   */
  export type RolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolesInclude<ExtArgs> | null
    /**
     * The data needed to create a Roles.
     */
    data: XOR<RolesCreateInput, RolesUncheckedCreateInput>
  }

  /**
   * Roles createMany
   */
  export type RolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RolesCreateManyInput | RolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Roles createManyAndReturn
   */
  export type RolesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RolesCreateManyInput | RolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Roles update
   */
  export type RolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolesInclude<ExtArgs> | null
    /**
     * The data needed to update a Roles.
     */
    data: XOR<RolesUpdateInput, RolesUncheckedUpdateInput>
    /**
     * Choose, which Roles to update.
     */
    where: RolesWhereUniqueInput
  }

  /**
   * Roles updateMany
   */
  export type RolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RolesUpdateManyMutationInput, RolesUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RolesWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Roles updateManyAndReturn
   */
  export type RolesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RolesUpdateManyMutationInput, RolesUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RolesWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Roles upsert
   */
  export type RolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolesInclude<ExtArgs> | null
    /**
     * The filter to search for the Roles to update in case it exists.
     */
    where: RolesWhereUniqueInput
    /**
     * In case the Roles found by the `where` argument doesn't exist, create a new Roles with this data.
     */
    create: XOR<RolesCreateInput, RolesUncheckedCreateInput>
    /**
     * In case the Roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolesUpdateInput, RolesUncheckedUpdateInput>
  }

  /**
   * Roles delete
   */
  export type RolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolesInclude<ExtArgs> | null
    /**
     * Filter which Roles to delete.
     */
    where: RolesWhereUniqueInput
  }

  /**
   * Roles deleteMany
   */
  export type RolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RolesWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Roles.cuentas
   */
  export type Roles$cuentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    where?: CuentasWhereInput
    orderBy?: CuentasOrderByWithRelationInput | CuentasOrderByWithRelationInput[]
    cursor?: CuentasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CuentasScalarFieldEnum | CuentasScalarFieldEnum[]
  }

  /**
   * Roles without action
   */
  export type RolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Roles
     */
    select?: RolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Roles
     */
    omit?: RolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolesInclude<ExtArgs> | null
  }


  /**
   * Model EstadosUsuario
   */

  export type AggregateEstadosUsuario = {
    _count: EstadosUsuarioCountAggregateOutputType | null
    _avg: EstadosUsuarioAvgAggregateOutputType | null
    _sum: EstadosUsuarioSumAggregateOutputType | null
    _min: EstadosUsuarioMinAggregateOutputType | null
    _max: EstadosUsuarioMaxAggregateOutputType | null
  }

  export type EstadosUsuarioAvgAggregateOutputType = {
    id: number | null
  }

  export type EstadosUsuarioSumAggregateOutputType = {
    id: number | null
  }

  export type EstadosUsuarioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadosUsuarioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadosUsuarioCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type EstadosUsuarioAvgAggregateInputType = {
    id?: true
  }

  export type EstadosUsuarioSumAggregateInputType = {
    id?: true
  }

  export type EstadosUsuarioMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadosUsuarioMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadosUsuarioCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type EstadosUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadosUsuario to aggregate.
     */
    where?: EstadosUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosUsuarios to fetch.
     */
    orderBy?: EstadosUsuarioOrderByWithRelationInput | EstadosUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstadosUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstadosUsuarios
    **/
    _count?: true | EstadosUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadosUsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadosUsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadosUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadosUsuarioMaxAggregateInputType
  }

  export type GetEstadosUsuarioAggregateType<T extends EstadosUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadosUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadosUsuario[P]>
      : GetScalarType<T[P], AggregateEstadosUsuario[P]>
  }




  export type EstadosUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadosUsuarioWhereInput
    orderBy?: EstadosUsuarioOrderByWithAggregationInput | EstadosUsuarioOrderByWithAggregationInput[]
    by: EstadosUsuarioScalarFieldEnum[] | EstadosUsuarioScalarFieldEnum
    having?: EstadosUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadosUsuarioCountAggregateInputType | true
    _avg?: EstadosUsuarioAvgAggregateInputType
    _sum?: EstadosUsuarioSumAggregateInputType
    _min?: EstadosUsuarioMinAggregateInputType
    _max?: EstadosUsuarioMaxAggregateInputType
  }

  export type EstadosUsuarioGroupByOutputType = {
    id: number
    nombre: string
    _count: EstadosUsuarioCountAggregateOutputType | null
    _avg: EstadosUsuarioAvgAggregateOutputType | null
    _sum: EstadosUsuarioSumAggregateOutputType | null
    _min: EstadosUsuarioMinAggregateOutputType | null
    _max: EstadosUsuarioMaxAggregateOutputType | null
  }

  type GetEstadosUsuarioGroupByPayload<T extends EstadosUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadosUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadosUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadosUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], EstadosUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type EstadosUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    cuentas?: boolean | EstadosUsuario$cuentasArgs<ExtArgs>
    _count?: boolean | EstadosUsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadosUsuario"]>

  export type EstadosUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadosUsuario"]>

  export type EstadosUsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadosUsuario"]>

  export type EstadosUsuarioSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type EstadosUsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["estadosUsuario"]>
  export type EstadosUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cuentas?: boolean | EstadosUsuario$cuentasArgs<ExtArgs>
    _count?: boolean | EstadosUsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstadosUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EstadosUsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstadosUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstadosUsuario"
    objects: {
      cuentas: Prisma.$CuentasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["estadosUsuario"]>
    composites: {}
  }

  type EstadosUsuarioGetPayload<S extends boolean | null | undefined | EstadosUsuarioDefaultArgs> = $Result.GetResult<Prisma.$EstadosUsuarioPayload, S>

  type EstadosUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstadosUsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadosUsuarioCountAggregateInputType | true
    }

  export interface EstadosUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstadosUsuario'], meta: { name: 'EstadosUsuario' } }
    /**
     * Find zero or one EstadosUsuario that matches the filter.
     * @param {EstadosUsuarioFindUniqueArgs} args - Arguments to find a EstadosUsuario
     * @example
     * // Get one EstadosUsuario
     * const estadosUsuario = await prisma.estadosUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstadosUsuarioFindUniqueArgs>(args: SelectSubset<T, EstadosUsuarioFindUniqueArgs<ExtArgs>>): Prisma__EstadosUsuarioClient<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstadosUsuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstadosUsuarioFindUniqueOrThrowArgs} args - Arguments to find a EstadosUsuario
     * @example
     * // Get one EstadosUsuario
     * const estadosUsuario = await prisma.estadosUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstadosUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, EstadosUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstadosUsuarioClient<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadosUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosUsuarioFindFirstArgs} args - Arguments to find a EstadosUsuario
     * @example
     * // Get one EstadosUsuario
     * const estadosUsuario = await prisma.estadosUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstadosUsuarioFindFirstArgs>(args?: SelectSubset<T, EstadosUsuarioFindFirstArgs<ExtArgs>>): Prisma__EstadosUsuarioClient<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadosUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosUsuarioFindFirstOrThrowArgs} args - Arguments to find a EstadosUsuario
     * @example
     * // Get one EstadosUsuario
     * const estadosUsuario = await prisma.estadosUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstadosUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, EstadosUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstadosUsuarioClient<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstadosUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstadosUsuarios
     * const estadosUsuarios = await prisma.estadosUsuario.findMany()
     * 
     * // Get first 10 EstadosUsuarios
     * const estadosUsuarios = await prisma.estadosUsuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estadosUsuarioWithIdOnly = await prisma.estadosUsuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EstadosUsuarioFindManyArgs>(args?: SelectSubset<T, EstadosUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstadosUsuario.
     * @param {EstadosUsuarioCreateArgs} args - Arguments to create a EstadosUsuario.
     * @example
     * // Create one EstadosUsuario
     * const EstadosUsuario = await prisma.estadosUsuario.create({
     *   data: {
     *     // ... data to create a EstadosUsuario
     *   }
     * })
     * 
     */
    create<T extends EstadosUsuarioCreateArgs>(args: SelectSubset<T, EstadosUsuarioCreateArgs<ExtArgs>>): Prisma__EstadosUsuarioClient<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstadosUsuarios.
     * @param {EstadosUsuarioCreateManyArgs} args - Arguments to create many EstadosUsuarios.
     * @example
     * // Create many EstadosUsuarios
     * const estadosUsuario = await prisma.estadosUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstadosUsuarioCreateManyArgs>(args?: SelectSubset<T, EstadosUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstadosUsuarios and returns the data saved in the database.
     * @param {EstadosUsuarioCreateManyAndReturnArgs} args - Arguments to create many EstadosUsuarios.
     * @example
     * // Create many EstadosUsuarios
     * const estadosUsuario = await prisma.estadosUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstadosUsuarios and only return the `id`
     * const estadosUsuarioWithIdOnly = await prisma.estadosUsuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstadosUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, EstadosUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EstadosUsuario.
     * @param {EstadosUsuarioDeleteArgs} args - Arguments to delete one EstadosUsuario.
     * @example
     * // Delete one EstadosUsuario
     * const EstadosUsuario = await prisma.estadosUsuario.delete({
     *   where: {
     *     // ... filter to delete one EstadosUsuario
     *   }
     * })
     * 
     */
    delete<T extends EstadosUsuarioDeleteArgs>(args: SelectSubset<T, EstadosUsuarioDeleteArgs<ExtArgs>>): Prisma__EstadosUsuarioClient<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstadosUsuario.
     * @param {EstadosUsuarioUpdateArgs} args - Arguments to update one EstadosUsuario.
     * @example
     * // Update one EstadosUsuario
     * const estadosUsuario = await prisma.estadosUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstadosUsuarioUpdateArgs>(args: SelectSubset<T, EstadosUsuarioUpdateArgs<ExtArgs>>): Prisma__EstadosUsuarioClient<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstadosUsuarios.
     * @param {EstadosUsuarioDeleteManyArgs} args - Arguments to filter EstadosUsuarios to delete.
     * @example
     * // Delete a few EstadosUsuarios
     * const { count } = await prisma.estadosUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstadosUsuarioDeleteManyArgs>(args?: SelectSubset<T, EstadosUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadosUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstadosUsuarios
     * const estadosUsuario = await prisma.estadosUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstadosUsuarioUpdateManyArgs>(args: SelectSubset<T, EstadosUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadosUsuarios and returns the data updated in the database.
     * @param {EstadosUsuarioUpdateManyAndReturnArgs} args - Arguments to update many EstadosUsuarios.
     * @example
     * // Update many EstadosUsuarios
     * const estadosUsuario = await prisma.estadosUsuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EstadosUsuarios and only return the `id`
     * const estadosUsuarioWithIdOnly = await prisma.estadosUsuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstadosUsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, EstadosUsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EstadosUsuario.
     * @param {EstadosUsuarioUpsertArgs} args - Arguments to update or create a EstadosUsuario.
     * @example
     * // Update or create a EstadosUsuario
     * const estadosUsuario = await prisma.estadosUsuario.upsert({
     *   create: {
     *     // ... data to create a EstadosUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstadosUsuario we want to update
     *   }
     * })
     */
    upsert<T extends EstadosUsuarioUpsertArgs>(args: SelectSubset<T, EstadosUsuarioUpsertArgs<ExtArgs>>): Prisma__EstadosUsuarioClient<$Result.GetResult<Prisma.$EstadosUsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstadosUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosUsuarioCountArgs} args - Arguments to filter EstadosUsuarios to count.
     * @example
     * // Count the number of EstadosUsuarios
     * const count = await prisma.estadosUsuario.count({
     *   where: {
     *     // ... the filter for the EstadosUsuarios we want to count
     *   }
     * })
    **/
    count<T extends EstadosUsuarioCountArgs>(
      args?: Subset<T, EstadosUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadosUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstadosUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadosUsuarioAggregateArgs>(args: Subset<T, EstadosUsuarioAggregateArgs>): Prisma.PrismaPromise<GetEstadosUsuarioAggregateType<T>>

    /**
     * Group by EstadosUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstadosUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstadosUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: EstadosUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstadosUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadosUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstadosUsuario model
   */
  readonly fields: EstadosUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstadosUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstadosUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cuentas<T extends EstadosUsuario$cuentasArgs<ExtArgs> = {}>(args?: Subset<T, EstadosUsuario$cuentasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstadosUsuario model
   */
  interface EstadosUsuarioFieldRefs {
    readonly id: FieldRef<"EstadosUsuario", 'Int'>
    readonly nombre: FieldRef<"EstadosUsuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EstadosUsuario findUnique
   */
  export type EstadosUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which EstadosUsuario to fetch.
     */
    where: EstadosUsuarioWhereUniqueInput
  }

  /**
   * EstadosUsuario findUniqueOrThrow
   */
  export type EstadosUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which EstadosUsuario to fetch.
     */
    where: EstadosUsuarioWhereUniqueInput
  }

  /**
   * EstadosUsuario findFirst
   */
  export type EstadosUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which EstadosUsuario to fetch.
     */
    where?: EstadosUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosUsuarios to fetch.
     */
    orderBy?: EstadosUsuarioOrderByWithRelationInput | EstadosUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadosUsuarios.
     */
    cursor?: EstadosUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadosUsuarios.
     */
    distinct?: EstadosUsuarioScalarFieldEnum | EstadosUsuarioScalarFieldEnum[]
  }

  /**
   * EstadosUsuario findFirstOrThrow
   */
  export type EstadosUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which EstadosUsuario to fetch.
     */
    where?: EstadosUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosUsuarios to fetch.
     */
    orderBy?: EstadosUsuarioOrderByWithRelationInput | EstadosUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadosUsuarios.
     */
    cursor?: EstadosUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadosUsuarios.
     */
    distinct?: EstadosUsuarioScalarFieldEnum | EstadosUsuarioScalarFieldEnum[]
  }

  /**
   * EstadosUsuario findMany
   */
  export type EstadosUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which EstadosUsuarios to fetch.
     */
    where?: EstadosUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosUsuarios to fetch.
     */
    orderBy?: EstadosUsuarioOrderByWithRelationInput | EstadosUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstadosUsuarios.
     */
    cursor?: EstadosUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosUsuarios.
     */
    skip?: number
    distinct?: EstadosUsuarioScalarFieldEnum | EstadosUsuarioScalarFieldEnum[]
  }

  /**
   * EstadosUsuario create
   */
  export type EstadosUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a EstadosUsuario.
     */
    data: XOR<EstadosUsuarioCreateInput, EstadosUsuarioUncheckedCreateInput>
  }

  /**
   * EstadosUsuario createMany
   */
  export type EstadosUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstadosUsuarios.
     */
    data: EstadosUsuarioCreateManyInput | EstadosUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadosUsuario createManyAndReturn
   */
  export type EstadosUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many EstadosUsuarios.
     */
    data: EstadosUsuarioCreateManyInput | EstadosUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadosUsuario update
   */
  export type EstadosUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a EstadosUsuario.
     */
    data: XOR<EstadosUsuarioUpdateInput, EstadosUsuarioUncheckedUpdateInput>
    /**
     * Choose, which EstadosUsuario to update.
     */
    where: EstadosUsuarioWhereUniqueInput
  }

  /**
   * EstadosUsuario updateMany
   */
  export type EstadosUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstadosUsuarios.
     */
    data: XOR<EstadosUsuarioUpdateManyMutationInput, EstadosUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which EstadosUsuarios to update
     */
    where?: EstadosUsuarioWhereInput
    /**
     * Limit how many EstadosUsuarios to update.
     */
    limit?: number
  }

  /**
   * EstadosUsuario updateManyAndReturn
   */
  export type EstadosUsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * The data used to update EstadosUsuarios.
     */
    data: XOR<EstadosUsuarioUpdateManyMutationInput, EstadosUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which EstadosUsuarios to update
     */
    where?: EstadosUsuarioWhereInput
    /**
     * Limit how many EstadosUsuarios to update.
     */
    limit?: number
  }

  /**
   * EstadosUsuario upsert
   */
  export type EstadosUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the EstadosUsuario to update in case it exists.
     */
    where: EstadosUsuarioWhereUniqueInput
    /**
     * In case the EstadosUsuario found by the `where` argument doesn't exist, create a new EstadosUsuario with this data.
     */
    create: XOR<EstadosUsuarioCreateInput, EstadosUsuarioUncheckedCreateInput>
    /**
     * In case the EstadosUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstadosUsuarioUpdateInput, EstadosUsuarioUncheckedUpdateInput>
  }

  /**
   * EstadosUsuario delete
   */
  export type EstadosUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosUsuarioInclude<ExtArgs> | null
    /**
     * Filter which EstadosUsuario to delete.
     */
    where: EstadosUsuarioWhereUniqueInput
  }

  /**
   * EstadosUsuario deleteMany
   */
  export type EstadosUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadosUsuarios to delete
     */
    where?: EstadosUsuarioWhereInput
    /**
     * Limit how many EstadosUsuarios to delete.
     */
    limit?: number
  }

  /**
   * EstadosUsuario.cuentas
   */
  export type EstadosUsuario$cuentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    where?: CuentasWhereInput
    orderBy?: CuentasOrderByWithRelationInput | CuentasOrderByWithRelationInput[]
    cursor?: CuentasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CuentasScalarFieldEnum | CuentasScalarFieldEnum[]
  }

  /**
   * EstadosUsuario without action
   */
  export type EstadosUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosUsuario
     */
    select?: EstadosUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosUsuario
     */
    omit?: EstadosUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Categorias
   */

  export type AggregateCategorias = {
    _count: CategoriasCountAggregateOutputType | null
    _avg: CategoriasAvgAggregateOutputType | null
    _sum: CategoriasSumAggregateOutputType | null
    _min: CategoriasMinAggregateOutputType | null
    _max: CategoriasMaxAggregateOutputType | null
  }

  export type CategoriasAvgAggregateOutputType = {
    id: number | null
    categoriaPadreId: number | null
  }

  export type CategoriasSumAggregateOutputType = {
    id: number | null
    categoriaPadreId: number | null
  }

  export type CategoriasMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    categoriaPadreId: number | null
  }

  export type CategoriasMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    categoriaPadreId: number | null
  }

  export type CategoriasCountAggregateOutputType = {
    id: number
    nombre: number
    categoriaPadreId: number
    _all: number
  }


  export type CategoriasAvgAggregateInputType = {
    id?: true
    categoriaPadreId?: true
  }

  export type CategoriasSumAggregateInputType = {
    id?: true
    categoriaPadreId?: true
  }

  export type CategoriasMinAggregateInputType = {
    id?: true
    nombre?: true
    categoriaPadreId?: true
  }

  export type CategoriasMaxAggregateInputType = {
    id?: true
    nombre?: true
    categoriaPadreId?: true
  }

  export type CategoriasCountAggregateInputType = {
    id?: true
    nombre?: true
    categoriaPadreId?: true
    _all?: true
  }

  export type CategoriasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categorias to aggregate.
     */
    where?: CategoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriasOrderByWithRelationInput | CategoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categorias
    **/
    _count?: true | CategoriasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriasMaxAggregateInputType
  }

  export type GetCategoriasAggregateType<T extends CategoriasAggregateArgs> = {
        [P in keyof T & keyof AggregateCategorias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategorias[P]>
      : GetScalarType<T[P], AggregateCategorias[P]>
  }




  export type CategoriasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriasWhereInput
    orderBy?: CategoriasOrderByWithAggregationInput | CategoriasOrderByWithAggregationInput[]
    by: CategoriasScalarFieldEnum[] | CategoriasScalarFieldEnum
    having?: CategoriasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriasCountAggregateInputType | true
    _avg?: CategoriasAvgAggregateInputType
    _sum?: CategoriasSumAggregateInputType
    _min?: CategoriasMinAggregateInputType
    _max?: CategoriasMaxAggregateInputType
  }

  export type CategoriasGroupByOutputType = {
    id: number
    nombre: string
    categoriaPadreId: number | null
    _count: CategoriasCountAggregateOutputType | null
    _avg: CategoriasAvgAggregateOutputType | null
    _sum: CategoriasSumAggregateOutputType | null
    _min: CategoriasMinAggregateOutputType | null
    _max: CategoriasMaxAggregateOutputType | null
  }

  type GetCategoriasGroupByPayload<T extends CategoriasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriasGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriasGroupByOutputType[P]>
        }
      >
    >


  export type CategoriasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    categoriaPadreId?: boolean
    categoriaPadre?: boolean | Categorias$categoriaPadreArgs<ExtArgs>
    subcategorias?: boolean | Categorias$subcategoriasArgs<ExtArgs>
    productos?: boolean | Categorias$productosArgs<ExtArgs>
    _count?: boolean | CategoriasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categorias"]>

  export type CategoriasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    categoriaPadreId?: boolean
    categoriaPadre?: boolean | Categorias$categoriaPadreArgs<ExtArgs>
  }, ExtArgs["result"]["categorias"]>

  export type CategoriasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    categoriaPadreId?: boolean
    categoriaPadre?: boolean | Categorias$categoriaPadreArgs<ExtArgs>
  }, ExtArgs["result"]["categorias"]>

  export type CategoriasSelectScalar = {
    id?: boolean
    nombre?: boolean
    categoriaPadreId?: boolean
  }

  export type CategoriasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "categoriaPadreId", ExtArgs["result"]["categorias"]>
  export type CategoriasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoriaPadre?: boolean | Categorias$categoriaPadreArgs<ExtArgs>
    subcategorias?: boolean | Categorias$subcategoriasArgs<ExtArgs>
    productos?: boolean | Categorias$productosArgs<ExtArgs>
    _count?: boolean | CategoriasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoriasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoriaPadre?: boolean | Categorias$categoriaPadreArgs<ExtArgs>
  }
  export type CategoriasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoriaPadre?: boolean | Categorias$categoriaPadreArgs<ExtArgs>
  }

  export type $CategoriasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categorias"
    objects: {
      categoriaPadre: Prisma.$CategoriasPayload<ExtArgs> | null
      subcategorias: Prisma.$CategoriasPayload<ExtArgs>[]
      productos: Prisma.$ProductosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      categoriaPadreId: number | null
    }, ExtArgs["result"]["categorias"]>
    composites: {}
  }

  type CategoriasGetPayload<S extends boolean | null | undefined | CategoriasDefaultArgs> = $Result.GetResult<Prisma.$CategoriasPayload, S>

  type CategoriasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoriasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriasCountAggregateInputType | true
    }

  export interface CategoriasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categorias'], meta: { name: 'Categorias' } }
    /**
     * Find zero or one Categorias that matches the filter.
     * @param {CategoriasFindUniqueArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoriasFindUniqueArgs>(args: SelectSubset<T, CategoriasFindUniqueArgs<ExtArgs>>): Prisma__CategoriasClient<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categorias that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoriasFindUniqueOrThrowArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoriasFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoriasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoriasClient<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriasFindFirstArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoriasFindFirstArgs>(args?: SelectSubset<T, CategoriasFindFirstArgs<ExtArgs>>): Prisma__CategoriasClient<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categorias that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriasFindFirstOrThrowArgs} args - Arguments to find a Categorias
     * @example
     * // Get one Categorias
     * const categorias = await prisma.categorias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoriasFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoriasFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoriasClient<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categorias
     * const categorias = await prisma.categorias.findMany()
     * 
     * // Get first 10 Categorias
     * const categorias = await prisma.categorias.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriasWithIdOnly = await prisma.categorias.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoriasFindManyArgs>(args?: SelectSubset<T, CategoriasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categorias.
     * @param {CategoriasCreateArgs} args - Arguments to create a Categorias.
     * @example
     * // Create one Categorias
     * const Categorias = await prisma.categorias.create({
     *   data: {
     *     // ... data to create a Categorias
     *   }
     * })
     * 
     */
    create<T extends CategoriasCreateArgs>(args: SelectSubset<T, CategoriasCreateArgs<ExtArgs>>): Prisma__CategoriasClient<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categorias.
     * @param {CategoriasCreateManyArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categorias = await prisma.categorias.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoriasCreateManyArgs>(args?: SelectSubset<T, CategoriasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categorias and returns the data saved in the database.
     * @param {CategoriasCreateManyAndReturnArgs} args - Arguments to create many Categorias.
     * @example
     * // Create many Categorias
     * const categorias = await prisma.categorias.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categorias and only return the `id`
     * const categoriasWithIdOnly = await prisma.categorias.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoriasCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoriasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Categorias.
     * @param {CategoriasDeleteArgs} args - Arguments to delete one Categorias.
     * @example
     * // Delete one Categorias
     * const Categorias = await prisma.categorias.delete({
     *   where: {
     *     // ... filter to delete one Categorias
     *   }
     * })
     * 
     */
    delete<T extends CategoriasDeleteArgs>(args: SelectSubset<T, CategoriasDeleteArgs<ExtArgs>>): Prisma__CategoriasClient<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categorias.
     * @param {CategoriasUpdateArgs} args - Arguments to update one Categorias.
     * @example
     * // Update one Categorias
     * const categorias = await prisma.categorias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoriasUpdateArgs>(args: SelectSubset<T, CategoriasUpdateArgs<ExtArgs>>): Prisma__CategoriasClient<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categorias.
     * @param {CategoriasDeleteManyArgs} args - Arguments to filter Categorias to delete.
     * @example
     * // Delete a few Categorias
     * const { count } = await prisma.categorias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoriasDeleteManyArgs>(args?: SelectSubset<T, CategoriasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categorias
     * const categorias = await prisma.categorias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoriasUpdateManyArgs>(args: SelectSubset<T, CategoriasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias and returns the data updated in the database.
     * @param {CategoriasUpdateManyAndReturnArgs} args - Arguments to update many Categorias.
     * @example
     * // Update many Categorias
     * const categorias = await prisma.categorias.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categorias and only return the `id`
     * const categoriasWithIdOnly = await prisma.categorias.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoriasUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoriasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Categorias.
     * @param {CategoriasUpsertArgs} args - Arguments to update or create a Categorias.
     * @example
     * // Update or create a Categorias
     * const categorias = await prisma.categorias.upsert({
     *   create: {
     *     // ... data to create a Categorias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categorias we want to update
     *   }
     * })
     */
    upsert<T extends CategoriasUpsertArgs>(args: SelectSubset<T, CategoriasUpsertArgs<ExtArgs>>): Prisma__CategoriasClient<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriasCountArgs} args - Arguments to filter Categorias to count.
     * @example
     * // Count the number of Categorias
     * const count = await prisma.categorias.count({
     *   where: {
     *     // ... the filter for the Categorias we want to count
     *   }
     * })
    **/
    count<T extends CategoriasCountArgs>(
      args?: Subset<T, CategoriasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriasAggregateArgs>(args: Subset<T, CategoriasAggregateArgs>): Prisma.PrismaPromise<GetCategoriasAggregateType<T>>

    /**
     * Group by Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriasGroupByArgs['orderBy'] }
        : { orderBy?: CategoriasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categorias model
   */
  readonly fields: CategoriasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categorias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categoriaPadre<T extends Categorias$categoriaPadreArgs<ExtArgs> = {}>(args?: Subset<T, Categorias$categoriaPadreArgs<ExtArgs>>): Prisma__CategoriasClient<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    subcategorias<T extends Categorias$subcategoriasArgs<ExtArgs> = {}>(args?: Subset<T, Categorias$subcategoriasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productos<T extends Categorias$productosArgs<ExtArgs> = {}>(args?: Subset<T, Categorias$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Categorias model
   */
  interface CategoriasFieldRefs {
    readonly id: FieldRef<"Categorias", 'Int'>
    readonly nombre: FieldRef<"Categorias", 'String'>
    readonly categoriaPadreId: FieldRef<"Categorias", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Categorias findUnique
   */
  export type CategoriasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where: CategoriasWhereUniqueInput
  }

  /**
   * Categorias findUniqueOrThrow
   */
  export type CategoriasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where: CategoriasWhereUniqueInput
  }

  /**
   * Categorias findFirst
   */
  export type CategoriasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where?: CategoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriasOrderByWithRelationInput | CategoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriasScalarFieldEnum | CategoriasScalarFieldEnum[]
  }

  /**
   * Categorias findFirstOrThrow
   */
  export type CategoriasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where?: CategoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriasOrderByWithRelationInput | CategoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categorias.
     */
    cursor?: CategoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categorias.
     */
    distinct?: CategoriasScalarFieldEnum | CategoriasScalarFieldEnum[]
  }

  /**
   * Categorias findMany
   */
  export type CategoriasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    /**
     * Filter, which Categorias to fetch.
     */
    where?: CategoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categorias to fetch.
     */
    orderBy?: CategoriasOrderByWithRelationInput | CategoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categorias.
     */
    cursor?: CategoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categorias.
     */
    skip?: number
    distinct?: CategoriasScalarFieldEnum | CategoriasScalarFieldEnum[]
  }

  /**
   * Categorias create
   */
  export type CategoriasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    /**
     * The data needed to create a Categorias.
     */
    data: XOR<CategoriasCreateInput, CategoriasUncheckedCreateInput>
  }

  /**
   * Categorias createMany
   */
  export type CategoriasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categorias.
     */
    data: CategoriasCreateManyInput | CategoriasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categorias createManyAndReturn
   */
  export type CategoriasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * The data used to create many Categorias.
     */
    data: CategoriasCreateManyInput | CategoriasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Categorias update
   */
  export type CategoriasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    /**
     * The data needed to update a Categorias.
     */
    data: XOR<CategoriasUpdateInput, CategoriasUncheckedUpdateInput>
    /**
     * Choose, which Categorias to update.
     */
    where: CategoriasWhereUniqueInput
  }

  /**
   * Categorias updateMany
   */
  export type CategoriasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriasUpdateManyMutationInput, CategoriasUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriasWhereInput
    /**
     * Limit how many Categorias to update.
     */
    limit?: number
  }

  /**
   * Categorias updateManyAndReturn
   */
  export type CategoriasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * The data used to update Categorias.
     */
    data: XOR<CategoriasUpdateManyMutationInput, CategoriasUncheckedUpdateManyInput>
    /**
     * Filter which Categorias to update
     */
    where?: CategoriasWhereInput
    /**
     * Limit how many Categorias to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Categorias upsert
   */
  export type CategoriasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    /**
     * The filter to search for the Categorias to update in case it exists.
     */
    where: CategoriasWhereUniqueInput
    /**
     * In case the Categorias found by the `where` argument doesn't exist, create a new Categorias with this data.
     */
    create: XOR<CategoriasCreateInput, CategoriasUncheckedCreateInput>
    /**
     * In case the Categorias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriasUpdateInput, CategoriasUncheckedUpdateInput>
  }

  /**
   * Categorias delete
   */
  export type CategoriasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    /**
     * Filter which Categorias to delete.
     */
    where: CategoriasWhereUniqueInput
  }

  /**
   * Categorias deleteMany
   */
  export type CategoriasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categorias to delete
     */
    where?: CategoriasWhereInput
    /**
     * Limit how many Categorias to delete.
     */
    limit?: number
  }

  /**
   * Categorias.categoriaPadre
   */
  export type Categorias$categoriaPadreArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    where?: CategoriasWhereInput
  }

  /**
   * Categorias.subcategorias
   */
  export type Categorias$subcategoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    where?: CategoriasWhereInput
    orderBy?: CategoriasOrderByWithRelationInput | CategoriasOrderByWithRelationInput[]
    cursor?: CategoriasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriasScalarFieldEnum | CategoriasScalarFieldEnum[]
  }

  /**
   * Categorias.productos
   */
  export type Categorias$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    where?: ProductosWhereInput
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    cursor?: ProductosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * Categorias without action
   */
  export type CategoriasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
  }


  /**
   * Model EstadosProducto
   */

  export type AggregateEstadosProducto = {
    _count: EstadosProductoCountAggregateOutputType | null
    _avg: EstadosProductoAvgAggregateOutputType | null
    _sum: EstadosProductoSumAggregateOutputType | null
    _min: EstadosProductoMinAggregateOutputType | null
    _max: EstadosProductoMaxAggregateOutputType | null
  }

  export type EstadosProductoAvgAggregateOutputType = {
    id: number | null
  }

  export type EstadosProductoSumAggregateOutputType = {
    id: number | null
  }

  export type EstadosProductoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadosProductoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadosProductoCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type EstadosProductoAvgAggregateInputType = {
    id?: true
  }

  export type EstadosProductoSumAggregateInputType = {
    id?: true
  }

  export type EstadosProductoMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadosProductoMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadosProductoCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type EstadosProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadosProducto to aggregate.
     */
    where?: EstadosProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosProductos to fetch.
     */
    orderBy?: EstadosProductoOrderByWithRelationInput | EstadosProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstadosProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstadosProductos
    **/
    _count?: true | EstadosProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadosProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadosProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadosProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadosProductoMaxAggregateInputType
  }

  export type GetEstadosProductoAggregateType<T extends EstadosProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadosProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadosProducto[P]>
      : GetScalarType<T[P], AggregateEstadosProducto[P]>
  }




  export type EstadosProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadosProductoWhereInput
    orderBy?: EstadosProductoOrderByWithAggregationInput | EstadosProductoOrderByWithAggregationInput[]
    by: EstadosProductoScalarFieldEnum[] | EstadosProductoScalarFieldEnum
    having?: EstadosProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadosProductoCountAggregateInputType | true
    _avg?: EstadosProductoAvgAggregateInputType
    _sum?: EstadosProductoSumAggregateInputType
    _min?: EstadosProductoMinAggregateInputType
    _max?: EstadosProductoMaxAggregateInputType
  }

  export type EstadosProductoGroupByOutputType = {
    id: number
    nombre: string
    _count: EstadosProductoCountAggregateOutputType | null
    _avg: EstadosProductoAvgAggregateOutputType | null
    _sum: EstadosProductoSumAggregateOutputType | null
    _min: EstadosProductoMinAggregateOutputType | null
    _max: EstadosProductoMaxAggregateOutputType | null
  }

  type GetEstadosProductoGroupByPayload<T extends EstadosProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadosProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadosProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadosProductoGroupByOutputType[P]>
            : GetScalarType<T[P], EstadosProductoGroupByOutputType[P]>
        }
      >
    >


  export type EstadosProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    productos?: boolean | EstadosProducto$productosArgs<ExtArgs>
    _count?: boolean | EstadosProductoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadosProducto"]>

  export type EstadosProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadosProducto"]>

  export type EstadosProductoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadosProducto"]>

  export type EstadosProductoSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type EstadosProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["estadosProducto"]>
  export type EstadosProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | EstadosProducto$productosArgs<ExtArgs>
    _count?: boolean | EstadosProductoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstadosProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EstadosProductoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstadosProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstadosProducto"
    objects: {
      productos: Prisma.$ProductosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["estadosProducto"]>
    composites: {}
  }

  type EstadosProductoGetPayload<S extends boolean | null | undefined | EstadosProductoDefaultArgs> = $Result.GetResult<Prisma.$EstadosProductoPayload, S>

  type EstadosProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstadosProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadosProductoCountAggregateInputType | true
    }

  export interface EstadosProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstadosProducto'], meta: { name: 'EstadosProducto' } }
    /**
     * Find zero or one EstadosProducto that matches the filter.
     * @param {EstadosProductoFindUniqueArgs} args - Arguments to find a EstadosProducto
     * @example
     * // Get one EstadosProducto
     * const estadosProducto = await prisma.estadosProducto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstadosProductoFindUniqueArgs>(args: SelectSubset<T, EstadosProductoFindUniqueArgs<ExtArgs>>): Prisma__EstadosProductoClient<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstadosProducto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstadosProductoFindUniqueOrThrowArgs} args - Arguments to find a EstadosProducto
     * @example
     * // Get one EstadosProducto
     * const estadosProducto = await prisma.estadosProducto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstadosProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, EstadosProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstadosProductoClient<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadosProducto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosProductoFindFirstArgs} args - Arguments to find a EstadosProducto
     * @example
     * // Get one EstadosProducto
     * const estadosProducto = await prisma.estadosProducto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstadosProductoFindFirstArgs>(args?: SelectSubset<T, EstadosProductoFindFirstArgs<ExtArgs>>): Prisma__EstadosProductoClient<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadosProducto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosProductoFindFirstOrThrowArgs} args - Arguments to find a EstadosProducto
     * @example
     * // Get one EstadosProducto
     * const estadosProducto = await prisma.estadosProducto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstadosProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, EstadosProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstadosProductoClient<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstadosProductos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstadosProductos
     * const estadosProductos = await prisma.estadosProducto.findMany()
     * 
     * // Get first 10 EstadosProductos
     * const estadosProductos = await prisma.estadosProducto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estadosProductoWithIdOnly = await prisma.estadosProducto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EstadosProductoFindManyArgs>(args?: SelectSubset<T, EstadosProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstadosProducto.
     * @param {EstadosProductoCreateArgs} args - Arguments to create a EstadosProducto.
     * @example
     * // Create one EstadosProducto
     * const EstadosProducto = await prisma.estadosProducto.create({
     *   data: {
     *     // ... data to create a EstadosProducto
     *   }
     * })
     * 
     */
    create<T extends EstadosProductoCreateArgs>(args: SelectSubset<T, EstadosProductoCreateArgs<ExtArgs>>): Prisma__EstadosProductoClient<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstadosProductos.
     * @param {EstadosProductoCreateManyArgs} args - Arguments to create many EstadosProductos.
     * @example
     * // Create many EstadosProductos
     * const estadosProducto = await prisma.estadosProducto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstadosProductoCreateManyArgs>(args?: SelectSubset<T, EstadosProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstadosProductos and returns the data saved in the database.
     * @param {EstadosProductoCreateManyAndReturnArgs} args - Arguments to create many EstadosProductos.
     * @example
     * // Create many EstadosProductos
     * const estadosProducto = await prisma.estadosProducto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstadosProductos and only return the `id`
     * const estadosProductoWithIdOnly = await prisma.estadosProducto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstadosProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, EstadosProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EstadosProducto.
     * @param {EstadosProductoDeleteArgs} args - Arguments to delete one EstadosProducto.
     * @example
     * // Delete one EstadosProducto
     * const EstadosProducto = await prisma.estadosProducto.delete({
     *   where: {
     *     // ... filter to delete one EstadosProducto
     *   }
     * })
     * 
     */
    delete<T extends EstadosProductoDeleteArgs>(args: SelectSubset<T, EstadosProductoDeleteArgs<ExtArgs>>): Prisma__EstadosProductoClient<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstadosProducto.
     * @param {EstadosProductoUpdateArgs} args - Arguments to update one EstadosProducto.
     * @example
     * // Update one EstadosProducto
     * const estadosProducto = await prisma.estadosProducto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstadosProductoUpdateArgs>(args: SelectSubset<T, EstadosProductoUpdateArgs<ExtArgs>>): Prisma__EstadosProductoClient<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstadosProductos.
     * @param {EstadosProductoDeleteManyArgs} args - Arguments to filter EstadosProductos to delete.
     * @example
     * // Delete a few EstadosProductos
     * const { count } = await prisma.estadosProducto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstadosProductoDeleteManyArgs>(args?: SelectSubset<T, EstadosProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadosProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstadosProductos
     * const estadosProducto = await prisma.estadosProducto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstadosProductoUpdateManyArgs>(args: SelectSubset<T, EstadosProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadosProductos and returns the data updated in the database.
     * @param {EstadosProductoUpdateManyAndReturnArgs} args - Arguments to update many EstadosProductos.
     * @example
     * // Update many EstadosProductos
     * const estadosProducto = await prisma.estadosProducto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EstadosProductos and only return the `id`
     * const estadosProductoWithIdOnly = await prisma.estadosProducto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstadosProductoUpdateManyAndReturnArgs>(args: SelectSubset<T, EstadosProductoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EstadosProducto.
     * @param {EstadosProductoUpsertArgs} args - Arguments to update or create a EstadosProducto.
     * @example
     * // Update or create a EstadosProducto
     * const estadosProducto = await prisma.estadosProducto.upsert({
     *   create: {
     *     // ... data to create a EstadosProducto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstadosProducto we want to update
     *   }
     * })
     */
    upsert<T extends EstadosProductoUpsertArgs>(args: SelectSubset<T, EstadosProductoUpsertArgs<ExtArgs>>): Prisma__EstadosProductoClient<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstadosProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosProductoCountArgs} args - Arguments to filter EstadosProductos to count.
     * @example
     * // Count the number of EstadosProductos
     * const count = await prisma.estadosProducto.count({
     *   where: {
     *     // ... the filter for the EstadosProductos we want to count
     *   }
     * })
    **/
    count<T extends EstadosProductoCountArgs>(
      args?: Subset<T, EstadosProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadosProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstadosProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadosProductoAggregateArgs>(args: Subset<T, EstadosProductoAggregateArgs>): Prisma.PrismaPromise<GetEstadosProductoAggregateType<T>>

    /**
     * Group by EstadosProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstadosProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstadosProductoGroupByArgs['orderBy'] }
        : { orderBy?: EstadosProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstadosProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadosProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstadosProducto model
   */
  readonly fields: EstadosProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstadosProducto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstadosProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends EstadosProducto$productosArgs<ExtArgs> = {}>(args?: Subset<T, EstadosProducto$productosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstadosProducto model
   */
  interface EstadosProductoFieldRefs {
    readonly id: FieldRef<"EstadosProducto", 'Int'>
    readonly nombre: FieldRef<"EstadosProducto", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EstadosProducto findUnique
   */
  export type EstadosProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosProductoInclude<ExtArgs> | null
    /**
     * Filter, which EstadosProducto to fetch.
     */
    where: EstadosProductoWhereUniqueInput
  }

  /**
   * EstadosProducto findUniqueOrThrow
   */
  export type EstadosProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosProductoInclude<ExtArgs> | null
    /**
     * Filter, which EstadosProducto to fetch.
     */
    where: EstadosProductoWhereUniqueInput
  }

  /**
   * EstadosProducto findFirst
   */
  export type EstadosProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosProductoInclude<ExtArgs> | null
    /**
     * Filter, which EstadosProducto to fetch.
     */
    where?: EstadosProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosProductos to fetch.
     */
    orderBy?: EstadosProductoOrderByWithRelationInput | EstadosProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadosProductos.
     */
    cursor?: EstadosProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadosProductos.
     */
    distinct?: EstadosProductoScalarFieldEnum | EstadosProductoScalarFieldEnum[]
  }

  /**
   * EstadosProducto findFirstOrThrow
   */
  export type EstadosProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosProductoInclude<ExtArgs> | null
    /**
     * Filter, which EstadosProducto to fetch.
     */
    where?: EstadosProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosProductos to fetch.
     */
    orderBy?: EstadosProductoOrderByWithRelationInput | EstadosProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadosProductos.
     */
    cursor?: EstadosProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadosProductos.
     */
    distinct?: EstadosProductoScalarFieldEnum | EstadosProductoScalarFieldEnum[]
  }

  /**
   * EstadosProducto findMany
   */
  export type EstadosProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosProductoInclude<ExtArgs> | null
    /**
     * Filter, which EstadosProductos to fetch.
     */
    where?: EstadosProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosProductos to fetch.
     */
    orderBy?: EstadosProductoOrderByWithRelationInput | EstadosProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstadosProductos.
     */
    cursor?: EstadosProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosProductos.
     */
    skip?: number
    distinct?: EstadosProductoScalarFieldEnum | EstadosProductoScalarFieldEnum[]
  }

  /**
   * EstadosProducto create
   */
  export type EstadosProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a EstadosProducto.
     */
    data: XOR<EstadosProductoCreateInput, EstadosProductoUncheckedCreateInput>
  }

  /**
   * EstadosProducto createMany
   */
  export type EstadosProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstadosProductos.
     */
    data: EstadosProductoCreateManyInput | EstadosProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadosProducto createManyAndReturn
   */
  export type EstadosProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * The data used to create many EstadosProductos.
     */
    data: EstadosProductoCreateManyInput | EstadosProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadosProducto update
   */
  export type EstadosProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a EstadosProducto.
     */
    data: XOR<EstadosProductoUpdateInput, EstadosProductoUncheckedUpdateInput>
    /**
     * Choose, which EstadosProducto to update.
     */
    where: EstadosProductoWhereUniqueInput
  }

  /**
   * EstadosProducto updateMany
   */
  export type EstadosProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstadosProductos.
     */
    data: XOR<EstadosProductoUpdateManyMutationInput, EstadosProductoUncheckedUpdateManyInput>
    /**
     * Filter which EstadosProductos to update
     */
    where?: EstadosProductoWhereInput
    /**
     * Limit how many EstadosProductos to update.
     */
    limit?: number
  }

  /**
   * EstadosProducto updateManyAndReturn
   */
  export type EstadosProductoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * The data used to update EstadosProductos.
     */
    data: XOR<EstadosProductoUpdateManyMutationInput, EstadosProductoUncheckedUpdateManyInput>
    /**
     * Filter which EstadosProductos to update
     */
    where?: EstadosProductoWhereInput
    /**
     * Limit how many EstadosProductos to update.
     */
    limit?: number
  }

  /**
   * EstadosProducto upsert
   */
  export type EstadosProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the EstadosProducto to update in case it exists.
     */
    where: EstadosProductoWhereUniqueInput
    /**
     * In case the EstadosProducto found by the `where` argument doesn't exist, create a new EstadosProducto with this data.
     */
    create: XOR<EstadosProductoCreateInput, EstadosProductoUncheckedCreateInput>
    /**
     * In case the EstadosProducto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstadosProductoUpdateInput, EstadosProductoUncheckedUpdateInput>
  }

  /**
   * EstadosProducto delete
   */
  export type EstadosProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosProductoInclude<ExtArgs> | null
    /**
     * Filter which EstadosProducto to delete.
     */
    where: EstadosProductoWhereUniqueInput
  }

  /**
   * EstadosProducto deleteMany
   */
  export type EstadosProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadosProductos to delete
     */
    where?: EstadosProductoWhereInput
    /**
     * Limit how many EstadosProductos to delete.
     */
    limit?: number
  }

  /**
   * EstadosProducto.productos
   */
  export type EstadosProducto$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    where?: ProductosWhereInput
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    cursor?: ProductosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * EstadosProducto without action
   */
  export type EstadosProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosProducto
     */
    select?: EstadosProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosProducto
     */
    omit?: EstadosProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosProductoInclude<ExtArgs> | null
  }


  /**
   * Model Productos
   */

  export type AggregateProductos = {
    _count: ProductosCountAggregateOutputType | null
    _avg: ProductosAvgAggregateOutputType | null
    _sum: ProductosSumAggregateOutputType | null
    _min: ProductosMinAggregateOutputType | null
    _max: ProductosMaxAggregateOutputType | null
  }

  export type ProductosAvgAggregateOutputType = {
    id: number | null
    categoriaId: number | null
    vendedorId: number | null
    precioAnterior: Decimal | null
    precioActual: Decimal | null
    calificacion: Decimal | null
    cantidad: number | null
    estadoId: number | null
  }

  export type ProductosSumAggregateOutputType = {
    id: number | null
    categoriaId: number | null
    vendedorId: number | null
    precioAnterior: Decimal | null
    precioActual: Decimal | null
    calificacion: Decimal | null
    cantidad: number | null
    estadoId: number | null
  }

  export type ProductosMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    categoriaId: number | null
    vendedorId: number | null
    precioAnterior: Decimal | null
    precioActual: Decimal | null
    descripcion: string | null
    calificacion: Decimal | null
    cantidad: number | null
    fechaAgregado: Date | null
    estadoId: number | null
  }

  export type ProductosMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    categoriaId: number | null
    vendedorId: number | null
    precioAnterior: Decimal | null
    precioActual: Decimal | null
    descripcion: string | null
    calificacion: Decimal | null
    cantidad: number | null
    fechaAgregado: Date | null
    estadoId: number | null
  }

  export type ProductosCountAggregateOutputType = {
    id: number
    nombre: number
    categoriaId: number
    vendedorId: number
    precioAnterior: number
    precioActual: number
    descripcion: number
    calificacion: number
    cantidad: number
    fechaAgregado: number
    estadoId: number
    _all: number
  }


  export type ProductosAvgAggregateInputType = {
    id?: true
    categoriaId?: true
    vendedorId?: true
    precioAnterior?: true
    precioActual?: true
    calificacion?: true
    cantidad?: true
    estadoId?: true
  }

  export type ProductosSumAggregateInputType = {
    id?: true
    categoriaId?: true
    vendedorId?: true
    precioAnterior?: true
    precioActual?: true
    calificacion?: true
    cantidad?: true
    estadoId?: true
  }

  export type ProductosMinAggregateInputType = {
    id?: true
    nombre?: true
    categoriaId?: true
    vendedorId?: true
    precioAnterior?: true
    precioActual?: true
    descripcion?: true
    calificacion?: true
    cantidad?: true
    fechaAgregado?: true
    estadoId?: true
  }

  export type ProductosMaxAggregateInputType = {
    id?: true
    nombre?: true
    categoriaId?: true
    vendedorId?: true
    precioAnterior?: true
    precioActual?: true
    descripcion?: true
    calificacion?: true
    cantidad?: true
    fechaAgregado?: true
    estadoId?: true
  }

  export type ProductosCountAggregateInputType = {
    id?: true
    nombre?: true
    categoriaId?: true
    vendedorId?: true
    precioAnterior?: true
    precioActual?: true
    descripcion?: true
    calificacion?: true
    cantidad?: true
    fechaAgregado?: true
    estadoId?: true
    _all?: true
  }

  export type ProductosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to aggregate.
     */
    where?: ProductosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Productos
    **/
    _count?: true | ProductosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductosMaxAggregateInputType
  }

  export type GetProductosAggregateType<T extends ProductosAggregateArgs> = {
        [P in keyof T & keyof AggregateProductos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductos[P]>
      : GetScalarType<T[P], AggregateProductos[P]>
  }




  export type ProductosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductosWhereInput
    orderBy?: ProductosOrderByWithAggregationInput | ProductosOrderByWithAggregationInput[]
    by: ProductosScalarFieldEnum[] | ProductosScalarFieldEnum
    having?: ProductosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductosCountAggregateInputType | true
    _avg?: ProductosAvgAggregateInputType
    _sum?: ProductosSumAggregateInputType
    _min?: ProductosMinAggregateInputType
    _max?: ProductosMaxAggregateInputType
  }

  export type ProductosGroupByOutputType = {
    id: number
    nombre: string
    categoriaId: number | null
    vendedorId: number
    precioAnterior: Decimal | null
    precioActual: Decimal | null
    descripcion: string | null
    calificacion: Decimal | null
    cantidad: number | null
    fechaAgregado: Date
    estadoId: number
    _count: ProductosCountAggregateOutputType | null
    _avg: ProductosAvgAggregateOutputType | null
    _sum: ProductosSumAggregateOutputType | null
    _min: ProductosMinAggregateOutputType | null
    _max: ProductosMaxAggregateOutputType | null
  }

  type GetProductosGroupByPayload<T extends ProductosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductosGroupByOutputType[P]>
            : GetScalarType<T[P], ProductosGroupByOutputType[P]>
        }
      >
    >


  export type ProductosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    categoriaId?: boolean
    vendedorId?: boolean
    precioAnterior?: boolean
    precioActual?: boolean
    descripcion?: boolean
    calificacion?: boolean
    cantidad?: boolean
    fechaAgregado?: boolean
    estadoId?: boolean
    categoria?: boolean | Productos$categoriaArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosProductoDefaultArgs<ExtArgs>
    transacciones?: boolean | Productos$transaccionesArgs<ExtArgs>
    carrito?: boolean | Productos$carritoArgs<ExtArgs>
    imagenes?: boolean | Productos$imagenesArgs<ExtArgs>
    reportes?: boolean | Productos$reportesArgs<ExtArgs>
    _count?: boolean | ProductosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productos"]>

  export type ProductosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    categoriaId?: boolean
    vendedorId?: boolean
    precioAnterior?: boolean
    precioActual?: boolean
    descripcion?: boolean
    calificacion?: boolean
    cantidad?: boolean
    fechaAgregado?: boolean
    estadoId?: boolean
    categoria?: boolean | Productos$categoriaArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productos"]>

  export type ProductosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    categoriaId?: boolean
    vendedorId?: boolean
    precioAnterior?: boolean
    precioActual?: boolean
    descripcion?: boolean
    calificacion?: boolean
    cantidad?: boolean
    fechaAgregado?: boolean
    estadoId?: boolean
    categoria?: boolean | Productos$categoriaArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosProductoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productos"]>

  export type ProductosSelectScalar = {
    id?: boolean
    nombre?: boolean
    categoriaId?: boolean
    vendedorId?: boolean
    precioAnterior?: boolean
    precioActual?: boolean
    descripcion?: boolean
    calificacion?: boolean
    cantidad?: boolean
    fechaAgregado?: boolean
    estadoId?: boolean
  }

  export type ProductosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "categoriaId" | "vendedorId" | "precioAnterior" | "precioActual" | "descripcion" | "calificacion" | "cantidad" | "fechaAgregado" | "estadoId", ExtArgs["result"]["productos"]>
  export type ProductosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | Productos$categoriaArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosProductoDefaultArgs<ExtArgs>
    transacciones?: boolean | Productos$transaccionesArgs<ExtArgs>
    carrito?: boolean | Productos$carritoArgs<ExtArgs>
    imagenes?: boolean | Productos$imagenesArgs<ExtArgs>
    reportes?: boolean | Productos$reportesArgs<ExtArgs>
    _count?: boolean | ProductosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | Productos$categoriaArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosProductoDefaultArgs<ExtArgs>
  }
  export type ProductosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categoria?: boolean | Productos$categoriaArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosProductoDefaultArgs<ExtArgs>
  }

  export type $ProductosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Productos"
    objects: {
      categoria: Prisma.$CategoriasPayload<ExtArgs> | null
      vendedor: Prisma.$CuentasPayload<ExtArgs>
      estado: Prisma.$EstadosProductoPayload<ExtArgs>
      transacciones: Prisma.$TransaccionesPayload<ExtArgs>[]
      carrito: Prisma.$CarritoPayload<ExtArgs>[]
      imagenes: Prisma.$ImagenesProductoPayload<ExtArgs>[]
      reportes: Prisma.$ReportesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      categoriaId: number | null
      vendedorId: number
      precioAnterior: Prisma.Decimal | null
      precioActual: Prisma.Decimal | null
      descripcion: string | null
      calificacion: Prisma.Decimal | null
      cantidad: number | null
      fechaAgregado: Date
      estadoId: number
    }, ExtArgs["result"]["productos"]>
    composites: {}
  }

  type ProductosGetPayload<S extends boolean | null | undefined | ProductosDefaultArgs> = $Result.GetResult<Prisma.$ProductosPayload, S>

  type ProductosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductosCountAggregateInputType | true
    }

  export interface ProductosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Productos'], meta: { name: 'Productos' } }
    /**
     * Find zero or one Productos that matches the filter.
     * @param {ProductosFindUniqueArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductosFindUniqueArgs>(args: SelectSubset<T, ProductosFindUniqueArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Productos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductosFindUniqueOrThrowArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductosFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosFindFirstArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductosFindFirstArgs>(args?: SelectSubset<T, ProductosFindFirstArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosFindFirstOrThrowArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductosFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductosFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.productos.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.productos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productosWithIdOnly = await prisma.productos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductosFindManyArgs>(args?: SelectSubset<T, ProductosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Productos.
     * @param {ProductosCreateArgs} args - Arguments to create a Productos.
     * @example
     * // Create one Productos
     * const Productos = await prisma.productos.create({
     *   data: {
     *     // ... data to create a Productos
     *   }
     * })
     * 
     */
    create<T extends ProductosCreateArgs>(args: SelectSubset<T, ProductosCreateArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {ProductosCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const productos = await prisma.productos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductosCreateManyArgs>(args?: SelectSubset<T, ProductosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {ProductosCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const productos = await prisma.productos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `id`
     * const productosWithIdOnly = await prisma.productos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductosCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Productos.
     * @param {ProductosDeleteArgs} args - Arguments to delete one Productos.
     * @example
     * // Delete one Productos
     * const Productos = await prisma.productos.delete({
     *   where: {
     *     // ... filter to delete one Productos
     *   }
     * })
     * 
     */
    delete<T extends ProductosDeleteArgs>(args: SelectSubset<T, ProductosDeleteArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Productos.
     * @param {ProductosUpdateArgs} args - Arguments to update one Productos.
     * @example
     * // Update one Productos
     * const productos = await prisma.productos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductosUpdateArgs>(args: SelectSubset<T, ProductosUpdateArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {ProductosDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.productos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductosDeleteManyArgs>(args?: SelectSubset<T, ProductosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const productos = await prisma.productos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductosUpdateManyArgs>(args: SelectSubset<T, ProductosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos and returns the data updated in the database.
     * @param {ProductosUpdateManyAndReturnArgs} args - Arguments to update many Productos.
     * @example
     * // Update many Productos
     * const productos = await prisma.productos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos and only return the `id`
     * const productosWithIdOnly = await prisma.productos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductosUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Productos.
     * @param {ProductosUpsertArgs} args - Arguments to update or create a Productos.
     * @example
     * // Update or create a Productos
     * const productos = await prisma.productos.upsert({
     *   create: {
     *     // ... data to create a Productos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Productos we want to update
     *   }
     * })
     */
    upsert<T extends ProductosUpsertArgs>(args: SelectSubset<T, ProductosUpsertArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.productos.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends ProductosCountArgs>(
      args?: Subset<T, ProductosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductosAggregateArgs>(args: Subset<T, ProductosAggregateArgs>): Prisma.PrismaPromise<GetProductosAggregateType<T>>

    /**
     * Group by Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductosGroupByArgs['orderBy'] }
        : { orderBy?: ProductosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Productos model
   */
  readonly fields: ProductosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Productos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categoria<T extends Productos$categoriaArgs<ExtArgs> = {}>(args?: Subset<T, Productos$categoriaArgs<ExtArgs>>): Prisma__CategoriasClient<$Result.GetResult<Prisma.$CategoriasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    vendedor<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    estado<T extends EstadosProductoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstadosProductoDefaultArgs<ExtArgs>>): Prisma__EstadosProductoClient<$Result.GetResult<Prisma.$EstadosProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    transacciones<T extends Productos$transaccionesArgs<ExtArgs> = {}>(args?: Subset<T, Productos$transaccionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    carrito<T extends Productos$carritoArgs<ExtArgs> = {}>(args?: Subset<T, Productos$carritoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    imagenes<T extends Productos$imagenesArgs<ExtArgs> = {}>(args?: Subset<T, Productos$imagenesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reportes<T extends Productos$reportesArgs<ExtArgs> = {}>(args?: Subset<T, Productos$reportesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Productos model
   */
  interface ProductosFieldRefs {
    readonly id: FieldRef<"Productos", 'Int'>
    readonly nombre: FieldRef<"Productos", 'String'>
    readonly categoriaId: FieldRef<"Productos", 'Int'>
    readonly vendedorId: FieldRef<"Productos", 'Int'>
    readonly precioAnterior: FieldRef<"Productos", 'Decimal'>
    readonly precioActual: FieldRef<"Productos", 'Decimal'>
    readonly descripcion: FieldRef<"Productos", 'String'>
    readonly calificacion: FieldRef<"Productos", 'Decimal'>
    readonly cantidad: FieldRef<"Productos", 'Int'>
    readonly fechaAgregado: FieldRef<"Productos", 'DateTime'>
    readonly estadoId: FieldRef<"Productos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Productos findUnique
   */
  export type ProductosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where: ProductosWhereUniqueInput
  }

  /**
   * Productos findUniqueOrThrow
   */
  export type ProductosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where: ProductosWhereUniqueInput
  }

  /**
   * Productos findFirst
   */
  export type ProductosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * Productos findFirstOrThrow
   */
  export type ProductosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Productos.
     */
    cursor?: ProductosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Productos.
     */
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * Productos findMany
   */
  export type ProductosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter, which Productos to fetch.
     */
    where?: ProductosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Productos to fetch.
     */
    orderBy?: ProductosOrderByWithRelationInput | ProductosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Productos.
     */
    cursor?: ProductosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Productos.
     */
    skip?: number
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * Productos create
   */
  export type ProductosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * The data needed to create a Productos.
     */
    data: XOR<ProductosCreateInput, ProductosUncheckedCreateInput>
  }

  /**
   * Productos createMany
   */
  export type ProductosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Productos.
     */
    data: ProductosCreateManyInput | ProductosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Productos createManyAndReturn
   */
  export type ProductosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * The data used to create many Productos.
     */
    data: ProductosCreateManyInput | ProductosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Productos update
   */
  export type ProductosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * The data needed to update a Productos.
     */
    data: XOR<ProductosUpdateInput, ProductosUncheckedUpdateInput>
    /**
     * Choose, which Productos to update.
     */
    where: ProductosWhereUniqueInput
  }

  /**
   * Productos updateMany
   */
  export type ProductosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductosUpdateManyMutationInput, ProductosUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductosWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
  }

  /**
   * Productos updateManyAndReturn
   */
  export type ProductosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * The data used to update Productos.
     */
    data: XOR<ProductosUpdateManyMutationInput, ProductosUncheckedUpdateManyInput>
    /**
     * Filter which Productos to update
     */
    where?: ProductosWhereInput
    /**
     * Limit how many Productos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Productos upsert
   */
  export type ProductosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * The filter to search for the Productos to update in case it exists.
     */
    where: ProductosWhereUniqueInput
    /**
     * In case the Productos found by the `where` argument doesn't exist, create a new Productos with this data.
     */
    create: XOR<ProductosCreateInput, ProductosUncheckedCreateInput>
    /**
     * In case the Productos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductosUpdateInput, ProductosUncheckedUpdateInput>
  }

  /**
   * Productos delete
   */
  export type ProductosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    /**
     * Filter which Productos to delete.
     */
    where: ProductosWhereUniqueInput
  }

  /**
   * Productos deleteMany
   */
  export type ProductosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Productos to delete
     */
    where?: ProductosWhereInput
    /**
     * Limit how many Productos to delete.
     */
    limit?: number
  }

  /**
   * Productos.categoria
   */
  export type Productos$categoriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categorias
     */
    select?: CategoriasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categorias
     */
    omit?: CategoriasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoriasInclude<ExtArgs> | null
    where?: CategoriasWhereInput
  }

  /**
   * Productos.transacciones
   */
  export type Productos$transaccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    where?: TransaccionesWhereInput
    orderBy?: TransaccionesOrderByWithRelationInput | TransaccionesOrderByWithRelationInput[]
    cursor?: TransaccionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionesScalarFieldEnum | TransaccionesScalarFieldEnum[]
  }

  /**
   * Productos.carrito
   */
  export type Productos$carritoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    where?: CarritoWhereInput
    orderBy?: CarritoOrderByWithRelationInput | CarritoOrderByWithRelationInput[]
    cursor?: CarritoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CarritoScalarFieldEnum | CarritoScalarFieldEnum[]
  }

  /**
   * Productos.imagenes
   */
  export type Productos$imagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
    where?: ImagenesProductoWhereInput
    orderBy?: ImagenesProductoOrderByWithRelationInput | ImagenesProductoOrderByWithRelationInput[]
    cursor?: ImagenesProductoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImagenesProductoScalarFieldEnum | ImagenesProductoScalarFieldEnum[]
  }

  /**
   * Productos.reportes
   */
  export type Productos$reportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    where?: ReportesWhereInput
    orderBy?: ReportesOrderByWithRelationInput | ReportesOrderByWithRelationInput[]
    cursor?: ReportesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * Productos without action
   */
  export type ProductosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
  }


  /**
   * Model ImagenesProducto
   */

  export type AggregateImagenesProducto = {
    _count: ImagenesProductoCountAggregateOutputType | null
    _avg: ImagenesProductoAvgAggregateOutputType | null
    _sum: ImagenesProductoSumAggregateOutputType | null
    _min: ImagenesProductoMinAggregateOutputType | null
    _max: ImagenesProductoMaxAggregateOutputType | null
  }

  export type ImagenesProductoAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
  }

  export type ImagenesProductoSumAggregateOutputType = {
    id: number | null
    productoId: number | null
  }

  export type ImagenesProductoMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    urlImagen: Uint8Array | null
  }

  export type ImagenesProductoMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    urlImagen: Uint8Array | null
  }

  export type ImagenesProductoCountAggregateOutputType = {
    id: number
    productoId: number
    urlImagen: number
    _all: number
  }


  export type ImagenesProductoAvgAggregateInputType = {
    id?: true
    productoId?: true
  }

  export type ImagenesProductoSumAggregateInputType = {
    id?: true
    productoId?: true
  }

  export type ImagenesProductoMinAggregateInputType = {
    id?: true
    productoId?: true
    urlImagen?: true
  }

  export type ImagenesProductoMaxAggregateInputType = {
    id?: true
    productoId?: true
    urlImagen?: true
  }

  export type ImagenesProductoCountAggregateInputType = {
    id?: true
    productoId?: true
    urlImagen?: true
    _all?: true
  }

  export type ImagenesProductoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ImagenesProducto to aggregate.
     */
    where?: ImagenesProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImagenesProductos to fetch.
     */
    orderBy?: ImagenesProductoOrderByWithRelationInput | ImagenesProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ImagenesProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImagenesProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImagenesProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ImagenesProductos
    **/
    _count?: true | ImagenesProductoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImagenesProductoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImagenesProductoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImagenesProductoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImagenesProductoMaxAggregateInputType
  }

  export type GetImagenesProductoAggregateType<T extends ImagenesProductoAggregateArgs> = {
        [P in keyof T & keyof AggregateImagenesProducto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImagenesProducto[P]>
      : GetScalarType<T[P], AggregateImagenesProducto[P]>
  }




  export type ImagenesProductoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImagenesProductoWhereInput
    orderBy?: ImagenesProductoOrderByWithAggregationInput | ImagenesProductoOrderByWithAggregationInput[]
    by: ImagenesProductoScalarFieldEnum[] | ImagenesProductoScalarFieldEnum
    having?: ImagenesProductoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImagenesProductoCountAggregateInputType | true
    _avg?: ImagenesProductoAvgAggregateInputType
    _sum?: ImagenesProductoSumAggregateInputType
    _min?: ImagenesProductoMinAggregateInputType
    _max?: ImagenesProductoMaxAggregateInputType
  }

  export type ImagenesProductoGroupByOutputType = {
    id: number
    productoId: number
    urlImagen: Uint8Array | null
    _count: ImagenesProductoCountAggregateOutputType | null
    _avg: ImagenesProductoAvgAggregateOutputType | null
    _sum: ImagenesProductoSumAggregateOutputType | null
    _min: ImagenesProductoMinAggregateOutputType | null
    _max: ImagenesProductoMaxAggregateOutputType | null
  }

  type GetImagenesProductoGroupByPayload<T extends ImagenesProductoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImagenesProductoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImagenesProductoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImagenesProductoGroupByOutputType[P]>
            : GetScalarType<T[P], ImagenesProductoGroupByOutputType[P]>
        }
      >
    >


  export type ImagenesProductoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    urlImagen?: boolean
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagenesProducto"]>

  export type ImagenesProductoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    urlImagen?: boolean
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagenesProducto"]>

  export type ImagenesProductoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    urlImagen?: boolean
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["imagenesProducto"]>

  export type ImagenesProductoSelectScalar = {
    id?: boolean
    productoId?: boolean
    urlImagen?: boolean
  }

  export type ImagenesProductoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productoId" | "urlImagen", ExtArgs["result"]["imagenesProducto"]>
  export type ImagenesProductoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }
  export type ImagenesProductoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }
  export type ImagenesProductoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }

  export type $ImagenesProductoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ImagenesProducto"
    objects: {
      producto: Prisma.$ProductosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      urlImagen: Uint8Array | null
    }, ExtArgs["result"]["imagenesProducto"]>
    composites: {}
  }

  type ImagenesProductoGetPayload<S extends boolean | null | undefined | ImagenesProductoDefaultArgs> = $Result.GetResult<Prisma.$ImagenesProductoPayload, S>

  type ImagenesProductoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ImagenesProductoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ImagenesProductoCountAggregateInputType | true
    }

  export interface ImagenesProductoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ImagenesProducto'], meta: { name: 'ImagenesProducto' } }
    /**
     * Find zero or one ImagenesProducto that matches the filter.
     * @param {ImagenesProductoFindUniqueArgs} args - Arguments to find a ImagenesProducto
     * @example
     * // Get one ImagenesProducto
     * const imagenesProducto = await prisma.imagenesProducto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ImagenesProductoFindUniqueArgs>(args: SelectSubset<T, ImagenesProductoFindUniqueArgs<ExtArgs>>): Prisma__ImagenesProductoClient<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ImagenesProducto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ImagenesProductoFindUniqueOrThrowArgs} args - Arguments to find a ImagenesProducto
     * @example
     * // Get one ImagenesProducto
     * const imagenesProducto = await prisma.imagenesProducto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ImagenesProductoFindUniqueOrThrowArgs>(args: SelectSubset<T, ImagenesProductoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ImagenesProductoClient<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ImagenesProducto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesProductoFindFirstArgs} args - Arguments to find a ImagenesProducto
     * @example
     * // Get one ImagenesProducto
     * const imagenesProducto = await prisma.imagenesProducto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ImagenesProductoFindFirstArgs>(args?: SelectSubset<T, ImagenesProductoFindFirstArgs<ExtArgs>>): Prisma__ImagenesProductoClient<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ImagenesProducto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesProductoFindFirstOrThrowArgs} args - Arguments to find a ImagenesProducto
     * @example
     * // Get one ImagenesProducto
     * const imagenesProducto = await prisma.imagenesProducto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ImagenesProductoFindFirstOrThrowArgs>(args?: SelectSubset<T, ImagenesProductoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ImagenesProductoClient<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ImagenesProductos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesProductoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ImagenesProductos
     * const imagenesProductos = await prisma.imagenesProducto.findMany()
     * 
     * // Get first 10 ImagenesProductos
     * const imagenesProductos = await prisma.imagenesProducto.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imagenesProductoWithIdOnly = await prisma.imagenesProducto.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ImagenesProductoFindManyArgs>(args?: SelectSubset<T, ImagenesProductoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ImagenesProducto.
     * @param {ImagenesProductoCreateArgs} args - Arguments to create a ImagenesProducto.
     * @example
     * // Create one ImagenesProducto
     * const ImagenesProducto = await prisma.imagenesProducto.create({
     *   data: {
     *     // ... data to create a ImagenesProducto
     *   }
     * })
     * 
     */
    create<T extends ImagenesProductoCreateArgs>(args: SelectSubset<T, ImagenesProductoCreateArgs<ExtArgs>>): Prisma__ImagenesProductoClient<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ImagenesProductos.
     * @param {ImagenesProductoCreateManyArgs} args - Arguments to create many ImagenesProductos.
     * @example
     * // Create many ImagenesProductos
     * const imagenesProducto = await prisma.imagenesProducto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ImagenesProductoCreateManyArgs>(args?: SelectSubset<T, ImagenesProductoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ImagenesProductos and returns the data saved in the database.
     * @param {ImagenesProductoCreateManyAndReturnArgs} args - Arguments to create many ImagenesProductos.
     * @example
     * // Create many ImagenesProductos
     * const imagenesProducto = await prisma.imagenesProducto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ImagenesProductos and only return the `id`
     * const imagenesProductoWithIdOnly = await prisma.imagenesProducto.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ImagenesProductoCreateManyAndReturnArgs>(args?: SelectSubset<T, ImagenesProductoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ImagenesProducto.
     * @param {ImagenesProductoDeleteArgs} args - Arguments to delete one ImagenesProducto.
     * @example
     * // Delete one ImagenesProducto
     * const ImagenesProducto = await prisma.imagenesProducto.delete({
     *   where: {
     *     // ... filter to delete one ImagenesProducto
     *   }
     * })
     * 
     */
    delete<T extends ImagenesProductoDeleteArgs>(args: SelectSubset<T, ImagenesProductoDeleteArgs<ExtArgs>>): Prisma__ImagenesProductoClient<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ImagenesProducto.
     * @param {ImagenesProductoUpdateArgs} args - Arguments to update one ImagenesProducto.
     * @example
     * // Update one ImagenesProducto
     * const imagenesProducto = await prisma.imagenesProducto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ImagenesProductoUpdateArgs>(args: SelectSubset<T, ImagenesProductoUpdateArgs<ExtArgs>>): Prisma__ImagenesProductoClient<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ImagenesProductos.
     * @param {ImagenesProductoDeleteManyArgs} args - Arguments to filter ImagenesProductos to delete.
     * @example
     * // Delete a few ImagenesProductos
     * const { count } = await prisma.imagenesProducto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ImagenesProductoDeleteManyArgs>(args?: SelectSubset<T, ImagenesProductoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ImagenesProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesProductoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ImagenesProductos
     * const imagenesProducto = await prisma.imagenesProducto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ImagenesProductoUpdateManyArgs>(args: SelectSubset<T, ImagenesProductoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ImagenesProductos and returns the data updated in the database.
     * @param {ImagenesProductoUpdateManyAndReturnArgs} args - Arguments to update many ImagenesProductos.
     * @example
     * // Update many ImagenesProductos
     * const imagenesProducto = await prisma.imagenesProducto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ImagenesProductos and only return the `id`
     * const imagenesProductoWithIdOnly = await prisma.imagenesProducto.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ImagenesProductoUpdateManyAndReturnArgs>(args: SelectSubset<T, ImagenesProductoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ImagenesProducto.
     * @param {ImagenesProductoUpsertArgs} args - Arguments to update or create a ImagenesProducto.
     * @example
     * // Update or create a ImagenesProducto
     * const imagenesProducto = await prisma.imagenesProducto.upsert({
     *   create: {
     *     // ... data to create a ImagenesProducto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ImagenesProducto we want to update
     *   }
     * })
     */
    upsert<T extends ImagenesProductoUpsertArgs>(args: SelectSubset<T, ImagenesProductoUpsertArgs<ExtArgs>>): Prisma__ImagenesProductoClient<$Result.GetResult<Prisma.$ImagenesProductoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ImagenesProductos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesProductoCountArgs} args - Arguments to filter ImagenesProductos to count.
     * @example
     * // Count the number of ImagenesProductos
     * const count = await prisma.imagenesProducto.count({
     *   where: {
     *     // ... the filter for the ImagenesProductos we want to count
     *   }
     * })
    **/
    count<T extends ImagenesProductoCountArgs>(
      args?: Subset<T, ImagenesProductoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImagenesProductoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ImagenesProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesProductoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImagenesProductoAggregateArgs>(args: Subset<T, ImagenesProductoAggregateArgs>): Prisma.PrismaPromise<GetImagenesProductoAggregateType<T>>

    /**
     * Group by ImagenesProducto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagenesProductoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImagenesProductoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImagenesProductoGroupByArgs['orderBy'] }
        : { orderBy?: ImagenesProductoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImagenesProductoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImagenesProductoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ImagenesProducto model
   */
  readonly fields: ImagenesProductoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ImagenesProducto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ImagenesProductoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductosDefaultArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ImagenesProducto model
   */
  interface ImagenesProductoFieldRefs {
    readonly id: FieldRef<"ImagenesProducto", 'Int'>
    readonly productoId: FieldRef<"ImagenesProducto", 'Int'>
    readonly urlImagen: FieldRef<"ImagenesProducto", 'Bytes'>
  }
    

  // Custom InputTypes
  /**
   * ImagenesProducto findUnique
   */
  export type ImagenesProductoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
    /**
     * Filter, which ImagenesProducto to fetch.
     */
    where: ImagenesProductoWhereUniqueInput
  }

  /**
   * ImagenesProducto findUniqueOrThrow
   */
  export type ImagenesProductoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
    /**
     * Filter, which ImagenesProducto to fetch.
     */
    where: ImagenesProductoWhereUniqueInput
  }

  /**
   * ImagenesProducto findFirst
   */
  export type ImagenesProductoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
    /**
     * Filter, which ImagenesProducto to fetch.
     */
    where?: ImagenesProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImagenesProductos to fetch.
     */
    orderBy?: ImagenesProductoOrderByWithRelationInput | ImagenesProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ImagenesProductos.
     */
    cursor?: ImagenesProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImagenesProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImagenesProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ImagenesProductos.
     */
    distinct?: ImagenesProductoScalarFieldEnum | ImagenesProductoScalarFieldEnum[]
  }

  /**
   * ImagenesProducto findFirstOrThrow
   */
  export type ImagenesProductoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
    /**
     * Filter, which ImagenesProducto to fetch.
     */
    where?: ImagenesProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImagenesProductos to fetch.
     */
    orderBy?: ImagenesProductoOrderByWithRelationInput | ImagenesProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ImagenesProductos.
     */
    cursor?: ImagenesProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImagenesProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImagenesProductos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ImagenesProductos.
     */
    distinct?: ImagenesProductoScalarFieldEnum | ImagenesProductoScalarFieldEnum[]
  }

  /**
   * ImagenesProducto findMany
   */
  export type ImagenesProductoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
    /**
     * Filter, which ImagenesProductos to fetch.
     */
    where?: ImagenesProductoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ImagenesProductos to fetch.
     */
    orderBy?: ImagenesProductoOrderByWithRelationInput | ImagenesProductoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ImagenesProductos.
     */
    cursor?: ImagenesProductoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ImagenesProductos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ImagenesProductos.
     */
    skip?: number
    distinct?: ImagenesProductoScalarFieldEnum | ImagenesProductoScalarFieldEnum[]
  }

  /**
   * ImagenesProducto create
   */
  export type ImagenesProductoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
    /**
     * The data needed to create a ImagenesProducto.
     */
    data: XOR<ImagenesProductoCreateInput, ImagenesProductoUncheckedCreateInput>
  }

  /**
   * ImagenesProducto createMany
   */
  export type ImagenesProductoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ImagenesProductos.
     */
    data: ImagenesProductoCreateManyInput | ImagenesProductoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ImagenesProducto createManyAndReturn
   */
  export type ImagenesProductoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * The data used to create many ImagenesProductos.
     */
    data: ImagenesProductoCreateManyInput | ImagenesProductoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ImagenesProducto update
   */
  export type ImagenesProductoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
    /**
     * The data needed to update a ImagenesProducto.
     */
    data: XOR<ImagenesProductoUpdateInput, ImagenesProductoUncheckedUpdateInput>
    /**
     * Choose, which ImagenesProducto to update.
     */
    where: ImagenesProductoWhereUniqueInput
  }

  /**
   * ImagenesProducto updateMany
   */
  export type ImagenesProductoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ImagenesProductos.
     */
    data: XOR<ImagenesProductoUpdateManyMutationInput, ImagenesProductoUncheckedUpdateManyInput>
    /**
     * Filter which ImagenesProductos to update
     */
    where?: ImagenesProductoWhereInput
    /**
     * Limit how many ImagenesProductos to update.
     */
    limit?: number
  }

  /**
   * ImagenesProducto updateManyAndReturn
   */
  export type ImagenesProductoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * The data used to update ImagenesProductos.
     */
    data: XOR<ImagenesProductoUpdateManyMutationInput, ImagenesProductoUncheckedUpdateManyInput>
    /**
     * Filter which ImagenesProductos to update
     */
    where?: ImagenesProductoWhereInput
    /**
     * Limit how many ImagenesProductos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ImagenesProducto upsert
   */
  export type ImagenesProductoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
    /**
     * The filter to search for the ImagenesProducto to update in case it exists.
     */
    where: ImagenesProductoWhereUniqueInput
    /**
     * In case the ImagenesProducto found by the `where` argument doesn't exist, create a new ImagenesProducto with this data.
     */
    create: XOR<ImagenesProductoCreateInput, ImagenesProductoUncheckedCreateInput>
    /**
     * In case the ImagenesProducto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ImagenesProductoUpdateInput, ImagenesProductoUncheckedUpdateInput>
  }

  /**
   * ImagenesProducto delete
   */
  export type ImagenesProductoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
    /**
     * Filter which ImagenesProducto to delete.
     */
    where: ImagenesProductoWhereUniqueInput
  }

  /**
   * ImagenesProducto deleteMany
   */
  export type ImagenesProductoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ImagenesProductos to delete
     */
    where?: ImagenesProductoWhereInput
    /**
     * Limit how many ImagenesProductos to delete.
     */
    limit?: number
  }

  /**
   * ImagenesProducto without action
   */
  export type ImagenesProductoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImagenesProducto
     */
    select?: ImagenesProductoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ImagenesProducto
     */
    omit?: ImagenesProductoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImagenesProductoInclude<ExtArgs> | null
  }


  /**
   * Model EstadosTransaccion
   */

  export type AggregateEstadosTransaccion = {
    _count: EstadosTransaccionCountAggregateOutputType | null
    _avg: EstadosTransaccionAvgAggregateOutputType | null
    _sum: EstadosTransaccionSumAggregateOutputType | null
    _min: EstadosTransaccionMinAggregateOutputType | null
    _max: EstadosTransaccionMaxAggregateOutputType | null
  }

  export type EstadosTransaccionAvgAggregateOutputType = {
    id: number | null
  }

  export type EstadosTransaccionSumAggregateOutputType = {
    id: number | null
  }

  export type EstadosTransaccionMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadosTransaccionMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadosTransaccionCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type EstadosTransaccionAvgAggregateInputType = {
    id?: true
  }

  export type EstadosTransaccionSumAggregateInputType = {
    id?: true
  }

  export type EstadosTransaccionMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadosTransaccionMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadosTransaccionCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type EstadosTransaccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadosTransaccion to aggregate.
     */
    where?: EstadosTransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosTransaccions to fetch.
     */
    orderBy?: EstadosTransaccionOrderByWithRelationInput | EstadosTransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstadosTransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosTransaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosTransaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstadosTransaccions
    **/
    _count?: true | EstadosTransaccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadosTransaccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadosTransaccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadosTransaccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadosTransaccionMaxAggregateInputType
  }

  export type GetEstadosTransaccionAggregateType<T extends EstadosTransaccionAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadosTransaccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadosTransaccion[P]>
      : GetScalarType<T[P], AggregateEstadosTransaccion[P]>
  }




  export type EstadosTransaccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadosTransaccionWhereInput
    orderBy?: EstadosTransaccionOrderByWithAggregationInput | EstadosTransaccionOrderByWithAggregationInput[]
    by: EstadosTransaccionScalarFieldEnum[] | EstadosTransaccionScalarFieldEnum
    having?: EstadosTransaccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadosTransaccionCountAggregateInputType | true
    _avg?: EstadosTransaccionAvgAggregateInputType
    _sum?: EstadosTransaccionSumAggregateInputType
    _min?: EstadosTransaccionMinAggregateInputType
    _max?: EstadosTransaccionMaxAggregateInputType
  }

  export type EstadosTransaccionGroupByOutputType = {
    id: number
    nombre: string
    _count: EstadosTransaccionCountAggregateOutputType | null
    _avg: EstadosTransaccionAvgAggregateOutputType | null
    _sum: EstadosTransaccionSumAggregateOutputType | null
    _min: EstadosTransaccionMinAggregateOutputType | null
    _max: EstadosTransaccionMaxAggregateOutputType | null
  }

  type GetEstadosTransaccionGroupByPayload<T extends EstadosTransaccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadosTransaccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadosTransaccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadosTransaccionGroupByOutputType[P]>
            : GetScalarType<T[P], EstadosTransaccionGroupByOutputType[P]>
        }
      >
    >


  export type EstadosTransaccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    transacciones?: boolean | EstadosTransaccion$transaccionesArgs<ExtArgs>
    _count?: boolean | EstadosTransaccionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadosTransaccion"]>

  export type EstadosTransaccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadosTransaccion"]>

  export type EstadosTransaccionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadosTransaccion"]>

  export type EstadosTransaccionSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type EstadosTransaccionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["estadosTransaccion"]>
  export type EstadosTransaccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transacciones?: boolean | EstadosTransaccion$transaccionesArgs<ExtArgs>
    _count?: boolean | EstadosTransaccionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstadosTransaccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EstadosTransaccionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstadosTransaccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstadosTransaccion"
    objects: {
      transacciones: Prisma.$TransaccionesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["estadosTransaccion"]>
    composites: {}
  }

  type EstadosTransaccionGetPayload<S extends boolean | null | undefined | EstadosTransaccionDefaultArgs> = $Result.GetResult<Prisma.$EstadosTransaccionPayload, S>

  type EstadosTransaccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstadosTransaccionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadosTransaccionCountAggregateInputType | true
    }

  export interface EstadosTransaccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstadosTransaccion'], meta: { name: 'EstadosTransaccion' } }
    /**
     * Find zero or one EstadosTransaccion that matches the filter.
     * @param {EstadosTransaccionFindUniqueArgs} args - Arguments to find a EstadosTransaccion
     * @example
     * // Get one EstadosTransaccion
     * const estadosTransaccion = await prisma.estadosTransaccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstadosTransaccionFindUniqueArgs>(args: SelectSubset<T, EstadosTransaccionFindUniqueArgs<ExtArgs>>): Prisma__EstadosTransaccionClient<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstadosTransaccion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstadosTransaccionFindUniqueOrThrowArgs} args - Arguments to find a EstadosTransaccion
     * @example
     * // Get one EstadosTransaccion
     * const estadosTransaccion = await prisma.estadosTransaccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstadosTransaccionFindUniqueOrThrowArgs>(args: SelectSubset<T, EstadosTransaccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstadosTransaccionClient<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadosTransaccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosTransaccionFindFirstArgs} args - Arguments to find a EstadosTransaccion
     * @example
     * // Get one EstadosTransaccion
     * const estadosTransaccion = await prisma.estadosTransaccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstadosTransaccionFindFirstArgs>(args?: SelectSubset<T, EstadosTransaccionFindFirstArgs<ExtArgs>>): Prisma__EstadosTransaccionClient<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadosTransaccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosTransaccionFindFirstOrThrowArgs} args - Arguments to find a EstadosTransaccion
     * @example
     * // Get one EstadosTransaccion
     * const estadosTransaccion = await prisma.estadosTransaccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstadosTransaccionFindFirstOrThrowArgs>(args?: SelectSubset<T, EstadosTransaccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstadosTransaccionClient<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstadosTransaccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosTransaccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstadosTransaccions
     * const estadosTransaccions = await prisma.estadosTransaccion.findMany()
     * 
     * // Get first 10 EstadosTransaccions
     * const estadosTransaccions = await prisma.estadosTransaccion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estadosTransaccionWithIdOnly = await prisma.estadosTransaccion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EstadosTransaccionFindManyArgs>(args?: SelectSubset<T, EstadosTransaccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstadosTransaccion.
     * @param {EstadosTransaccionCreateArgs} args - Arguments to create a EstadosTransaccion.
     * @example
     * // Create one EstadosTransaccion
     * const EstadosTransaccion = await prisma.estadosTransaccion.create({
     *   data: {
     *     // ... data to create a EstadosTransaccion
     *   }
     * })
     * 
     */
    create<T extends EstadosTransaccionCreateArgs>(args: SelectSubset<T, EstadosTransaccionCreateArgs<ExtArgs>>): Prisma__EstadosTransaccionClient<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstadosTransaccions.
     * @param {EstadosTransaccionCreateManyArgs} args - Arguments to create many EstadosTransaccions.
     * @example
     * // Create many EstadosTransaccions
     * const estadosTransaccion = await prisma.estadosTransaccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstadosTransaccionCreateManyArgs>(args?: SelectSubset<T, EstadosTransaccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstadosTransaccions and returns the data saved in the database.
     * @param {EstadosTransaccionCreateManyAndReturnArgs} args - Arguments to create many EstadosTransaccions.
     * @example
     * // Create many EstadosTransaccions
     * const estadosTransaccion = await prisma.estadosTransaccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstadosTransaccions and only return the `id`
     * const estadosTransaccionWithIdOnly = await prisma.estadosTransaccion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstadosTransaccionCreateManyAndReturnArgs>(args?: SelectSubset<T, EstadosTransaccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EstadosTransaccion.
     * @param {EstadosTransaccionDeleteArgs} args - Arguments to delete one EstadosTransaccion.
     * @example
     * // Delete one EstadosTransaccion
     * const EstadosTransaccion = await prisma.estadosTransaccion.delete({
     *   where: {
     *     // ... filter to delete one EstadosTransaccion
     *   }
     * })
     * 
     */
    delete<T extends EstadosTransaccionDeleteArgs>(args: SelectSubset<T, EstadosTransaccionDeleteArgs<ExtArgs>>): Prisma__EstadosTransaccionClient<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstadosTransaccion.
     * @param {EstadosTransaccionUpdateArgs} args - Arguments to update one EstadosTransaccion.
     * @example
     * // Update one EstadosTransaccion
     * const estadosTransaccion = await prisma.estadosTransaccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstadosTransaccionUpdateArgs>(args: SelectSubset<T, EstadosTransaccionUpdateArgs<ExtArgs>>): Prisma__EstadosTransaccionClient<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstadosTransaccions.
     * @param {EstadosTransaccionDeleteManyArgs} args - Arguments to filter EstadosTransaccions to delete.
     * @example
     * // Delete a few EstadosTransaccions
     * const { count } = await prisma.estadosTransaccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstadosTransaccionDeleteManyArgs>(args?: SelectSubset<T, EstadosTransaccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadosTransaccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosTransaccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstadosTransaccions
     * const estadosTransaccion = await prisma.estadosTransaccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstadosTransaccionUpdateManyArgs>(args: SelectSubset<T, EstadosTransaccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadosTransaccions and returns the data updated in the database.
     * @param {EstadosTransaccionUpdateManyAndReturnArgs} args - Arguments to update many EstadosTransaccions.
     * @example
     * // Update many EstadosTransaccions
     * const estadosTransaccion = await prisma.estadosTransaccion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EstadosTransaccions and only return the `id`
     * const estadosTransaccionWithIdOnly = await prisma.estadosTransaccion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstadosTransaccionUpdateManyAndReturnArgs>(args: SelectSubset<T, EstadosTransaccionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EstadosTransaccion.
     * @param {EstadosTransaccionUpsertArgs} args - Arguments to update or create a EstadosTransaccion.
     * @example
     * // Update or create a EstadosTransaccion
     * const estadosTransaccion = await prisma.estadosTransaccion.upsert({
     *   create: {
     *     // ... data to create a EstadosTransaccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstadosTransaccion we want to update
     *   }
     * })
     */
    upsert<T extends EstadosTransaccionUpsertArgs>(args: SelectSubset<T, EstadosTransaccionUpsertArgs<ExtArgs>>): Prisma__EstadosTransaccionClient<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstadosTransaccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosTransaccionCountArgs} args - Arguments to filter EstadosTransaccions to count.
     * @example
     * // Count the number of EstadosTransaccions
     * const count = await prisma.estadosTransaccion.count({
     *   where: {
     *     // ... the filter for the EstadosTransaccions we want to count
     *   }
     * })
    **/
    count<T extends EstadosTransaccionCountArgs>(
      args?: Subset<T, EstadosTransaccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadosTransaccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstadosTransaccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosTransaccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadosTransaccionAggregateArgs>(args: Subset<T, EstadosTransaccionAggregateArgs>): Prisma.PrismaPromise<GetEstadosTransaccionAggregateType<T>>

    /**
     * Group by EstadosTransaccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosTransaccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstadosTransaccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstadosTransaccionGroupByArgs['orderBy'] }
        : { orderBy?: EstadosTransaccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstadosTransaccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadosTransaccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstadosTransaccion model
   */
  readonly fields: EstadosTransaccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstadosTransaccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstadosTransaccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transacciones<T extends EstadosTransaccion$transaccionesArgs<ExtArgs> = {}>(args?: Subset<T, EstadosTransaccion$transaccionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstadosTransaccion model
   */
  interface EstadosTransaccionFieldRefs {
    readonly id: FieldRef<"EstadosTransaccion", 'Int'>
    readonly nombre: FieldRef<"EstadosTransaccion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EstadosTransaccion findUnique
   */
  export type EstadosTransaccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosTransaccionInclude<ExtArgs> | null
    /**
     * Filter, which EstadosTransaccion to fetch.
     */
    where: EstadosTransaccionWhereUniqueInput
  }

  /**
   * EstadosTransaccion findUniqueOrThrow
   */
  export type EstadosTransaccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosTransaccionInclude<ExtArgs> | null
    /**
     * Filter, which EstadosTransaccion to fetch.
     */
    where: EstadosTransaccionWhereUniqueInput
  }

  /**
   * EstadosTransaccion findFirst
   */
  export type EstadosTransaccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosTransaccionInclude<ExtArgs> | null
    /**
     * Filter, which EstadosTransaccion to fetch.
     */
    where?: EstadosTransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosTransaccions to fetch.
     */
    orderBy?: EstadosTransaccionOrderByWithRelationInput | EstadosTransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadosTransaccions.
     */
    cursor?: EstadosTransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosTransaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosTransaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadosTransaccions.
     */
    distinct?: EstadosTransaccionScalarFieldEnum | EstadosTransaccionScalarFieldEnum[]
  }

  /**
   * EstadosTransaccion findFirstOrThrow
   */
  export type EstadosTransaccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosTransaccionInclude<ExtArgs> | null
    /**
     * Filter, which EstadosTransaccion to fetch.
     */
    where?: EstadosTransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosTransaccions to fetch.
     */
    orderBy?: EstadosTransaccionOrderByWithRelationInput | EstadosTransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadosTransaccions.
     */
    cursor?: EstadosTransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosTransaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosTransaccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadosTransaccions.
     */
    distinct?: EstadosTransaccionScalarFieldEnum | EstadosTransaccionScalarFieldEnum[]
  }

  /**
   * EstadosTransaccion findMany
   */
  export type EstadosTransaccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosTransaccionInclude<ExtArgs> | null
    /**
     * Filter, which EstadosTransaccions to fetch.
     */
    where?: EstadosTransaccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosTransaccions to fetch.
     */
    orderBy?: EstadosTransaccionOrderByWithRelationInput | EstadosTransaccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstadosTransaccions.
     */
    cursor?: EstadosTransaccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosTransaccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosTransaccions.
     */
    skip?: number
    distinct?: EstadosTransaccionScalarFieldEnum | EstadosTransaccionScalarFieldEnum[]
  }

  /**
   * EstadosTransaccion create
   */
  export type EstadosTransaccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosTransaccionInclude<ExtArgs> | null
    /**
     * The data needed to create a EstadosTransaccion.
     */
    data: XOR<EstadosTransaccionCreateInput, EstadosTransaccionUncheckedCreateInput>
  }

  /**
   * EstadosTransaccion createMany
   */
  export type EstadosTransaccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstadosTransaccions.
     */
    data: EstadosTransaccionCreateManyInput | EstadosTransaccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadosTransaccion createManyAndReturn
   */
  export type EstadosTransaccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * The data used to create many EstadosTransaccions.
     */
    data: EstadosTransaccionCreateManyInput | EstadosTransaccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadosTransaccion update
   */
  export type EstadosTransaccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosTransaccionInclude<ExtArgs> | null
    /**
     * The data needed to update a EstadosTransaccion.
     */
    data: XOR<EstadosTransaccionUpdateInput, EstadosTransaccionUncheckedUpdateInput>
    /**
     * Choose, which EstadosTransaccion to update.
     */
    where: EstadosTransaccionWhereUniqueInput
  }

  /**
   * EstadosTransaccion updateMany
   */
  export type EstadosTransaccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstadosTransaccions.
     */
    data: XOR<EstadosTransaccionUpdateManyMutationInput, EstadosTransaccionUncheckedUpdateManyInput>
    /**
     * Filter which EstadosTransaccions to update
     */
    where?: EstadosTransaccionWhereInput
    /**
     * Limit how many EstadosTransaccions to update.
     */
    limit?: number
  }

  /**
   * EstadosTransaccion updateManyAndReturn
   */
  export type EstadosTransaccionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * The data used to update EstadosTransaccions.
     */
    data: XOR<EstadosTransaccionUpdateManyMutationInput, EstadosTransaccionUncheckedUpdateManyInput>
    /**
     * Filter which EstadosTransaccions to update
     */
    where?: EstadosTransaccionWhereInput
    /**
     * Limit how many EstadosTransaccions to update.
     */
    limit?: number
  }

  /**
   * EstadosTransaccion upsert
   */
  export type EstadosTransaccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosTransaccionInclude<ExtArgs> | null
    /**
     * The filter to search for the EstadosTransaccion to update in case it exists.
     */
    where: EstadosTransaccionWhereUniqueInput
    /**
     * In case the EstadosTransaccion found by the `where` argument doesn't exist, create a new EstadosTransaccion with this data.
     */
    create: XOR<EstadosTransaccionCreateInput, EstadosTransaccionUncheckedCreateInput>
    /**
     * In case the EstadosTransaccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstadosTransaccionUpdateInput, EstadosTransaccionUncheckedUpdateInput>
  }

  /**
   * EstadosTransaccion delete
   */
  export type EstadosTransaccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosTransaccionInclude<ExtArgs> | null
    /**
     * Filter which EstadosTransaccion to delete.
     */
    where: EstadosTransaccionWhereUniqueInput
  }

  /**
   * EstadosTransaccion deleteMany
   */
  export type EstadosTransaccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadosTransaccions to delete
     */
    where?: EstadosTransaccionWhereInput
    /**
     * Limit how many EstadosTransaccions to delete.
     */
    limit?: number
  }

  /**
   * EstadosTransaccion.transacciones
   */
  export type EstadosTransaccion$transaccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    where?: TransaccionesWhereInput
    orderBy?: TransaccionesOrderByWithRelationInput | TransaccionesOrderByWithRelationInput[]
    cursor?: TransaccionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaccionesScalarFieldEnum | TransaccionesScalarFieldEnum[]
  }

  /**
   * EstadosTransaccion without action
   */
  export type EstadosTransaccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosTransaccion
     */
    select?: EstadosTransaccionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosTransaccion
     */
    omit?: EstadosTransaccionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosTransaccionInclude<ExtArgs> | null
  }


  /**
   * Model Transacciones
   */

  export type AggregateTransacciones = {
    _count: TransaccionesCountAggregateOutputType | null
    _avg: TransaccionesAvgAggregateOutputType | null
    _sum: TransaccionesSumAggregateOutputType | null
    _min: TransaccionesMinAggregateOutputType | null
    _max: TransaccionesMaxAggregateOutputType | null
  }

  export type TransaccionesAvgAggregateOutputType = {
    id: number | null
    productoId: number | null
    compradorId: number | null
    vendedorId: number | null
    estadoId: number | null
  }

  export type TransaccionesSumAggregateOutputType = {
    id: number | null
    productoId: number | null
    compradorId: number | null
    vendedorId: number | null
    estadoId: number | null
  }

  export type TransaccionesMinAggregateOutputType = {
    id: number | null
    productoId: number | null
    compradorId: number | null
    vendedorId: number | null
    fecha: Date | null
    estadoId: number | null
  }

  export type TransaccionesMaxAggregateOutputType = {
    id: number | null
    productoId: number | null
    compradorId: number | null
    vendedorId: number | null
    fecha: Date | null
    estadoId: number | null
  }

  export type TransaccionesCountAggregateOutputType = {
    id: number
    productoId: number
    compradorId: number
    vendedorId: number
    fecha: number
    estadoId: number
    _all: number
  }


  export type TransaccionesAvgAggregateInputType = {
    id?: true
    productoId?: true
    compradorId?: true
    vendedorId?: true
    estadoId?: true
  }

  export type TransaccionesSumAggregateInputType = {
    id?: true
    productoId?: true
    compradorId?: true
    vendedorId?: true
    estadoId?: true
  }

  export type TransaccionesMinAggregateInputType = {
    id?: true
    productoId?: true
    compradorId?: true
    vendedorId?: true
    fecha?: true
    estadoId?: true
  }

  export type TransaccionesMaxAggregateInputType = {
    id?: true
    productoId?: true
    compradorId?: true
    vendedorId?: true
    fecha?: true
    estadoId?: true
  }

  export type TransaccionesCountAggregateInputType = {
    id?: true
    productoId?: true
    compradorId?: true
    vendedorId?: true
    fecha?: true
    estadoId?: true
    _all?: true
  }

  export type TransaccionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transacciones to aggregate.
     */
    where?: TransaccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transacciones to fetch.
     */
    orderBy?: TransaccionesOrderByWithRelationInput | TransaccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransaccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transacciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transacciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transacciones
    **/
    _count?: true | TransaccionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TransaccionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TransaccionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransaccionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransaccionesMaxAggregateInputType
  }

  export type GetTransaccionesAggregateType<T extends TransaccionesAggregateArgs> = {
        [P in keyof T & keyof AggregateTransacciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransacciones[P]>
      : GetScalarType<T[P], AggregateTransacciones[P]>
  }




  export type TransaccionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransaccionesWhereInput
    orderBy?: TransaccionesOrderByWithAggregationInput | TransaccionesOrderByWithAggregationInput[]
    by: TransaccionesScalarFieldEnum[] | TransaccionesScalarFieldEnum
    having?: TransaccionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransaccionesCountAggregateInputType | true
    _avg?: TransaccionesAvgAggregateInputType
    _sum?: TransaccionesSumAggregateInputType
    _min?: TransaccionesMinAggregateInputType
    _max?: TransaccionesMaxAggregateInputType
  }

  export type TransaccionesGroupByOutputType = {
    id: number
    productoId: number
    compradorId: number
    vendedorId: number
    fecha: Date
    estadoId: number
    _count: TransaccionesCountAggregateOutputType | null
    _avg: TransaccionesAvgAggregateOutputType | null
    _sum: TransaccionesSumAggregateOutputType | null
    _min: TransaccionesMinAggregateOutputType | null
    _max: TransaccionesMaxAggregateOutputType | null
  }

  type GetTransaccionesGroupByPayload<T extends TransaccionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransaccionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransaccionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransaccionesGroupByOutputType[P]>
            : GetScalarType<T[P], TransaccionesGroupByOutputType[P]>
        }
      >
    >


  export type TransaccionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    compradorId?: boolean
    vendedorId?: boolean
    fecha?: boolean
    estadoId?: boolean
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
    comprador?: boolean | CuentasDefaultArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosTransaccionDefaultArgs<ExtArgs>
    calificaciones?: boolean | Transacciones$calificacionesArgs<ExtArgs>
    _count?: boolean | TransaccionesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transacciones"]>

  export type TransaccionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    compradorId?: boolean
    vendedorId?: boolean
    fecha?: boolean
    estadoId?: boolean
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
    comprador?: boolean | CuentasDefaultArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosTransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transacciones"]>

  export type TransaccionesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productoId?: boolean
    compradorId?: boolean
    vendedorId?: boolean
    fecha?: boolean
    estadoId?: boolean
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
    comprador?: boolean | CuentasDefaultArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosTransaccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transacciones"]>

  export type TransaccionesSelectScalar = {
    id?: boolean
    productoId?: boolean
    compradorId?: boolean
    vendedorId?: boolean
    fecha?: boolean
    estadoId?: boolean
  }

  export type TransaccionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productoId" | "compradorId" | "vendedorId" | "fecha" | "estadoId", ExtArgs["result"]["transacciones"]>
  export type TransaccionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
    comprador?: boolean | CuentasDefaultArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosTransaccionDefaultArgs<ExtArgs>
    calificaciones?: boolean | Transacciones$calificacionesArgs<ExtArgs>
    _count?: boolean | TransaccionesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TransaccionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
    comprador?: boolean | CuentasDefaultArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosTransaccionDefaultArgs<ExtArgs>
  }
  export type TransaccionesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
    comprador?: boolean | CuentasDefaultArgs<ExtArgs>
    vendedor?: boolean | CuentasDefaultArgs<ExtArgs>
    estado?: boolean | EstadosTransaccionDefaultArgs<ExtArgs>
  }

  export type $TransaccionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transacciones"
    objects: {
      producto: Prisma.$ProductosPayload<ExtArgs>
      comprador: Prisma.$CuentasPayload<ExtArgs>
      vendedor: Prisma.$CuentasPayload<ExtArgs>
      estado: Prisma.$EstadosTransaccionPayload<ExtArgs>
      calificaciones: Prisma.$CalificacionesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productoId: number
      compradorId: number
      vendedorId: number
      fecha: Date
      estadoId: number
    }, ExtArgs["result"]["transacciones"]>
    composites: {}
  }

  type TransaccionesGetPayload<S extends boolean | null | undefined | TransaccionesDefaultArgs> = $Result.GetResult<Prisma.$TransaccionesPayload, S>

  type TransaccionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransaccionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransaccionesCountAggregateInputType | true
    }

  export interface TransaccionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transacciones'], meta: { name: 'Transacciones' } }
    /**
     * Find zero or one Transacciones that matches the filter.
     * @param {TransaccionesFindUniqueArgs} args - Arguments to find a Transacciones
     * @example
     * // Get one Transacciones
     * const transacciones = await prisma.transacciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransaccionesFindUniqueArgs>(args: SelectSubset<T, TransaccionesFindUniqueArgs<ExtArgs>>): Prisma__TransaccionesClient<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transacciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransaccionesFindUniqueOrThrowArgs} args - Arguments to find a Transacciones
     * @example
     * // Get one Transacciones
     * const transacciones = await prisma.transacciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransaccionesFindUniqueOrThrowArgs>(args: SelectSubset<T, TransaccionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransaccionesClient<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transacciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionesFindFirstArgs} args - Arguments to find a Transacciones
     * @example
     * // Get one Transacciones
     * const transacciones = await prisma.transacciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransaccionesFindFirstArgs>(args?: SelectSubset<T, TransaccionesFindFirstArgs<ExtArgs>>): Prisma__TransaccionesClient<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transacciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionesFindFirstOrThrowArgs} args - Arguments to find a Transacciones
     * @example
     * // Get one Transacciones
     * const transacciones = await prisma.transacciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransaccionesFindFirstOrThrowArgs>(args?: SelectSubset<T, TransaccionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransaccionesClient<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transacciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transacciones
     * const transacciones = await prisma.transacciones.findMany()
     * 
     * // Get first 10 Transacciones
     * const transacciones = await prisma.transacciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transaccionesWithIdOnly = await prisma.transacciones.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransaccionesFindManyArgs>(args?: SelectSubset<T, TransaccionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transacciones.
     * @param {TransaccionesCreateArgs} args - Arguments to create a Transacciones.
     * @example
     * // Create one Transacciones
     * const Transacciones = await prisma.transacciones.create({
     *   data: {
     *     // ... data to create a Transacciones
     *   }
     * })
     * 
     */
    create<T extends TransaccionesCreateArgs>(args: SelectSubset<T, TransaccionesCreateArgs<ExtArgs>>): Prisma__TransaccionesClient<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transacciones.
     * @param {TransaccionesCreateManyArgs} args - Arguments to create many Transacciones.
     * @example
     * // Create many Transacciones
     * const transacciones = await prisma.transacciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransaccionesCreateManyArgs>(args?: SelectSubset<T, TransaccionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transacciones and returns the data saved in the database.
     * @param {TransaccionesCreateManyAndReturnArgs} args - Arguments to create many Transacciones.
     * @example
     * // Create many Transacciones
     * const transacciones = await prisma.transacciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transacciones and only return the `id`
     * const transaccionesWithIdOnly = await prisma.transacciones.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransaccionesCreateManyAndReturnArgs>(args?: SelectSubset<T, TransaccionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transacciones.
     * @param {TransaccionesDeleteArgs} args - Arguments to delete one Transacciones.
     * @example
     * // Delete one Transacciones
     * const Transacciones = await prisma.transacciones.delete({
     *   where: {
     *     // ... filter to delete one Transacciones
     *   }
     * })
     * 
     */
    delete<T extends TransaccionesDeleteArgs>(args: SelectSubset<T, TransaccionesDeleteArgs<ExtArgs>>): Prisma__TransaccionesClient<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transacciones.
     * @param {TransaccionesUpdateArgs} args - Arguments to update one Transacciones.
     * @example
     * // Update one Transacciones
     * const transacciones = await prisma.transacciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransaccionesUpdateArgs>(args: SelectSubset<T, TransaccionesUpdateArgs<ExtArgs>>): Prisma__TransaccionesClient<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transacciones.
     * @param {TransaccionesDeleteManyArgs} args - Arguments to filter Transacciones to delete.
     * @example
     * // Delete a few Transacciones
     * const { count } = await prisma.transacciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransaccionesDeleteManyArgs>(args?: SelectSubset<T, TransaccionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transacciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transacciones
     * const transacciones = await prisma.transacciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransaccionesUpdateManyArgs>(args: SelectSubset<T, TransaccionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transacciones and returns the data updated in the database.
     * @param {TransaccionesUpdateManyAndReturnArgs} args - Arguments to update many Transacciones.
     * @example
     * // Update many Transacciones
     * const transacciones = await prisma.transacciones.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transacciones and only return the `id`
     * const transaccionesWithIdOnly = await prisma.transacciones.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransaccionesUpdateManyAndReturnArgs>(args: SelectSubset<T, TransaccionesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transacciones.
     * @param {TransaccionesUpsertArgs} args - Arguments to update or create a Transacciones.
     * @example
     * // Update or create a Transacciones
     * const transacciones = await prisma.transacciones.upsert({
     *   create: {
     *     // ... data to create a Transacciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transacciones we want to update
     *   }
     * })
     */
    upsert<T extends TransaccionesUpsertArgs>(args: SelectSubset<T, TransaccionesUpsertArgs<ExtArgs>>): Prisma__TransaccionesClient<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transacciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionesCountArgs} args - Arguments to filter Transacciones to count.
     * @example
     * // Count the number of Transacciones
     * const count = await prisma.transacciones.count({
     *   where: {
     *     // ... the filter for the Transacciones we want to count
     *   }
     * })
    **/
    count<T extends TransaccionesCountArgs>(
      args?: Subset<T, TransaccionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransaccionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transacciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransaccionesAggregateArgs>(args: Subset<T, TransaccionesAggregateArgs>): Prisma.PrismaPromise<GetTransaccionesAggregateType<T>>

    /**
     * Group by Transacciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaccionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransaccionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransaccionesGroupByArgs['orderBy'] }
        : { orderBy?: TransaccionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransaccionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransaccionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transacciones model
   */
  readonly fields: TransaccionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transacciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransaccionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    producto<T extends ProductosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductosDefaultArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    comprador<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    vendedor<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    estado<T extends EstadosTransaccionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstadosTransaccionDefaultArgs<ExtArgs>>): Prisma__EstadosTransaccionClient<$Result.GetResult<Prisma.$EstadosTransaccionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    calificaciones<T extends Transacciones$calificacionesArgs<ExtArgs> = {}>(args?: Subset<T, Transacciones$calificacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transacciones model
   */
  interface TransaccionesFieldRefs {
    readonly id: FieldRef<"Transacciones", 'Int'>
    readonly productoId: FieldRef<"Transacciones", 'Int'>
    readonly compradorId: FieldRef<"Transacciones", 'Int'>
    readonly vendedorId: FieldRef<"Transacciones", 'Int'>
    readonly fecha: FieldRef<"Transacciones", 'DateTime'>
    readonly estadoId: FieldRef<"Transacciones", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Transacciones findUnique
   */
  export type TransaccionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    /**
     * Filter, which Transacciones to fetch.
     */
    where: TransaccionesWhereUniqueInput
  }

  /**
   * Transacciones findUniqueOrThrow
   */
  export type TransaccionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    /**
     * Filter, which Transacciones to fetch.
     */
    where: TransaccionesWhereUniqueInput
  }

  /**
   * Transacciones findFirst
   */
  export type TransaccionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    /**
     * Filter, which Transacciones to fetch.
     */
    where?: TransaccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transacciones to fetch.
     */
    orderBy?: TransaccionesOrderByWithRelationInput | TransaccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transacciones.
     */
    cursor?: TransaccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transacciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transacciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transacciones.
     */
    distinct?: TransaccionesScalarFieldEnum | TransaccionesScalarFieldEnum[]
  }

  /**
   * Transacciones findFirstOrThrow
   */
  export type TransaccionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    /**
     * Filter, which Transacciones to fetch.
     */
    where?: TransaccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transacciones to fetch.
     */
    orderBy?: TransaccionesOrderByWithRelationInput | TransaccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transacciones.
     */
    cursor?: TransaccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transacciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transacciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transacciones.
     */
    distinct?: TransaccionesScalarFieldEnum | TransaccionesScalarFieldEnum[]
  }

  /**
   * Transacciones findMany
   */
  export type TransaccionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    /**
     * Filter, which Transacciones to fetch.
     */
    where?: TransaccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transacciones to fetch.
     */
    orderBy?: TransaccionesOrderByWithRelationInput | TransaccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transacciones.
     */
    cursor?: TransaccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transacciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transacciones.
     */
    skip?: number
    distinct?: TransaccionesScalarFieldEnum | TransaccionesScalarFieldEnum[]
  }

  /**
   * Transacciones create
   */
  export type TransaccionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    /**
     * The data needed to create a Transacciones.
     */
    data: XOR<TransaccionesCreateInput, TransaccionesUncheckedCreateInput>
  }

  /**
   * Transacciones createMany
   */
  export type TransaccionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transacciones.
     */
    data: TransaccionesCreateManyInput | TransaccionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transacciones createManyAndReturn
   */
  export type TransaccionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * The data used to create many Transacciones.
     */
    data: TransaccionesCreateManyInput | TransaccionesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transacciones update
   */
  export type TransaccionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    /**
     * The data needed to update a Transacciones.
     */
    data: XOR<TransaccionesUpdateInput, TransaccionesUncheckedUpdateInput>
    /**
     * Choose, which Transacciones to update.
     */
    where: TransaccionesWhereUniqueInput
  }

  /**
   * Transacciones updateMany
   */
  export type TransaccionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transacciones.
     */
    data: XOR<TransaccionesUpdateManyMutationInput, TransaccionesUncheckedUpdateManyInput>
    /**
     * Filter which Transacciones to update
     */
    where?: TransaccionesWhereInput
    /**
     * Limit how many Transacciones to update.
     */
    limit?: number
  }

  /**
   * Transacciones updateManyAndReturn
   */
  export type TransaccionesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * The data used to update Transacciones.
     */
    data: XOR<TransaccionesUpdateManyMutationInput, TransaccionesUncheckedUpdateManyInput>
    /**
     * Filter which Transacciones to update
     */
    where?: TransaccionesWhereInput
    /**
     * Limit how many Transacciones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transacciones upsert
   */
  export type TransaccionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    /**
     * The filter to search for the Transacciones to update in case it exists.
     */
    where: TransaccionesWhereUniqueInput
    /**
     * In case the Transacciones found by the `where` argument doesn't exist, create a new Transacciones with this data.
     */
    create: XOR<TransaccionesCreateInput, TransaccionesUncheckedCreateInput>
    /**
     * In case the Transacciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransaccionesUpdateInput, TransaccionesUncheckedUpdateInput>
  }

  /**
   * Transacciones delete
   */
  export type TransaccionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
    /**
     * Filter which Transacciones to delete.
     */
    where: TransaccionesWhereUniqueInput
  }

  /**
   * Transacciones deleteMany
   */
  export type TransaccionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transacciones to delete
     */
    where?: TransaccionesWhereInput
    /**
     * Limit how many Transacciones to delete.
     */
    limit?: number
  }

  /**
   * Transacciones.calificaciones
   */
  export type Transacciones$calificacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    where?: CalificacionesWhereInput
    orderBy?: CalificacionesOrderByWithRelationInput | CalificacionesOrderByWithRelationInput[]
    cursor?: CalificacionesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CalificacionesScalarFieldEnum | CalificacionesScalarFieldEnum[]
  }

  /**
   * Transacciones without action
   */
  export type TransaccionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transacciones
     */
    select?: TransaccionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transacciones
     */
    omit?: TransaccionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransaccionesInclude<ExtArgs> | null
  }


  /**
   * Model Calificaciones
   */

  export type AggregateCalificaciones = {
    _count: CalificacionesCountAggregateOutputType | null
    _avg: CalificacionesAvgAggregateOutputType | null
    _sum: CalificacionesSumAggregateOutputType | null
    _min: CalificacionesMinAggregateOutputType | null
    _max: CalificacionesMaxAggregateOutputType | null
  }

  export type CalificacionesAvgAggregateOutputType = {
    id: number | null
    transaccionId: number | null
    calificadorId: number | null
    calificadoId: number | null
    puntuacion: Decimal | null
  }

  export type CalificacionesSumAggregateOutputType = {
    id: number | null
    transaccionId: number | null
    calificadorId: number | null
    calificadoId: number | null
    puntuacion: Decimal | null
  }

  export type CalificacionesMinAggregateOutputType = {
    id: number | null
    transaccionId: number | null
    calificadorId: number | null
    calificadoId: number | null
    puntuacion: Decimal | null
    comentario: string | null
    fecha: Date | null
  }

  export type CalificacionesMaxAggregateOutputType = {
    id: number | null
    transaccionId: number | null
    calificadorId: number | null
    calificadoId: number | null
    puntuacion: Decimal | null
    comentario: string | null
    fecha: Date | null
  }

  export type CalificacionesCountAggregateOutputType = {
    id: number
    transaccionId: number
    calificadorId: number
    calificadoId: number
    puntuacion: number
    comentario: number
    fecha: number
    _all: number
  }


  export type CalificacionesAvgAggregateInputType = {
    id?: true
    transaccionId?: true
    calificadorId?: true
    calificadoId?: true
    puntuacion?: true
  }

  export type CalificacionesSumAggregateInputType = {
    id?: true
    transaccionId?: true
    calificadorId?: true
    calificadoId?: true
    puntuacion?: true
  }

  export type CalificacionesMinAggregateInputType = {
    id?: true
    transaccionId?: true
    calificadorId?: true
    calificadoId?: true
    puntuacion?: true
    comentario?: true
    fecha?: true
  }

  export type CalificacionesMaxAggregateInputType = {
    id?: true
    transaccionId?: true
    calificadorId?: true
    calificadoId?: true
    puntuacion?: true
    comentario?: true
    fecha?: true
  }

  export type CalificacionesCountAggregateInputType = {
    id?: true
    transaccionId?: true
    calificadorId?: true
    calificadoId?: true
    puntuacion?: true
    comentario?: true
    fecha?: true
    _all?: true
  }

  export type CalificacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Calificaciones to aggregate.
     */
    where?: CalificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificaciones to fetch.
     */
    orderBy?: CalificacionesOrderByWithRelationInput | CalificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CalificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Calificaciones
    **/
    _count?: true | CalificacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CalificacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CalificacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CalificacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CalificacionesMaxAggregateInputType
  }

  export type GetCalificacionesAggregateType<T extends CalificacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateCalificaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCalificaciones[P]>
      : GetScalarType<T[P], AggregateCalificaciones[P]>
  }




  export type CalificacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CalificacionesWhereInput
    orderBy?: CalificacionesOrderByWithAggregationInput | CalificacionesOrderByWithAggregationInput[]
    by: CalificacionesScalarFieldEnum[] | CalificacionesScalarFieldEnum
    having?: CalificacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CalificacionesCountAggregateInputType | true
    _avg?: CalificacionesAvgAggregateInputType
    _sum?: CalificacionesSumAggregateInputType
    _min?: CalificacionesMinAggregateInputType
    _max?: CalificacionesMaxAggregateInputType
  }

  export type CalificacionesGroupByOutputType = {
    id: number
    transaccionId: number
    calificadorId: number
    calificadoId: number
    puntuacion: Decimal | null
    comentario: string | null
    fecha: Date
    _count: CalificacionesCountAggregateOutputType | null
    _avg: CalificacionesAvgAggregateOutputType | null
    _sum: CalificacionesSumAggregateOutputType | null
    _min: CalificacionesMinAggregateOutputType | null
    _max: CalificacionesMaxAggregateOutputType | null
  }

  type GetCalificacionesGroupByPayload<T extends CalificacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CalificacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CalificacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CalificacionesGroupByOutputType[P]>
            : GetScalarType<T[P], CalificacionesGroupByOutputType[P]>
        }
      >
    >


  export type CalificacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transaccionId?: boolean
    calificadorId?: boolean
    calificadoId?: boolean
    puntuacion?: boolean
    comentario?: boolean
    fecha?: boolean
    transaccion?: boolean | TransaccionesDefaultArgs<ExtArgs>
    calificador?: boolean | CuentasDefaultArgs<ExtArgs>
    calificado?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificaciones"]>

  export type CalificacionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transaccionId?: boolean
    calificadorId?: boolean
    calificadoId?: boolean
    puntuacion?: boolean
    comentario?: boolean
    fecha?: boolean
    transaccion?: boolean | TransaccionesDefaultArgs<ExtArgs>
    calificador?: boolean | CuentasDefaultArgs<ExtArgs>
    calificado?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificaciones"]>

  export type CalificacionesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transaccionId?: boolean
    calificadorId?: boolean
    calificadoId?: boolean
    puntuacion?: boolean
    comentario?: boolean
    fecha?: boolean
    transaccion?: boolean | TransaccionesDefaultArgs<ExtArgs>
    calificador?: boolean | CuentasDefaultArgs<ExtArgs>
    calificado?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["calificaciones"]>

  export type CalificacionesSelectScalar = {
    id?: boolean
    transaccionId?: boolean
    calificadorId?: boolean
    calificadoId?: boolean
    puntuacion?: boolean
    comentario?: boolean
    fecha?: boolean
  }

  export type CalificacionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "transaccionId" | "calificadorId" | "calificadoId" | "puntuacion" | "comentario" | "fecha", ExtArgs["result"]["calificaciones"]>
  export type CalificacionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionesDefaultArgs<ExtArgs>
    calificador?: boolean | CuentasDefaultArgs<ExtArgs>
    calificado?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type CalificacionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionesDefaultArgs<ExtArgs>
    calificador?: boolean | CuentasDefaultArgs<ExtArgs>
    calificado?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type CalificacionesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaccion?: boolean | TransaccionesDefaultArgs<ExtArgs>
    calificador?: boolean | CuentasDefaultArgs<ExtArgs>
    calificado?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $CalificacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Calificaciones"
    objects: {
      transaccion: Prisma.$TransaccionesPayload<ExtArgs>
      calificador: Prisma.$CuentasPayload<ExtArgs>
      calificado: Prisma.$CuentasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      transaccionId: number
      calificadorId: number
      calificadoId: number
      puntuacion: Prisma.Decimal | null
      comentario: string | null
      fecha: Date
    }, ExtArgs["result"]["calificaciones"]>
    composites: {}
  }

  type CalificacionesGetPayload<S extends boolean | null | undefined | CalificacionesDefaultArgs> = $Result.GetResult<Prisma.$CalificacionesPayload, S>

  type CalificacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CalificacionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CalificacionesCountAggregateInputType | true
    }

  export interface CalificacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Calificaciones'], meta: { name: 'Calificaciones' } }
    /**
     * Find zero or one Calificaciones that matches the filter.
     * @param {CalificacionesFindUniqueArgs} args - Arguments to find a Calificaciones
     * @example
     * // Get one Calificaciones
     * const calificaciones = await prisma.calificaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CalificacionesFindUniqueArgs>(args: SelectSubset<T, CalificacionesFindUniqueArgs<ExtArgs>>): Prisma__CalificacionesClient<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Calificaciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CalificacionesFindUniqueOrThrowArgs} args - Arguments to find a Calificaciones
     * @example
     * // Get one Calificaciones
     * const calificaciones = await prisma.calificaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CalificacionesFindUniqueOrThrowArgs>(args: SelectSubset<T, CalificacionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CalificacionesClient<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Calificaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionesFindFirstArgs} args - Arguments to find a Calificaciones
     * @example
     * // Get one Calificaciones
     * const calificaciones = await prisma.calificaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CalificacionesFindFirstArgs>(args?: SelectSubset<T, CalificacionesFindFirstArgs<ExtArgs>>): Prisma__CalificacionesClient<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Calificaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionesFindFirstOrThrowArgs} args - Arguments to find a Calificaciones
     * @example
     * // Get one Calificaciones
     * const calificaciones = await prisma.calificaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CalificacionesFindFirstOrThrowArgs>(args?: SelectSubset<T, CalificacionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__CalificacionesClient<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Calificaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Calificaciones
     * const calificaciones = await prisma.calificaciones.findMany()
     * 
     * // Get first 10 Calificaciones
     * const calificaciones = await prisma.calificaciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const calificacionesWithIdOnly = await prisma.calificaciones.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CalificacionesFindManyArgs>(args?: SelectSubset<T, CalificacionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Calificaciones.
     * @param {CalificacionesCreateArgs} args - Arguments to create a Calificaciones.
     * @example
     * // Create one Calificaciones
     * const Calificaciones = await prisma.calificaciones.create({
     *   data: {
     *     // ... data to create a Calificaciones
     *   }
     * })
     * 
     */
    create<T extends CalificacionesCreateArgs>(args: SelectSubset<T, CalificacionesCreateArgs<ExtArgs>>): Prisma__CalificacionesClient<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Calificaciones.
     * @param {CalificacionesCreateManyArgs} args - Arguments to create many Calificaciones.
     * @example
     * // Create many Calificaciones
     * const calificaciones = await prisma.calificaciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CalificacionesCreateManyArgs>(args?: SelectSubset<T, CalificacionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Calificaciones and returns the data saved in the database.
     * @param {CalificacionesCreateManyAndReturnArgs} args - Arguments to create many Calificaciones.
     * @example
     * // Create many Calificaciones
     * const calificaciones = await prisma.calificaciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Calificaciones and only return the `id`
     * const calificacionesWithIdOnly = await prisma.calificaciones.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CalificacionesCreateManyAndReturnArgs>(args?: SelectSubset<T, CalificacionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Calificaciones.
     * @param {CalificacionesDeleteArgs} args - Arguments to delete one Calificaciones.
     * @example
     * // Delete one Calificaciones
     * const Calificaciones = await prisma.calificaciones.delete({
     *   where: {
     *     // ... filter to delete one Calificaciones
     *   }
     * })
     * 
     */
    delete<T extends CalificacionesDeleteArgs>(args: SelectSubset<T, CalificacionesDeleteArgs<ExtArgs>>): Prisma__CalificacionesClient<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Calificaciones.
     * @param {CalificacionesUpdateArgs} args - Arguments to update one Calificaciones.
     * @example
     * // Update one Calificaciones
     * const calificaciones = await prisma.calificaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CalificacionesUpdateArgs>(args: SelectSubset<T, CalificacionesUpdateArgs<ExtArgs>>): Prisma__CalificacionesClient<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Calificaciones.
     * @param {CalificacionesDeleteManyArgs} args - Arguments to filter Calificaciones to delete.
     * @example
     * // Delete a few Calificaciones
     * const { count } = await prisma.calificaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CalificacionesDeleteManyArgs>(args?: SelectSubset<T, CalificacionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Calificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Calificaciones
     * const calificaciones = await prisma.calificaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CalificacionesUpdateManyArgs>(args: SelectSubset<T, CalificacionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Calificaciones and returns the data updated in the database.
     * @param {CalificacionesUpdateManyAndReturnArgs} args - Arguments to update many Calificaciones.
     * @example
     * // Update many Calificaciones
     * const calificaciones = await prisma.calificaciones.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Calificaciones and only return the `id`
     * const calificacionesWithIdOnly = await prisma.calificaciones.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CalificacionesUpdateManyAndReturnArgs>(args: SelectSubset<T, CalificacionesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Calificaciones.
     * @param {CalificacionesUpsertArgs} args - Arguments to update or create a Calificaciones.
     * @example
     * // Update or create a Calificaciones
     * const calificaciones = await prisma.calificaciones.upsert({
     *   create: {
     *     // ... data to create a Calificaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Calificaciones we want to update
     *   }
     * })
     */
    upsert<T extends CalificacionesUpsertArgs>(args: SelectSubset<T, CalificacionesUpsertArgs<ExtArgs>>): Prisma__CalificacionesClient<$Result.GetResult<Prisma.$CalificacionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Calificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionesCountArgs} args - Arguments to filter Calificaciones to count.
     * @example
     * // Count the number of Calificaciones
     * const count = await prisma.calificaciones.count({
     *   where: {
     *     // ... the filter for the Calificaciones we want to count
     *   }
     * })
    **/
    count<T extends CalificacionesCountArgs>(
      args?: Subset<T, CalificacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CalificacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Calificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CalificacionesAggregateArgs>(args: Subset<T, CalificacionesAggregateArgs>): Prisma.PrismaPromise<GetCalificacionesAggregateType<T>>

    /**
     * Group by Calificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CalificacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CalificacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CalificacionesGroupByArgs['orderBy'] }
        : { orderBy?: CalificacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CalificacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCalificacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Calificaciones model
   */
  readonly fields: CalificacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Calificaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CalificacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transaccion<T extends TransaccionesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TransaccionesDefaultArgs<ExtArgs>>): Prisma__TransaccionesClient<$Result.GetResult<Prisma.$TransaccionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    calificador<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    calificado<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Calificaciones model
   */
  interface CalificacionesFieldRefs {
    readonly id: FieldRef<"Calificaciones", 'Int'>
    readonly transaccionId: FieldRef<"Calificaciones", 'Int'>
    readonly calificadorId: FieldRef<"Calificaciones", 'Int'>
    readonly calificadoId: FieldRef<"Calificaciones", 'Int'>
    readonly puntuacion: FieldRef<"Calificaciones", 'Decimal'>
    readonly comentario: FieldRef<"Calificaciones", 'String'>
    readonly fecha: FieldRef<"Calificaciones", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Calificaciones findUnique
   */
  export type CalificacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    /**
     * Filter, which Calificaciones to fetch.
     */
    where: CalificacionesWhereUniqueInput
  }

  /**
   * Calificaciones findUniqueOrThrow
   */
  export type CalificacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    /**
     * Filter, which Calificaciones to fetch.
     */
    where: CalificacionesWhereUniqueInput
  }

  /**
   * Calificaciones findFirst
   */
  export type CalificacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    /**
     * Filter, which Calificaciones to fetch.
     */
    where?: CalificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificaciones to fetch.
     */
    orderBy?: CalificacionesOrderByWithRelationInput | CalificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Calificaciones.
     */
    cursor?: CalificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Calificaciones.
     */
    distinct?: CalificacionesScalarFieldEnum | CalificacionesScalarFieldEnum[]
  }

  /**
   * Calificaciones findFirstOrThrow
   */
  export type CalificacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    /**
     * Filter, which Calificaciones to fetch.
     */
    where?: CalificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificaciones to fetch.
     */
    orderBy?: CalificacionesOrderByWithRelationInput | CalificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Calificaciones.
     */
    cursor?: CalificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Calificaciones.
     */
    distinct?: CalificacionesScalarFieldEnum | CalificacionesScalarFieldEnum[]
  }

  /**
   * Calificaciones findMany
   */
  export type CalificacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    /**
     * Filter, which Calificaciones to fetch.
     */
    where?: CalificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Calificaciones to fetch.
     */
    orderBy?: CalificacionesOrderByWithRelationInput | CalificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Calificaciones.
     */
    cursor?: CalificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Calificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Calificaciones.
     */
    skip?: number
    distinct?: CalificacionesScalarFieldEnum | CalificacionesScalarFieldEnum[]
  }

  /**
   * Calificaciones create
   */
  export type CalificacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    /**
     * The data needed to create a Calificaciones.
     */
    data: XOR<CalificacionesCreateInput, CalificacionesUncheckedCreateInput>
  }

  /**
   * Calificaciones createMany
   */
  export type CalificacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Calificaciones.
     */
    data: CalificacionesCreateManyInput | CalificacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Calificaciones createManyAndReturn
   */
  export type CalificacionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * The data used to create many Calificaciones.
     */
    data: CalificacionesCreateManyInput | CalificacionesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Calificaciones update
   */
  export type CalificacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    /**
     * The data needed to update a Calificaciones.
     */
    data: XOR<CalificacionesUpdateInput, CalificacionesUncheckedUpdateInput>
    /**
     * Choose, which Calificaciones to update.
     */
    where: CalificacionesWhereUniqueInput
  }

  /**
   * Calificaciones updateMany
   */
  export type CalificacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Calificaciones.
     */
    data: XOR<CalificacionesUpdateManyMutationInput, CalificacionesUncheckedUpdateManyInput>
    /**
     * Filter which Calificaciones to update
     */
    where?: CalificacionesWhereInput
    /**
     * Limit how many Calificaciones to update.
     */
    limit?: number
  }

  /**
   * Calificaciones updateManyAndReturn
   */
  export type CalificacionesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * The data used to update Calificaciones.
     */
    data: XOR<CalificacionesUpdateManyMutationInput, CalificacionesUncheckedUpdateManyInput>
    /**
     * Filter which Calificaciones to update
     */
    where?: CalificacionesWhereInput
    /**
     * Limit how many Calificaciones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Calificaciones upsert
   */
  export type CalificacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    /**
     * The filter to search for the Calificaciones to update in case it exists.
     */
    where: CalificacionesWhereUniqueInput
    /**
     * In case the Calificaciones found by the `where` argument doesn't exist, create a new Calificaciones with this data.
     */
    create: XOR<CalificacionesCreateInput, CalificacionesUncheckedCreateInput>
    /**
     * In case the Calificaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CalificacionesUpdateInput, CalificacionesUncheckedUpdateInput>
  }

  /**
   * Calificaciones delete
   */
  export type CalificacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
    /**
     * Filter which Calificaciones to delete.
     */
    where: CalificacionesWhereUniqueInput
  }

  /**
   * Calificaciones deleteMany
   */
  export type CalificacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Calificaciones to delete
     */
    where?: CalificacionesWhereInput
    /**
     * Limit how many Calificaciones to delete.
     */
    limit?: number
  }

  /**
   * Calificaciones without action
   */
  export type CalificacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Calificaciones
     */
    select?: CalificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Calificaciones
     */
    omit?: CalificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CalificacionesInclude<ExtArgs> | null
  }


  /**
   * Model Carrito
   */

  export type AggregateCarrito = {
    _count: CarritoCountAggregateOutputType | null
    _avg: CarritoAvgAggregateOutputType | null
    _sum: CarritoSumAggregateOutputType | null
    _min: CarritoMinAggregateOutputType | null
    _max: CarritoMaxAggregateOutputType | null
  }

  export type CarritoAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    productoId: number | null
    cantidad: number | null
  }

  export type CarritoSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    productoId: number | null
    cantidad: number | null
  }

  export type CarritoMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    productoId: number | null
    cantidad: number | null
  }

  export type CarritoMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    productoId: number | null
    cantidad: number | null
  }

  export type CarritoCountAggregateOutputType = {
    id: number
    usuarioId: number
    productoId: number
    cantidad: number
    _all: number
  }


  export type CarritoAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    productoId?: true
    cantidad?: true
  }

  export type CarritoSumAggregateInputType = {
    id?: true
    usuarioId?: true
    productoId?: true
    cantidad?: true
  }

  export type CarritoMinAggregateInputType = {
    id?: true
    usuarioId?: true
    productoId?: true
    cantidad?: true
  }

  export type CarritoMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    productoId?: true
    cantidad?: true
  }

  export type CarritoCountAggregateInputType = {
    id?: true
    usuarioId?: true
    productoId?: true
    cantidad?: true
    _all?: true
  }

  export type CarritoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Carrito to aggregate.
     */
    where?: CarritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carritos to fetch.
     */
    orderBy?: CarritoOrderByWithRelationInput | CarritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CarritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Carritos
    **/
    _count?: true | CarritoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CarritoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CarritoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CarritoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CarritoMaxAggregateInputType
  }

  export type GetCarritoAggregateType<T extends CarritoAggregateArgs> = {
        [P in keyof T & keyof AggregateCarrito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCarrito[P]>
      : GetScalarType<T[P], AggregateCarrito[P]>
  }




  export type CarritoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CarritoWhereInput
    orderBy?: CarritoOrderByWithAggregationInput | CarritoOrderByWithAggregationInput[]
    by: CarritoScalarFieldEnum[] | CarritoScalarFieldEnum
    having?: CarritoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CarritoCountAggregateInputType | true
    _avg?: CarritoAvgAggregateInputType
    _sum?: CarritoSumAggregateInputType
    _min?: CarritoMinAggregateInputType
    _max?: CarritoMaxAggregateInputType
  }

  export type CarritoGroupByOutputType = {
    id: number
    usuarioId: number
    productoId: number
    cantidad: number
    _count: CarritoCountAggregateOutputType | null
    _avg: CarritoAvgAggregateOutputType | null
    _sum: CarritoSumAggregateOutputType | null
    _min: CarritoMinAggregateOutputType | null
    _max: CarritoMaxAggregateOutputType | null
  }

  type GetCarritoGroupByPayload<T extends CarritoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CarritoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CarritoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CarritoGroupByOutputType[P]>
            : GetScalarType<T[P], CarritoGroupByOutputType[P]>
        }
      >
    >


  export type CarritoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    productoId?: boolean
    cantidad?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carrito"]>

  export type CarritoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    productoId?: boolean
    cantidad?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carrito"]>

  export type CarritoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    productoId?: boolean
    cantidad?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carrito"]>

  export type CarritoSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    productoId?: boolean
    cantidad?: boolean
  }

  export type CarritoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuarioId" | "productoId" | "cantidad", ExtArgs["result"]["carrito"]>
  export type CarritoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }
  export type CarritoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }
  export type CarritoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    producto?: boolean | ProductosDefaultArgs<ExtArgs>
  }

  export type $CarritoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Carrito"
    objects: {
      usuario: Prisma.$CuentasPayload<ExtArgs>
      producto: Prisma.$ProductosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      productoId: number
      cantidad: number
    }, ExtArgs["result"]["carrito"]>
    composites: {}
  }

  type CarritoGetPayload<S extends boolean | null | undefined | CarritoDefaultArgs> = $Result.GetResult<Prisma.$CarritoPayload, S>

  type CarritoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CarritoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CarritoCountAggregateInputType | true
    }

  export interface CarritoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Carrito'], meta: { name: 'Carrito' } }
    /**
     * Find zero or one Carrito that matches the filter.
     * @param {CarritoFindUniqueArgs} args - Arguments to find a Carrito
     * @example
     * // Get one Carrito
     * const carrito = await prisma.carrito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CarritoFindUniqueArgs>(args: SelectSubset<T, CarritoFindUniqueArgs<ExtArgs>>): Prisma__CarritoClient<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Carrito that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CarritoFindUniqueOrThrowArgs} args - Arguments to find a Carrito
     * @example
     * // Get one Carrito
     * const carrito = await prisma.carrito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CarritoFindUniqueOrThrowArgs>(args: SelectSubset<T, CarritoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CarritoClient<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Carrito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoFindFirstArgs} args - Arguments to find a Carrito
     * @example
     * // Get one Carrito
     * const carrito = await prisma.carrito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CarritoFindFirstArgs>(args?: SelectSubset<T, CarritoFindFirstArgs<ExtArgs>>): Prisma__CarritoClient<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Carrito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoFindFirstOrThrowArgs} args - Arguments to find a Carrito
     * @example
     * // Get one Carrito
     * const carrito = await prisma.carrito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CarritoFindFirstOrThrowArgs>(args?: SelectSubset<T, CarritoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CarritoClient<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Carritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Carritos
     * const carritos = await prisma.carrito.findMany()
     * 
     * // Get first 10 Carritos
     * const carritos = await prisma.carrito.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const carritoWithIdOnly = await prisma.carrito.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CarritoFindManyArgs>(args?: SelectSubset<T, CarritoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Carrito.
     * @param {CarritoCreateArgs} args - Arguments to create a Carrito.
     * @example
     * // Create one Carrito
     * const Carrito = await prisma.carrito.create({
     *   data: {
     *     // ... data to create a Carrito
     *   }
     * })
     * 
     */
    create<T extends CarritoCreateArgs>(args: SelectSubset<T, CarritoCreateArgs<ExtArgs>>): Prisma__CarritoClient<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Carritos.
     * @param {CarritoCreateManyArgs} args - Arguments to create many Carritos.
     * @example
     * // Create many Carritos
     * const carrito = await prisma.carrito.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CarritoCreateManyArgs>(args?: SelectSubset<T, CarritoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Carritos and returns the data saved in the database.
     * @param {CarritoCreateManyAndReturnArgs} args - Arguments to create many Carritos.
     * @example
     * // Create many Carritos
     * const carrito = await prisma.carrito.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Carritos and only return the `id`
     * const carritoWithIdOnly = await prisma.carrito.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CarritoCreateManyAndReturnArgs>(args?: SelectSubset<T, CarritoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Carrito.
     * @param {CarritoDeleteArgs} args - Arguments to delete one Carrito.
     * @example
     * // Delete one Carrito
     * const Carrito = await prisma.carrito.delete({
     *   where: {
     *     // ... filter to delete one Carrito
     *   }
     * })
     * 
     */
    delete<T extends CarritoDeleteArgs>(args: SelectSubset<T, CarritoDeleteArgs<ExtArgs>>): Prisma__CarritoClient<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Carrito.
     * @param {CarritoUpdateArgs} args - Arguments to update one Carrito.
     * @example
     * // Update one Carrito
     * const carrito = await prisma.carrito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CarritoUpdateArgs>(args: SelectSubset<T, CarritoUpdateArgs<ExtArgs>>): Prisma__CarritoClient<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Carritos.
     * @param {CarritoDeleteManyArgs} args - Arguments to filter Carritos to delete.
     * @example
     * // Delete a few Carritos
     * const { count } = await prisma.carrito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CarritoDeleteManyArgs>(args?: SelectSubset<T, CarritoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Carritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Carritos
     * const carrito = await prisma.carrito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CarritoUpdateManyArgs>(args: SelectSubset<T, CarritoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Carritos and returns the data updated in the database.
     * @param {CarritoUpdateManyAndReturnArgs} args - Arguments to update many Carritos.
     * @example
     * // Update many Carritos
     * const carrito = await prisma.carrito.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Carritos and only return the `id`
     * const carritoWithIdOnly = await prisma.carrito.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CarritoUpdateManyAndReturnArgs>(args: SelectSubset<T, CarritoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Carrito.
     * @param {CarritoUpsertArgs} args - Arguments to update or create a Carrito.
     * @example
     * // Update or create a Carrito
     * const carrito = await prisma.carrito.upsert({
     *   create: {
     *     // ... data to create a Carrito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Carrito we want to update
     *   }
     * })
     */
    upsert<T extends CarritoUpsertArgs>(args: SelectSubset<T, CarritoUpsertArgs<ExtArgs>>): Prisma__CarritoClient<$Result.GetResult<Prisma.$CarritoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Carritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoCountArgs} args - Arguments to filter Carritos to count.
     * @example
     * // Count the number of Carritos
     * const count = await prisma.carrito.count({
     *   where: {
     *     // ... the filter for the Carritos we want to count
     *   }
     * })
    **/
    count<T extends CarritoCountArgs>(
      args?: Subset<T, CarritoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CarritoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Carrito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CarritoAggregateArgs>(args: Subset<T, CarritoAggregateArgs>): Prisma.PrismaPromise<GetCarritoAggregateType<T>>

    /**
     * Group by Carrito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CarritoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CarritoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CarritoGroupByArgs['orderBy'] }
        : { orderBy?: CarritoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CarritoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCarritoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Carrito model
   */
  readonly fields: CarritoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Carrito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CarritoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    producto<T extends ProductosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductosDefaultArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Carrito model
   */
  interface CarritoFieldRefs {
    readonly id: FieldRef<"Carrito", 'Int'>
    readonly usuarioId: FieldRef<"Carrito", 'Int'>
    readonly productoId: FieldRef<"Carrito", 'Int'>
    readonly cantidad: FieldRef<"Carrito", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Carrito findUnique
   */
  export type CarritoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    /**
     * Filter, which Carrito to fetch.
     */
    where: CarritoWhereUniqueInput
  }

  /**
   * Carrito findUniqueOrThrow
   */
  export type CarritoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    /**
     * Filter, which Carrito to fetch.
     */
    where: CarritoWhereUniqueInput
  }

  /**
   * Carrito findFirst
   */
  export type CarritoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    /**
     * Filter, which Carrito to fetch.
     */
    where?: CarritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carritos to fetch.
     */
    orderBy?: CarritoOrderByWithRelationInput | CarritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Carritos.
     */
    cursor?: CarritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Carritos.
     */
    distinct?: CarritoScalarFieldEnum | CarritoScalarFieldEnum[]
  }

  /**
   * Carrito findFirstOrThrow
   */
  export type CarritoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    /**
     * Filter, which Carrito to fetch.
     */
    where?: CarritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carritos to fetch.
     */
    orderBy?: CarritoOrderByWithRelationInput | CarritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Carritos.
     */
    cursor?: CarritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Carritos.
     */
    distinct?: CarritoScalarFieldEnum | CarritoScalarFieldEnum[]
  }

  /**
   * Carrito findMany
   */
  export type CarritoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    /**
     * Filter, which Carritos to fetch.
     */
    where?: CarritoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Carritos to fetch.
     */
    orderBy?: CarritoOrderByWithRelationInput | CarritoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Carritos.
     */
    cursor?: CarritoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Carritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Carritos.
     */
    skip?: number
    distinct?: CarritoScalarFieldEnum | CarritoScalarFieldEnum[]
  }

  /**
   * Carrito create
   */
  export type CarritoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    /**
     * The data needed to create a Carrito.
     */
    data: XOR<CarritoCreateInput, CarritoUncheckedCreateInput>
  }

  /**
   * Carrito createMany
   */
  export type CarritoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Carritos.
     */
    data: CarritoCreateManyInput | CarritoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Carrito createManyAndReturn
   */
  export type CarritoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * The data used to create many Carritos.
     */
    data: CarritoCreateManyInput | CarritoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Carrito update
   */
  export type CarritoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    /**
     * The data needed to update a Carrito.
     */
    data: XOR<CarritoUpdateInput, CarritoUncheckedUpdateInput>
    /**
     * Choose, which Carrito to update.
     */
    where: CarritoWhereUniqueInput
  }

  /**
   * Carrito updateMany
   */
  export type CarritoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Carritos.
     */
    data: XOR<CarritoUpdateManyMutationInput, CarritoUncheckedUpdateManyInput>
    /**
     * Filter which Carritos to update
     */
    where?: CarritoWhereInput
    /**
     * Limit how many Carritos to update.
     */
    limit?: number
  }

  /**
   * Carrito updateManyAndReturn
   */
  export type CarritoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * The data used to update Carritos.
     */
    data: XOR<CarritoUpdateManyMutationInput, CarritoUncheckedUpdateManyInput>
    /**
     * Filter which Carritos to update
     */
    where?: CarritoWhereInput
    /**
     * Limit how many Carritos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Carrito upsert
   */
  export type CarritoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    /**
     * The filter to search for the Carrito to update in case it exists.
     */
    where: CarritoWhereUniqueInput
    /**
     * In case the Carrito found by the `where` argument doesn't exist, create a new Carrito with this data.
     */
    create: XOR<CarritoCreateInput, CarritoUncheckedCreateInput>
    /**
     * In case the Carrito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CarritoUpdateInput, CarritoUncheckedUpdateInput>
  }

  /**
   * Carrito delete
   */
  export type CarritoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
    /**
     * Filter which Carrito to delete.
     */
    where: CarritoWhereUniqueInput
  }

  /**
   * Carrito deleteMany
   */
  export type CarritoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Carritos to delete
     */
    where?: CarritoWhereInput
    /**
     * Limit how many Carritos to delete.
     */
    limit?: number
  }

  /**
   * Carrito without action
   */
  export type CarritoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Carrito
     */
    select?: CarritoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Carrito
     */
    omit?: CarritoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CarritoInclude<ExtArgs> | null
  }


  /**
   * Model Mensajes
   */

  export type AggregateMensajes = {
    _count: MensajesCountAggregateOutputType | null
    _avg: MensajesAvgAggregateOutputType | null
    _sum: MensajesSumAggregateOutputType | null
    _min: MensajesMinAggregateOutputType | null
    _max: MensajesMaxAggregateOutputType | null
  }

  export type MensajesAvgAggregateOutputType = {
    id: number | null
    remitenteId: number | null
    destinatarioId: number | null
  }

  export type MensajesSumAggregateOutputType = {
    id: number | null
    remitenteId: number | null
    destinatarioId: number | null
  }

  export type MensajesMinAggregateOutputType = {
    id: number | null
    remitenteId: number | null
    destinatarioId: number | null
    contenido: string | null
    fechaEnvio: Date | null
    leido: boolean | null
  }

  export type MensajesMaxAggregateOutputType = {
    id: number | null
    remitenteId: number | null
    destinatarioId: number | null
    contenido: string | null
    fechaEnvio: Date | null
    leido: boolean | null
  }

  export type MensajesCountAggregateOutputType = {
    id: number
    remitenteId: number
    destinatarioId: number
    contenido: number
    fechaEnvio: number
    leido: number
    _all: number
  }


  export type MensajesAvgAggregateInputType = {
    id?: true
    remitenteId?: true
    destinatarioId?: true
  }

  export type MensajesSumAggregateInputType = {
    id?: true
    remitenteId?: true
    destinatarioId?: true
  }

  export type MensajesMinAggregateInputType = {
    id?: true
    remitenteId?: true
    destinatarioId?: true
    contenido?: true
    fechaEnvio?: true
    leido?: true
  }

  export type MensajesMaxAggregateInputType = {
    id?: true
    remitenteId?: true
    destinatarioId?: true
    contenido?: true
    fechaEnvio?: true
    leido?: true
  }

  export type MensajesCountAggregateInputType = {
    id?: true
    remitenteId?: true
    destinatarioId?: true
    contenido?: true
    fechaEnvio?: true
    leido?: true
    _all?: true
  }

  export type MensajesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mensajes to aggregate.
     */
    where?: MensajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajesOrderByWithRelationInput | MensajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MensajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mensajes
    **/
    _count?: true | MensajesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MensajesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MensajesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MensajesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MensajesMaxAggregateInputType
  }

  export type GetMensajesAggregateType<T extends MensajesAggregateArgs> = {
        [P in keyof T & keyof AggregateMensajes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMensajes[P]>
      : GetScalarType<T[P], AggregateMensajes[P]>
  }




  export type MensajesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MensajesWhereInput
    orderBy?: MensajesOrderByWithAggregationInput | MensajesOrderByWithAggregationInput[]
    by: MensajesScalarFieldEnum[] | MensajesScalarFieldEnum
    having?: MensajesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MensajesCountAggregateInputType | true
    _avg?: MensajesAvgAggregateInputType
    _sum?: MensajesSumAggregateInputType
    _min?: MensajesMinAggregateInputType
    _max?: MensajesMaxAggregateInputType
  }

  export type MensajesGroupByOutputType = {
    id: number
    remitenteId: number
    destinatarioId: number
    contenido: string | null
    fechaEnvio: Date
    leido: boolean
    _count: MensajesCountAggregateOutputType | null
    _avg: MensajesAvgAggregateOutputType | null
    _sum: MensajesSumAggregateOutputType | null
    _min: MensajesMinAggregateOutputType | null
    _max: MensajesMaxAggregateOutputType | null
  }

  type GetMensajesGroupByPayload<T extends MensajesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MensajesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MensajesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MensajesGroupByOutputType[P]>
            : GetScalarType<T[P], MensajesGroupByOutputType[P]>
        }
      >
    >


  export type MensajesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    remitenteId?: boolean
    destinatarioId?: boolean
    contenido?: boolean
    fechaEnvio?: boolean
    leido?: boolean
    remitente?: boolean | CuentasDefaultArgs<ExtArgs>
    destinatario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mensajes"]>

  export type MensajesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    remitenteId?: boolean
    destinatarioId?: boolean
    contenido?: boolean
    fechaEnvio?: boolean
    leido?: boolean
    remitente?: boolean | CuentasDefaultArgs<ExtArgs>
    destinatario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mensajes"]>

  export type MensajesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    remitenteId?: boolean
    destinatarioId?: boolean
    contenido?: boolean
    fechaEnvio?: boolean
    leido?: boolean
    remitente?: boolean | CuentasDefaultArgs<ExtArgs>
    destinatario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mensajes"]>

  export type MensajesSelectScalar = {
    id?: boolean
    remitenteId?: boolean
    destinatarioId?: boolean
    contenido?: boolean
    fechaEnvio?: boolean
    leido?: boolean
  }

  export type MensajesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "remitenteId" | "destinatarioId" | "contenido" | "fechaEnvio" | "leido", ExtArgs["result"]["mensajes"]>
  export type MensajesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | CuentasDefaultArgs<ExtArgs>
    destinatario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type MensajesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | CuentasDefaultArgs<ExtArgs>
    destinatario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type MensajesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | CuentasDefaultArgs<ExtArgs>
    destinatario?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $MensajesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mensajes"
    objects: {
      remitente: Prisma.$CuentasPayload<ExtArgs>
      destinatario: Prisma.$CuentasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      remitenteId: number
      destinatarioId: number
      contenido: string | null
      fechaEnvio: Date
      leido: boolean
    }, ExtArgs["result"]["mensajes"]>
    composites: {}
  }

  type MensajesGetPayload<S extends boolean | null | undefined | MensajesDefaultArgs> = $Result.GetResult<Prisma.$MensajesPayload, S>

  type MensajesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MensajesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MensajesCountAggregateInputType | true
    }

  export interface MensajesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mensajes'], meta: { name: 'Mensajes' } }
    /**
     * Find zero or one Mensajes that matches the filter.
     * @param {MensajesFindUniqueArgs} args - Arguments to find a Mensajes
     * @example
     * // Get one Mensajes
     * const mensajes = await prisma.mensajes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MensajesFindUniqueArgs>(args: SelectSubset<T, MensajesFindUniqueArgs<ExtArgs>>): Prisma__MensajesClient<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mensajes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MensajesFindUniqueOrThrowArgs} args - Arguments to find a Mensajes
     * @example
     * // Get one Mensajes
     * const mensajes = await prisma.mensajes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MensajesFindUniqueOrThrowArgs>(args: SelectSubset<T, MensajesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MensajesClient<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mensajes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajesFindFirstArgs} args - Arguments to find a Mensajes
     * @example
     * // Get one Mensajes
     * const mensajes = await prisma.mensajes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MensajesFindFirstArgs>(args?: SelectSubset<T, MensajesFindFirstArgs<ExtArgs>>): Prisma__MensajesClient<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mensajes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajesFindFirstOrThrowArgs} args - Arguments to find a Mensajes
     * @example
     * // Get one Mensajes
     * const mensajes = await prisma.mensajes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MensajesFindFirstOrThrowArgs>(args?: SelectSubset<T, MensajesFindFirstOrThrowArgs<ExtArgs>>): Prisma__MensajesClient<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mensajes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mensajes
     * const mensajes = await prisma.mensajes.findMany()
     * 
     * // Get first 10 Mensajes
     * const mensajes = await prisma.mensajes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mensajesWithIdOnly = await prisma.mensajes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MensajesFindManyArgs>(args?: SelectSubset<T, MensajesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mensajes.
     * @param {MensajesCreateArgs} args - Arguments to create a Mensajes.
     * @example
     * // Create one Mensajes
     * const Mensajes = await prisma.mensajes.create({
     *   data: {
     *     // ... data to create a Mensajes
     *   }
     * })
     * 
     */
    create<T extends MensajesCreateArgs>(args: SelectSubset<T, MensajesCreateArgs<ExtArgs>>): Prisma__MensajesClient<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mensajes.
     * @param {MensajesCreateManyArgs} args - Arguments to create many Mensajes.
     * @example
     * // Create many Mensajes
     * const mensajes = await prisma.mensajes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MensajesCreateManyArgs>(args?: SelectSubset<T, MensajesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mensajes and returns the data saved in the database.
     * @param {MensajesCreateManyAndReturnArgs} args - Arguments to create many Mensajes.
     * @example
     * // Create many Mensajes
     * const mensajes = await prisma.mensajes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mensajes and only return the `id`
     * const mensajesWithIdOnly = await prisma.mensajes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MensajesCreateManyAndReturnArgs>(args?: SelectSubset<T, MensajesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mensajes.
     * @param {MensajesDeleteArgs} args - Arguments to delete one Mensajes.
     * @example
     * // Delete one Mensajes
     * const Mensajes = await prisma.mensajes.delete({
     *   where: {
     *     // ... filter to delete one Mensajes
     *   }
     * })
     * 
     */
    delete<T extends MensajesDeleteArgs>(args: SelectSubset<T, MensajesDeleteArgs<ExtArgs>>): Prisma__MensajesClient<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mensajes.
     * @param {MensajesUpdateArgs} args - Arguments to update one Mensajes.
     * @example
     * // Update one Mensajes
     * const mensajes = await prisma.mensajes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MensajesUpdateArgs>(args: SelectSubset<T, MensajesUpdateArgs<ExtArgs>>): Prisma__MensajesClient<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mensajes.
     * @param {MensajesDeleteManyArgs} args - Arguments to filter Mensajes to delete.
     * @example
     * // Delete a few Mensajes
     * const { count } = await prisma.mensajes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MensajesDeleteManyArgs>(args?: SelectSubset<T, MensajesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mensajes
     * const mensajes = await prisma.mensajes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MensajesUpdateManyArgs>(args: SelectSubset<T, MensajesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mensajes and returns the data updated in the database.
     * @param {MensajesUpdateManyAndReturnArgs} args - Arguments to update many Mensajes.
     * @example
     * // Update many Mensajes
     * const mensajes = await prisma.mensajes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mensajes and only return the `id`
     * const mensajesWithIdOnly = await prisma.mensajes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MensajesUpdateManyAndReturnArgs>(args: SelectSubset<T, MensajesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mensajes.
     * @param {MensajesUpsertArgs} args - Arguments to update or create a Mensajes.
     * @example
     * // Update or create a Mensajes
     * const mensajes = await prisma.mensajes.upsert({
     *   create: {
     *     // ... data to create a Mensajes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mensajes we want to update
     *   }
     * })
     */
    upsert<T extends MensajesUpsertArgs>(args: SelectSubset<T, MensajesUpsertArgs<ExtArgs>>): Prisma__MensajesClient<$Result.GetResult<Prisma.$MensajesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajesCountArgs} args - Arguments to filter Mensajes to count.
     * @example
     * // Count the number of Mensajes
     * const count = await prisma.mensajes.count({
     *   where: {
     *     // ... the filter for the Mensajes we want to count
     *   }
     * })
    **/
    count<T extends MensajesCountArgs>(
      args?: Subset<T, MensajesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MensajesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MensajesAggregateArgs>(args: Subset<T, MensajesAggregateArgs>): Prisma.PrismaPromise<GetMensajesAggregateType<T>>

    /**
     * Group by Mensajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MensajesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MensajesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MensajesGroupByArgs['orderBy'] }
        : { orderBy?: MensajesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MensajesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMensajesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mensajes model
   */
  readonly fields: MensajesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mensajes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MensajesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    remitente<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    destinatario<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mensajes model
   */
  interface MensajesFieldRefs {
    readonly id: FieldRef<"Mensajes", 'Int'>
    readonly remitenteId: FieldRef<"Mensajes", 'Int'>
    readonly destinatarioId: FieldRef<"Mensajes", 'Int'>
    readonly contenido: FieldRef<"Mensajes", 'String'>
    readonly fechaEnvio: FieldRef<"Mensajes", 'DateTime'>
    readonly leido: FieldRef<"Mensajes", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Mensajes findUnique
   */
  export type MensajesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    /**
     * Filter, which Mensajes to fetch.
     */
    where: MensajesWhereUniqueInput
  }

  /**
   * Mensajes findUniqueOrThrow
   */
  export type MensajesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    /**
     * Filter, which Mensajes to fetch.
     */
    where: MensajesWhereUniqueInput
  }

  /**
   * Mensajes findFirst
   */
  export type MensajesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    /**
     * Filter, which Mensajes to fetch.
     */
    where?: MensajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajesOrderByWithRelationInput | MensajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mensajes.
     */
    cursor?: MensajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mensajes.
     */
    distinct?: MensajesScalarFieldEnum | MensajesScalarFieldEnum[]
  }

  /**
   * Mensajes findFirstOrThrow
   */
  export type MensajesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    /**
     * Filter, which Mensajes to fetch.
     */
    where?: MensajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajesOrderByWithRelationInput | MensajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mensajes.
     */
    cursor?: MensajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mensajes.
     */
    distinct?: MensajesScalarFieldEnum | MensajesScalarFieldEnum[]
  }

  /**
   * Mensajes findMany
   */
  export type MensajesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    /**
     * Filter, which Mensajes to fetch.
     */
    where?: MensajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mensajes to fetch.
     */
    orderBy?: MensajesOrderByWithRelationInput | MensajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mensajes.
     */
    cursor?: MensajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mensajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mensajes.
     */
    skip?: number
    distinct?: MensajesScalarFieldEnum | MensajesScalarFieldEnum[]
  }

  /**
   * Mensajes create
   */
  export type MensajesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    /**
     * The data needed to create a Mensajes.
     */
    data: XOR<MensajesCreateInput, MensajesUncheckedCreateInput>
  }

  /**
   * Mensajes createMany
   */
  export type MensajesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mensajes.
     */
    data: MensajesCreateManyInput | MensajesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Mensajes createManyAndReturn
   */
  export type MensajesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * The data used to create many Mensajes.
     */
    data: MensajesCreateManyInput | MensajesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mensajes update
   */
  export type MensajesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    /**
     * The data needed to update a Mensajes.
     */
    data: XOR<MensajesUpdateInput, MensajesUncheckedUpdateInput>
    /**
     * Choose, which Mensajes to update.
     */
    where: MensajesWhereUniqueInput
  }

  /**
   * Mensajes updateMany
   */
  export type MensajesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mensajes.
     */
    data: XOR<MensajesUpdateManyMutationInput, MensajesUncheckedUpdateManyInput>
    /**
     * Filter which Mensajes to update
     */
    where?: MensajesWhereInput
    /**
     * Limit how many Mensajes to update.
     */
    limit?: number
  }

  /**
   * Mensajes updateManyAndReturn
   */
  export type MensajesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * The data used to update Mensajes.
     */
    data: XOR<MensajesUpdateManyMutationInput, MensajesUncheckedUpdateManyInput>
    /**
     * Filter which Mensajes to update
     */
    where?: MensajesWhereInput
    /**
     * Limit how many Mensajes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mensajes upsert
   */
  export type MensajesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    /**
     * The filter to search for the Mensajes to update in case it exists.
     */
    where: MensajesWhereUniqueInput
    /**
     * In case the Mensajes found by the `where` argument doesn't exist, create a new Mensajes with this data.
     */
    create: XOR<MensajesCreateInput, MensajesUncheckedCreateInput>
    /**
     * In case the Mensajes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MensajesUpdateInput, MensajesUncheckedUpdateInput>
  }

  /**
   * Mensajes delete
   */
  export type MensajesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
    /**
     * Filter which Mensajes to delete.
     */
    where: MensajesWhereUniqueInput
  }

  /**
   * Mensajes deleteMany
   */
  export type MensajesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mensajes to delete
     */
    where?: MensajesWhereInput
    /**
     * Limit how many Mensajes to delete.
     */
    limit?: number
  }

  /**
   * Mensajes without action
   */
  export type MensajesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mensajes
     */
    select?: MensajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Mensajes
     */
    omit?: MensajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MensajesInclude<ExtArgs> | null
  }


  /**
   * Model EstadosReporte
   */

  export type AggregateEstadosReporte = {
    _count: EstadosReporteCountAggregateOutputType | null
    _avg: EstadosReporteAvgAggregateOutputType | null
    _sum: EstadosReporteSumAggregateOutputType | null
    _min: EstadosReporteMinAggregateOutputType | null
    _max: EstadosReporteMaxAggregateOutputType | null
  }

  export type EstadosReporteAvgAggregateOutputType = {
    id: number | null
  }

  export type EstadosReporteSumAggregateOutputType = {
    id: number | null
  }

  export type EstadosReporteMinAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadosReporteMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
  }

  export type EstadosReporteCountAggregateOutputType = {
    id: number
    nombre: number
    _all: number
  }


  export type EstadosReporteAvgAggregateInputType = {
    id?: true
  }

  export type EstadosReporteSumAggregateInputType = {
    id?: true
  }

  export type EstadosReporteMinAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadosReporteMaxAggregateInputType = {
    id?: true
    nombre?: true
  }

  export type EstadosReporteCountAggregateInputType = {
    id?: true
    nombre?: true
    _all?: true
  }

  export type EstadosReporteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadosReporte to aggregate.
     */
    where?: EstadosReporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosReportes to fetch.
     */
    orderBy?: EstadosReporteOrderByWithRelationInput | EstadosReporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstadosReporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosReportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosReportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EstadosReportes
    **/
    _count?: true | EstadosReporteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EstadosReporteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EstadosReporteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstadosReporteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstadosReporteMaxAggregateInputType
  }

  export type GetEstadosReporteAggregateType<T extends EstadosReporteAggregateArgs> = {
        [P in keyof T & keyof AggregateEstadosReporte]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstadosReporte[P]>
      : GetScalarType<T[P], AggregateEstadosReporte[P]>
  }




  export type EstadosReporteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstadosReporteWhereInput
    orderBy?: EstadosReporteOrderByWithAggregationInput | EstadosReporteOrderByWithAggregationInput[]
    by: EstadosReporteScalarFieldEnum[] | EstadosReporteScalarFieldEnum
    having?: EstadosReporteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstadosReporteCountAggregateInputType | true
    _avg?: EstadosReporteAvgAggregateInputType
    _sum?: EstadosReporteSumAggregateInputType
    _min?: EstadosReporteMinAggregateInputType
    _max?: EstadosReporteMaxAggregateInputType
  }

  export type EstadosReporteGroupByOutputType = {
    id: number
    nombre: string
    _count: EstadosReporteCountAggregateOutputType | null
    _avg: EstadosReporteAvgAggregateOutputType | null
    _sum: EstadosReporteSumAggregateOutputType | null
    _min: EstadosReporteMinAggregateOutputType | null
    _max: EstadosReporteMaxAggregateOutputType | null
  }

  type GetEstadosReporteGroupByPayload<T extends EstadosReporteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstadosReporteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstadosReporteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstadosReporteGroupByOutputType[P]>
            : GetScalarType<T[P], EstadosReporteGroupByOutputType[P]>
        }
      >
    >


  export type EstadosReporteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    reportes?: boolean | EstadosReporte$reportesArgs<ExtArgs>
    _count?: boolean | EstadosReporteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estadosReporte"]>

  export type EstadosReporteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadosReporte"]>

  export type EstadosReporteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["estadosReporte"]>

  export type EstadosReporteSelectScalar = {
    id?: boolean
    nombre?: boolean
  }

  export type EstadosReporteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre", ExtArgs["result"]["estadosReporte"]>
  export type EstadosReporteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportes?: boolean | EstadosReporte$reportesArgs<ExtArgs>
    _count?: boolean | EstadosReporteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstadosReporteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EstadosReporteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstadosReportePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EstadosReporte"
    objects: {
      reportes: Prisma.$ReportesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
    }, ExtArgs["result"]["estadosReporte"]>
    composites: {}
  }

  type EstadosReporteGetPayload<S extends boolean | null | undefined | EstadosReporteDefaultArgs> = $Result.GetResult<Prisma.$EstadosReportePayload, S>

  type EstadosReporteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstadosReporteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstadosReporteCountAggregateInputType | true
    }

  export interface EstadosReporteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EstadosReporte'], meta: { name: 'EstadosReporte' } }
    /**
     * Find zero or one EstadosReporte that matches the filter.
     * @param {EstadosReporteFindUniqueArgs} args - Arguments to find a EstadosReporte
     * @example
     * // Get one EstadosReporte
     * const estadosReporte = await prisma.estadosReporte.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstadosReporteFindUniqueArgs>(args: SelectSubset<T, EstadosReporteFindUniqueArgs<ExtArgs>>): Prisma__EstadosReporteClient<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EstadosReporte that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstadosReporteFindUniqueOrThrowArgs} args - Arguments to find a EstadosReporte
     * @example
     * // Get one EstadosReporte
     * const estadosReporte = await prisma.estadosReporte.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstadosReporteFindUniqueOrThrowArgs>(args: SelectSubset<T, EstadosReporteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstadosReporteClient<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadosReporte that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosReporteFindFirstArgs} args - Arguments to find a EstadosReporte
     * @example
     * // Get one EstadosReporte
     * const estadosReporte = await prisma.estadosReporte.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstadosReporteFindFirstArgs>(args?: SelectSubset<T, EstadosReporteFindFirstArgs<ExtArgs>>): Prisma__EstadosReporteClient<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EstadosReporte that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosReporteFindFirstOrThrowArgs} args - Arguments to find a EstadosReporte
     * @example
     * // Get one EstadosReporte
     * const estadosReporte = await prisma.estadosReporte.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstadosReporteFindFirstOrThrowArgs>(args?: SelectSubset<T, EstadosReporteFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstadosReporteClient<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EstadosReportes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosReporteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EstadosReportes
     * const estadosReportes = await prisma.estadosReporte.findMany()
     * 
     * // Get first 10 EstadosReportes
     * const estadosReportes = await prisma.estadosReporte.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const estadosReporteWithIdOnly = await prisma.estadosReporte.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EstadosReporteFindManyArgs>(args?: SelectSubset<T, EstadosReporteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EstadosReporte.
     * @param {EstadosReporteCreateArgs} args - Arguments to create a EstadosReporte.
     * @example
     * // Create one EstadosReporte
     * const EstadosReporte = await prisma.estadosReporte.create({
     *   data: {
     *     // ... data to create a EstadosReporte
     *   }
     * })
     * 
     */
    create<T extends EstadosReporteCreateArgs>(args: SelectSubset<T, EstadosReporteCreateArgs<ExtArgs>>): Prisma__EstadosReporteClient<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EstadosReportes.
     * @param {EstadosReporteCreateManyArgs} args - Arguments to create many EstadosReportes.
     * @example
     * // Create many EstadosReportes
     * const estadosReporte = await prisma.estadosReporte.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstadosReporteCreateManyArgs>(args?: SelectSubset<T, EstadosReporteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EstadosReportes and returns the data saved in the database.
     * @param {EstadosReporteCreateManyAndReturnArgs} args - Arguments to create many EstadosReportes.
     * @example
     * // Create many EstadosReportes
     * const estadosReporte = await prisma.estadosReporte.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EstadosReportes and only return the `id`
     * const estadosReporteWithIdOnly = await prisma.estadosReporte.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstadosReporteCreateManyAndReturnArgs>(args?: SelectSubset<T, EstadosReporteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EstadosReporte.
     * @param {EstadosReporteDeleteArgs} args - Arguments to delete one EstadosReporte.
     * @example
     * // Delete one EstadosReporte
     * const EstadosReporte = await prisma.estadosReporte.delete({
     *   where: {
     *     // ... filter to delete one EstadosReporte
     *   }
     * })
     * 
     */
    delete<T extends EstadosReporteDeleteArgs>(args: SelectSubset<T, EstadosReporteDeleteArgs<ExtArgs>>): Prisma__EstadosReporteClient<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EstadosReporte.
     * @param {EstadosReporteUpdateArgs} args - Arguments to update one EstadosReporte.
     * @example
     * // Update one EstadosReporte
     * const estadosReporte = await prisma.estadosReporte.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstadosReporteUpdateArgs>(args: SelectSubset<T, EstadosReporteUpdateArgs<ExtArgs>>): Prisma__EstadosReporteClient<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EstadosReportes.
     * @param {EstadosReporteDeleteManyArgs} args - Arguments to filter EstadosReportes to delete.
     * @example
     * // Delete a few EstadosReportes
     * const { count } = await prisma.estadosReporte.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstadosReporteDeleteManyArgs>(args?: SelectSubset<T, EstadosReporteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadosReportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosReporteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EstadosReportes
     * const estadosReporte = await prisma.estadosReporte.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstadosReporteUpdateManyArgs>(args: SelectSubset<T, EstadosReporteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EstadosReportes and returns the data updated in the database.
     * @param {EstadosReporteUpdateManyAndReturnArgs} args - Arguments to update many EstadosReportes.
     * @example
     * // Update many EstadosReportes
     * const estadosReporte = await prisma.estadosReporte.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EstadosReportes and only return the `id`
     * const estadosReporteWithIdOnly = await prisma.estadosReporte.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstadosReporteUpdateManyAndReturnArgs>(args: SelectSubset<T, EstadosReporteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EstadosReporte.
     * @param {EstadosReporteUpsertArgs} args - Arguments to update or create a EstadosReporte.
     * @example
     * // Update or create a EstadosReporte
     * const estadosReporte = await prisma.estadosReporte.upsert({
     *   create: {
     *     // ... data to create a EstadosReporte
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EstadosReporte we want to update
     *   }
     * })
     */
    upsert<T extends EstadosReporteUpsertArgs>(args: SelectSubset<T, EstadosReporteUpsertArgs<ExtArgs>>): Prisma__EstadosReporteClient<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EstadosReportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosReporteCountArgs} args - Arguments to filter EstadosReportes to count.
     * @example
     * // Count the number of EstadosReportes
     * const count = await prisma.estadosReporte.count({
     *   where: {
     *     // ... the filter for the EstadosReportes we want to count
     *   }
     * })
    **/
    count<T extends EstadosReporteCountArgs>(
      args?: Subset<T, EstadosReporteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstadosReporteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EstadosReporte.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosReporteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstadosReporteAggregateArgs>(args: Subset<T, EstadosReporteAggregateArgs>): Prisma.PrismaPromise<GetEstadosReporteAggregateType<T>>

    /**
     * Group by EstadosReporte.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstadosReporteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstadosReporteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstadosReporteGroupByArgs['orderBy'] }
        : { orderBy?: EstadosReporteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstadosReporteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstadosReporteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EstadosReporte model
   */
  readonly fields: EstadosReporteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EstadosReporte.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstadosReporteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reportes<T extends EstadosReporte$reportesArgs<ExtArgs> = {}>(args?: Subset<T, EstadosReporte$reportesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EstadosReporte model
   */
  interface EstadosReporteFieldRefs {
    readonly id: FieldRef<"EstadosReporte", 'Int'>
    readonly nombre: FieldRef<"EstadosReporte", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EstadosReporte findUnique
   */
  export type EstadosReporteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosReporteInclude<ExtArgs> | null
    /**
     * Filter, which EstadosReporte to fetch.
     */
    where: EstadosReporteWhereUniqueInput
  }

  /**
   * EstadosReporte findUniqueOrThrow
   */
  export type EstadosReporteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosReporteInclude<ExtArgs> | null
    /**
     * Filter, which EstadosReporte to fetch.
     */
    where: EstadosReporteWhereUniqueInput
  }

  /**
   * EstadosReporte findFirst
   */
  export type EstadosReporteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosReporteInclude<ExtArgs> | null
    /**
     * Filter, which EstadosReporte to fetch.
     */
    where?: EstadosReporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosReportes to fetch.
     */
    orderBy?: EstadosReporteOrderByWithRelationInput | EstadosReporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadosReportes.
     */
    cursor?: EstadosReporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosReportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosReportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadosReportes.
     */
    distinct?: EstadosReporteScalarFieldEnum | EstadosReporteScalarFieldEnum[]
  }

  /**
   * EstadosReporte findFirstOrThrow
   */
  export type EstadosReporteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosReporteInclude<ExtArgs> | null
    /**
     * Filter, which EstadosReporte to fetch.
     */
    where?: EstadosReporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosReportes to fetch.
     */
    orderBy?: EstadosReporteOrderByWithRelationInput | EstadosReporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EstadosReportes.
     */
    cursor?: EstadosReporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosReportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosReportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EstadosReportes.
     */
    distinct?: EstadosReporteScalarFieldEnum | EstadosReporteScalarFieldEnum[]
  }

  /**
   * EstadosReporte findMany
   */
  export type EstadosReporteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosReporteInclude<ExtArgs> | null
    /**
     * Filter, which EstadosReportes to fetch.
     */
    where?: EstadosReporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EstadosReportes to fetch.
     */
    orderBy?: EstadosReporteOrderByWithRelationInput | EstadosReporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EstadosReportes.
     */
    cursor?: EstadosReporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EstadosReportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EstadosReportes.
     */
    skip?: number
    distinct?: EstadosReporteScalarFieldEnum | EstadosReporteScalarFieldEnum[]
  }

  /**
   * EstadosReporte create
   */
  export type EstadosReporteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosReporteInclude<ExtArgs> | null
    /**
     * The data needed to create a EstadosReporte.
     */
    data: XOR<EstadosReporteCreateInput, EstadosReporteUncheckedCreateInput>
  }

  /**
   * EstadosReporte createMany
   */
  export type EstadosReporteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EstadosReportes.
     */
    data: EstadosReporteCreateManyInput | EstadosReporteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadosReporte createManyAndReturn
   */
  export type EstadosReporteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * The data used to create many EstadosReportes.
     */
    data: EstadosReporteCreateManyInput | EstadosReporteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EstadosReporte update
   */
  export type EstadosReporteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosReporteInclude<ExtArgs> | null
    /**
     * The data needed to update a EstadosReporte.
     */
    data: XOR<EstadosReporteUpdateInput, EstadosReporteUncheckedUpdateInput>
    /**
     * Choose, which EstadosReporte to update.
     */
    where: EstadosReporteWhereUniqueInput
  }

  /**
   * EstadosReporte updateMany
   */
  export type EstadosReporteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EstadosReportes.
     */
    data: XOR<EstadosReporteUpdateManyMutationInput, EstadosReporteUncheckedUpdateManyInput>
    /**
     * Filter which EstadosReportes to update
     */
    where?: EstadosReporteWhereInput
    /**
     * Limit how many EstadosReportes to update.
     */
    limit?: number
  }

  /**
   * EstadosReporte updateManyAndReturn
   */
  export type EstadosReporteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * The data used to update EstadosReportes.
     */
    data: XOR<EstadosReporteUpdateManyMutationInput, EstadosReporteUncheckedUpdateManyInput>
    /**
     * Filter which EstadosReportes to update
     */
    where?: EstadosReporteWhereInput
    /**
     * Limit how many EstadosReportes to update.
     */
    limit?: number
  }

  /**
   * EstadosReporte upsert
   */
  export type EstadosReporteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosReporteInclude<ExtArgs> | null
    /**
     * The filter to search for the EstadosReporte to update in case it exists.
     */
    where: EstadosReporteWhereUniqueInput
    /**
     * In case the EstadosReporte found by the `where` argument doesn't exist, create a new EstadosReporte with this data.
     */
    create: XOR<EstadosReporteCreateInput, EstadosReporteUncheckedCreateInput>
    /**
     * In case the EstadosReporte was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstadosReporteUpdateInput, EstadosReporteUncheckedUpdateInput>
  }

  /**
   * EstadosReporte delete
   */
  export type EstadosReporteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosReporteInclude<ExtArgs> | null
    /**
     * Filter which EstadosReporte to delete.
     */
    where: EstadosReporteWhereUniqueInput
  }

  /**
   * EstadosReporte deleteMany
   */
  export type EstadosReporteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EstadosReportes to delete
     */
    where?: EstadosReporteWhereInput
    /**
     * Limit how many EstadosReportes to delete.
     */
    limit?: number
  }

  /**
   * EstadosReporte.reportes
   */
  export type EstadosReporte$reportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    where?: ReportesWhereInput
    orderBy?: ReportesOrderByWithRelationInput | ReportesOrderByWithRelationInput[]
    cursor?: ReportesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * EstadosReporte without action
   */
  export type EstadosReporteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstadosReporte
     */
    select?: EstadosReporteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EstadosReporte
     */
    omit?: EstadosReporteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstadosReporteInclude<ExtArgs> | null
  }


  /**
   * Model Reportes
   */

  export type AggregateReportes = {
    _count: ReportesCountAggregateOutputType | null
    _avg: ReportesAvgAggregateOutputType | null
    _sum: ReportesSumAggregateOutputType | null
    _min: ReportesMinAggregateOutputType | null
    _max: ReportesMaxAggregateOutputType | null
  }

  export type ReportesAvgAggregateOutputType = {
    id: number | null
    reportanteId: number | null
    usuarioReportadoId: number | null
    productoId: number | null
    estadoId: number | null
  }

  export type ReportesSumAggregateOutputType = {
    id: number | null
    reportanteId: number | null
    usuarioReportadoId: number | null
    productoId: number | null
    estadoId: number | null
  }

  export type ReportesMinAggregateOutputType = {
    id: number | null
    reportanteId: number | null
    usuarioReportadoId: number | null
    productoId: number | null
    motivo: string | null
    fecha: Date | null
    estadoId: number | null
  }

  export type ReportesMaxAggregateOutputType = {
    id: number | null
    reportanteId: number | null
    usuarioReportadoId: number | null
    productoId: number | null
    motivo: string | null
    fecha: Date | null
    estadoId: number | null
  }

  export type ReportesCountAggregateOutputType = {
    id: number
    reportanteId: number
    usuarioReportadoId: number
    productoId: number
    motivo: number
    fecha: number
    estadoId: number
    _all: number
  }


  export type ReportesAvgAggregateInputType = {
    id?: true
    reportanteId?: true
    usuarioReportadoId?: true
    productoId?: true
    estadoId?: true
  }

  export type ReportesSumAggregateInputType = {
    id?: true
    reportanteId?: true
    usuarioReportadoId?: true
    productoId?: true
    estadoId?: true
  }

  export type ReportesMinAggregateInputType = {
    id?: true
    reportanteId?: true
    usuarioReportadoId?: true
    productoId?: true
    motivo?: true
    fecha?: true
    estadoId?: true
  }

  export type ReportesMaxAggregateInputType = {
    id?: true
    reportanteId?: true
    usuarioReportadoId?: true
    productoId?: true
    motivo?: true
    fecha?: true
    estadoId?: true
  }

  export type ReportesCountAggregateInputType = {
    id?: true
    reportanteId?: true
    usuarioReportadoId?: true
    productoId?: true
    motivo?: true
    fecha?: true
    estadoId?: true
    _all?: true
  }

  export type ReportesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reportes to aggregate.
     */
    where?: ReportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reportes to fetch.
     */
    orderBy?: ReportesOrderByWithRelationInput | ReportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reportes
    **/
    _count?: true | ReportesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReportesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReportesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportesMaxAggregateInputType
  }

  export type GetReportesAggregateType<T extends ReportesAggregateArgs> = {
        [P in keyof T & keyof AggregateReportes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReportes[P]>
      : GetScalarType<T[P], AggregateReportes[P]>
  }




  export type ReportesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportesWhereInput
    orderBy?: ReportesOrderByWithAggregationInput | ReportesOrderByWithAggregationInput[]
    by: ReportesScalarFieldEnum[] | ReportesScalarFieldEnum
    having?: ReportesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportesCountAggregateInputType | true
    _avg?: ReportesAvgAggregateInputType
    _sum?: ReportesSumAggregateInputType
    _min?: ReportesMinAggregateInputType
    _max?: ReportesMaxAggregateInputType
  }

  export type ReportesGroupByOutputType = {
    id: number
    reportanteId: number
    usuarioReportadoId: number | null
    productoId: number | null
    motivo: string | null
    fecha: Date
    estadoId: number
    _count: ReportesCountAggregateOutputType | null
    _avg: ReportesAvgAggregateOutputType | null
    _sum: ReportesSumAggregateOutputType | null
    _min: ReportesMinAggregateOutputType | null
    _max: ReportesMaxAggregateOutputType | null
  }

  type GetReportesGroupByPayload<T extends ReportesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportesGroupByOutputType[P]>
            : GetScalarType<T[P], ReportesGroupByOutputType[P]>
        }
      >
    >


  export type ReportesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportanteId?: boolean
    usuarioReportadoId?: boolean
    productoId?: boolean
    motivo?: boolean
    fecha?: boolean
    estadoId?: boolean
    reportante?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioReportado?: boolean | Reportes$usuarioReportadoArgs<ExtArgs>
    producto?: boolean | Reportes$productoArgs<ExtArgs>
    estado?: boolean | EstadosReporteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportes"]>

  export type ReportesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportanteId?: boolean
    usuarioReportadoId?: boolean
    productoId?: boolean
    motivo?: boolean
    fecha?: boolean
    estadoId?: boolean
    reportante?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioReportado?: boolean | Reportes$usuarioReportadoArgs<ExtArgs>
    producto?: boolean | Reportes$productoArgs<ExtArgs>
    estado?: boolean | EstadosReporteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportes"]>

  export type ReportesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reportanteId?: boolean
    usuarioReportadoId?: boolean
    productoId?: boolean
    motivo?: boolean
    fecha?: boolean
    estadoId?: boolean
    reportante?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioReportado?: boolean | Reportes$usuarioReportadoArgs<ExtArgs>
    producto?: boolean | Reportes$productoArgs<ExtArgs>
    estado?: boolean | EstadosReporteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reportes"]>

  export type ReportesSelectScalar = {
    id?: boolean
    reportanteId?: boolean
    usuarioReportadoId?: boolean
    productoId?: boolean
    motivo?: boolean
    fecha?: boolean
    estadoId?: boolean
  }

  export type ReportesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reportanteId" | "usuarioReportadoId" | "productoId" | "motivo" | "fecha" | "estadoId", ExtArgs["result"]["reportes"]>
  export type ReportesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportante?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioReportado?: boolean | Reportes$usuarioReportadoArgs<ExtArgs>
    producto?: boolean | Reportes$productoArgs<ExtArgs>
    estado?: boolean | EstadosReporteDefaultArgs<ExtArgs>
  }
  export type ReportesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportante?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioReportado?: boolean | Reportes$usuarioReportadoArgs<ExtArgs>
    producto?: boolean | Reportes$productoArgs<ExtArgs>
    estado?: boolean | EstadosReporteDefaultArgs<ExtArgs>
  }
  export type ReportesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportante?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioReportado?: boolean | Reportes$usuarioReportadoArgs<ExtArgs>
    producto?: boolean | Reportes$productoArgs<ExtArgs>
    estado?: boolean | EstadosReporteDefaultArgs<ExtArgs>
  }

  export type $ReportesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reportes"
    objects: {
      reportante: Prisma.$CuentasPayload<ExtArgs>
      usuarioReportado: Prisma.$CuentasPayload<ExtArgs> | null
      producto: Prisma.$ProductosPayload<ExtArgs> | null
      estado: Prisma.$EstadosReportePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      reportanteId: number
      usuarioReportadoId: number | null
      productoId: number | null
      motivo: string | null
      fecha: Date
      estadoId: number
    }, ExtArgs["result"]["reportes"]>
    composites: {}
  }

  type ReportesGetPayload<S extends boolean | null | undefined | ReportesDefaultArgs> = $Result.GetResult<Prisma.$ReportesPayload, S>

  type ReportesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReportesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportesCountAggregateInputType | true
    }

  export interface ReportesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reportes'], meta: { name: 'Reportes' } }
    /**
     * Find zero or one Reportes that matches the filter.
     * @param {ReportesFindUniqueArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReportesFindUniqueArgs>(args: SelectSubset<T, ReportesFindUniqueArgs<ExtArgs>>): Prisma__ReportesClient<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reportes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReportesFindUniqueOrThrowArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReportesFindUniqueOrThrowArgs>(args: SelectSubset<T, ReportesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReportesClient<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reportes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportesFindFirstArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReportesFindFirstArgs>(args?: SelectSubset<T, ReportesFindFirstArgs<ExtArgs>>): Prisma__ReportesClient<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reportes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportesFindFirstOrThrowArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReportesFindFirstOrThrowArgs>(args?: SelectSubset<T, ReportesFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReportesClient<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reportes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reportes
     * const reportes = await prisma.reportes.findMany()
     * 
     * // Get first 10 Reportes
     * const reportes = await prisma.reportes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportesWithIdOnly = await prisma.reportes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReportesFindManyArgs>(args?: SelectSubset<T, ReportesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reportes.
     * @param {ReportesCreateArgs} args - Arguments to create a Reportes.
     * @example
     * // Create one Reportes
     * const Reportes = await prisma.reportes.create({
     *   data: {
     *     // ... data to create a Reportes
     *   }
     * })
     * 
     */
    create<T extends ReportesCreateArgs>(args: SelectSubset<T, ReportesCreateArgs<ExtArgs>>): Prisma__ReportesClient<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reportes.
     * @param {ReportesCreateManyArgs} args - Arguments to create many Reportes.
     * @example
     * // Create many Reportes
     * const reportes = await prisma.reportes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReportesCreateManyArgs>(args?: SelectSubset<T, ReportesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reportes and returns the data saved in the database.
     * @param {ReportesCreateManyAndReturnArgs} args - Arguments to create many Reportes.
     * @example
     * // Create many Reportes
     * const reportes = await prisma.reportes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reportes and only return the `id`
     * const reportesWithIdOnly = await prisma.reportes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReportesCreateManyAndReturnArgs>(args?: SelectSubset<T, ReportesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reportes.
     * @param {ReportesDeleteArgs} args - Arguments to delete one Reportes.
     * @example
     * // Delete one Reportes
     * const Reportes = await prisma.reportes.delete({
     *   where: {
     *     // ... filter to delete one Reportes
     *   }
     * })
     * 
     */
    delete<T extends ReportesDeleteArgs>(args: SelectSubset<T, ReportesDeleteArgs<ExtArgs>>): Prisma__ReportesClient<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reportes.
     * @param {ReportesUpdateArgs} args - Arguments to update one Reportes.
     * @example
     * // Update one Reportes
     * const reportes = await prisma.reportes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReportesUpdateArgs>(args: SelectSubset<T, ReportesUpdateArgs<ExtArgs>>): Prisma__ReportesClient<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reportes.
     * @param {ReportesDeleteManyArgs} args - Arguments to filter Reportes to delete.
     * @example
     * // Delete a few Reportes
     * const { count } = await prisma.reportes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReportesDeleteManyArgs>(args?: SelectSubset<T, ReportesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reportes
     * const reportes = await prisma.reportes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReportesUpdateManyArgs>(args: SelectSubset<T, ReportesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reportes and returns the data updated in the database.
     * @param {ReportesUpdateManyAndReturnArgs} args - Arguments to update many Reportes.
     * @example
     * // Update many Reportes
     * const reportes = await prisma.reportes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reportes and only return the `id`
     * const reportesWithIdOnly = await prisma.reportes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReportesUpdateManyAndReturnArgs>(args: SelectSubset<T, ReportesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reportes.
     * @param {ReportesUpsertArgs} args - Arguments to update or create a Reportes.
     * @example
     * // Update or create a Reportes
     * const reportes = await prisma.reportes.upsert({
     *   create: {
     *     // ... data to create a Reportes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reportes we want to update
     *   }
     * })
     */
    upsert<T extends ReportesUpsertArgs>(args: SelectSubset<T, ReportesUpsertArgs<ExtArgs>>): Prisma__ReportesClient<$Result.GetResult<Prisma.$ReportesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportesCountArgs} args - Arguments to filter Reportes to count.
     * @example
     * // Count the number of Reportes
     * const count = await prisma.reportes.count({
     *   where: {
     *     // ... the filter for the Reportes we want to count
     *   }
     * })
    **/
    count<T extends ReportesCountArgs>(
      args?: Subset<T, ReportesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportesAggregateArgs>(args: Subset<T, ReportesAggregateArgs>): Prisma.PrismaPromise<GetReportesAggregateType<T>>

    /**
     * Group by Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReportesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReportesGroupByArgs['orderBy'] }
        : { orderBy?: ReportesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReportesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reportes model
   */
  readonly fields: ReportesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reportes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReportesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reportante<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarioReportado<T extends Reportes$usuarioReportadoArgs<ExtArgs> = {}>(args?: Subset<T, Reportes$usuarioReportadoArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    producto<T extends Reportes$productoArgs<ExtArgs> = {}>(args?: Subset<T, Reportes$productoArgs<ExtArgs>>): Prisma__ProductosClient<$Result.GetResult<Prisma.$ProductosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    estado<T extends EstadosReporteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstadosReporteDefaultArgs<ExtArgs>>): Prisma__EstadosReporteClient<$Result.GetResult<Prisma.$EstadosReportePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reportes model
   */
  interface ReportesFieldRefs {
    readonly id: FieldRef<"Reportes", 'Int'>
    readonly reportanteId: FieldRef<"Reportes", 'Int'>
    readonly usuarioReportadoId: FieldRef<"Reportes", 'Int'>
    readonly productoId: FieldRef<"Reportes", 'Int'>
    readonly motivo: FieldRef<"Reportes", 'String'>
    readonly fecha: FieldRef<"Reportes", 'DateTime'>
    readonly estadoId: FieldRef<"Reportes", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Reportes findUnique
   */
  export type ReportesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    /**
     * Filter, which Reportes to fetch.
     */
    where: ReportesWhereUniqueInput
  }

  /**
   * Reportes findUniqueOrThrow
   */
  export type ReportesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    /**
     * Filter, which Reportes to fetch.
     */
    where: ReportesWhereUniqueInput
  }

  /**
   * Reportes findFirst
   */
  export type ReportesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    /**
     * Filter, which Reportes to fetch.
     */
    where?: ReportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reportes to fetch.
     */
    orderBy?: ReportesOrderByWithRelationInput | ReportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reportes.
     */
    cursor?: ReportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reportes.
     */
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * Reportes findFirstOrThrow
   */
  export type ReportesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    /**
     * Filter, which Reportes to fetch.
     */
    where?: ReportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reportes to fetch.
     */
    orderBy?: ReportesOrderByWithRelationInput | ReportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reportes.
     */
    cursor?: ReportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reportes.
     */
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * Reportes findMany
   */
  export type ReportesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    /**
     * Filter, which Reportes to fetch.
     */
    where?: ReportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reportes to fetch.
     */
    orderBy?: ReportesOrderByWithRelationInput | ReportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reportes.
     */
    cursor?: ReportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reportes.
     */
    skip?: number
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * Reportes create
   */
  export type ReportesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    /**
     * The data needed to create a Reportes.
     */
    data: XOR<ReportesCreateInput, ReportesUncheckedCreateInput>
  }

  /**
   * Reportes createMany
   */
  export type ReportesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reportes.
     */
    data: ReportesCreateManyInput | ReportesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reportes createManyAndReturn
   */
  export type ReportesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * The data used to create many Reportes.
     */
    data: ReportesCreateManyInput | ReportesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reportes update
   */
  export type ReportesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    /**
     * The data needed to update a Reportes.
     */
    data: XOR<ReportesUpdateInput, ReportesUncheckedUpdateInput>
    /**
     * Choose, which Reportes to update.
     */
    where: ReportesWhereUniqueInput
  }

  /**
   * Reportes updateMany
   */
  export type ReportesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reportes.
     */
    data: XOR<ReportesUpdateManyMutationInput, ReportesUncheckedUpdateManyInput>
    /**
     * Filter which Reportes to update
     */
    where?: ReportesWhereInput
    /**
     * Limit how many Reportes to update.
     */
    limit?: number
  }

  /**
   * Reportes updateManyAndReturn
   */
  export type ReportesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * The data used to update Reportes.
     */
    data: XOR<ReportesUpdateManyMutationInput, ReportesUncheckedUpdateManyInput>
    /**
     * Filter which Reportes to update
     */
    where?: ReportesWhereInput
    /**
     * Limit how many Reportes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reportes upsert
   */
  export type ReportesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    /**
     * The filter to search for the Reportes to update in case it exists.
     */
    where: ReportesWhereUniqueInput
    /**
     * In case the Reportes found by the `where` argument doesn't exist, create a new Reportes with this data.
     */
    create: XOR<ReportesCreateInput, ReportesUncheckedCreateInput>
    /**
     * In case the Reportes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReportesUpdateInput, ReportesUncheckedUpdateInput>
  }

  /**
   * Reportes delete
   */
  export type ReportesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
    /**
     * Filter which Reportes to delete.
     */
    where: ReportesWhereUniqueInput
  }

  /**
   * Reportes deleteMany
   */
  export type ReportesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reportes to delete
     */
    where?: ReportesWhereInput
    /**
     * Limit how many Reportes to delete.
     */
    limit?: number
  }

  /**
   * Reportes.usuarioReportado
   */
  export type Reportes$usuarioReportadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cuentas
     */
    select?: CuentasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Cuentas
     */
    omit?: CuentasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CuentasInclude<ExtArgs> | null
    where?: CuentasWhereInput
  }

  /**
   * Reportes.producto
   */
  export type Reportes$productoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Productos
     */
    select?: ProductosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Productos
     */
    omit?: ProductosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductosInclude<ExtArgs> | null
    where?: ProductosWhereInput
  }

  /**
   * Reportes without action
   */
  export type ReportesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reportes
     */
    select?: ReportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reportes
     */
    omit?: ReportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportesInclude<ExtArgs> | null
  }


  /**
   * Model ActividadUsuario
   */

  export type AggregateActividadUsuario = {
    _count: ActividadUsuarioCountAggregateOutputType | null
    _avg: ActividadUsuarioAvgAggregateOutputType | null
    _sum: ActividadUsuarioSumAggregateOutputType | null
    _min: ActividadUsuarioMinAggregateOutputType | null
    _max: ActividadUsuarioMaxAggregateOutputType | null
  }

  export type ActividadUsuarioAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type ActividadUsuarioSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type ActividadUsuarioMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    accion: string | null
    detalles: string | null
    fecha: Date | null
  }

  export type ActividadUsuarioMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    accion: string | null
    detalles: string | null
    fecha: Date | null
  }

  export type ActividadUsuarioCountAggregateOutputType = {
    id: number
    usuarioId: number
    accion: number
    detalles: number
    fecha: number
    _all: number
  }


  export type ActividadUsuarioAvgAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type ActividadUsuarioSumAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type ActividadUsuarioMinAggregateInputType = {
    id?: true
    usuarioId?: true
    accion?: true
    detalles?: true
    fecha?: true
  }

  export type ActividadUsuarioMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    accion?: true
    detalles?: true
    fecha?: true
  }

  export type ActividadUsuarioCountAggregateInputType = {
    id?: true
    usuarioId?: true
    accion?: true
    detalles?: true
    fecha?: true
    _all?: true
  }

  export type ActividadUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ActividadUsuario to aggregate.
     */
    where?: ActividadUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ActividadUsuarios to fetch.
     */
    orderBy?: ActividadUsuarioOrderByWithRelationInput | ActividadUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ActividadUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ActividadUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ActividadUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ActividadUsuarios
    **/
    _count?: true | ActividadUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ActividadUsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ActividadUsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ActividadUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ActividadUsuarioMaxAggregateInputType
  }

  export type GetActividadUsuarioAggregateType<T extends ActividadUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateActividadUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActividadUsuario[P]>
      : GetScalarType<T[P], AggregateActividadUsuario[P]>
  }




  export type ActividadUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ActividadUsuarioWhereInput
    orderBy?: ActividadUsuarioOrderByWithAggregationInput | ActividadUsuarioOrderByWithAggregationInput[]
    by: ActividadUsuarioScalarFieldEnum[] | ActividadUsuarioScalarFieldEnum
    having?: ActividadUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ActividadUsuarioCountAggregateInputType | true
    _avg?: ActividadUsuarioAvgAggregateInputType
    _sum?: ActividadUsuarioSumAggregateInputType
    _min?: ActividadUsuarioMinAggregateInputType
    _max?: ActividadUsuarioMaxAggregateInputType
  }

  export type ActividadUsuarioGroupByOutputType = {
    id: number
    usuarioId: number
    accion: string | null
    detalles: string | null
    fecha: Date
    _count: ActividadUsuarioCountAggregateOutputType | null
    _avg: ActividadUsuarioAvgAggregateOutputType | null
    _sum: ActividadUsuarioSumAggregateOutputType | null
    _min: ActividadUsuarioMinAggregateOutputType | null
    _max: ActividadUsuarioMaxAggregateOutputType | null
  }

  type GetActividadUsuarioGroupByPayload<T extends ActividadUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ActividadUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ActividadUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ActividadUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], ActividadUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type ActividadUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    accion?: boolean
    detalles?: boolean
    fecha?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["actividadUsuario"]>

  export type ActividadUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    accion?: boolean
    detalles?: boolean
    fecha?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["actividadUsuario"]>

  export type ActividadUsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    accion?: boolean
    detalles?: boolean
    fecha?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["actividadUsuario"]>

  export type ActividadUsuarioSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    accion?: boolean
    detalles?: boolean
    fecha?: boolean
  }

  export type ActividadUsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuarioId" | "accion" | "detalles" | "fecha", ExtArgs["result"]["actividadUsuario"]>
  export type ActividadUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type ActividadUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type ActividadUsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $ActividadUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ActividadUsuario"
    objects: {
      usuario: Prisma.$CuentasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      accion: string | null
      detalles: string | null
      fecha: Date
    }, ExtArgs["result"]["actividadUsuario"]>
    composites: {}
  }

  type ActividadUsuarioGetPayload<S extends boolean | null | undefined | ActividadUsuarioDefaultArgs> = $Result.GetResult<Prisma.$ActividadUsuarioPayload, S>

  type ActividadUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ActividadUsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ActividadUsuarioCountAggregateInputType | true
    }

  export interface ActividadUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ActividadUsuario'], meta: { name: 'ActividadUsuario' } }
    /**
     * Find zero or one ActividadUsuario that matches the filter.
     * @param {ActividadUsuarioFindUniqueArgs} args - Arguments to find a ActividadUsuario
     * @example
     * // Get one ActividadUsuario
     * const actividadUsuario = await prisma.actividadUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ActividadUsuarioFindUniqueArgs>(args: SelectSubset<T, ActividadUsuarioFindUniqueArgs<ExtArgs>>): Prisma__ActividadUsuarioClient<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ActividadUsuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ActividadUsuarioFindUniqueOrThrowArgs} args - Arguments to find a ActividadUsuario
     * @example
     * // Get one ActividadUsuario
     * const actividadUsuario = await prisma.actividadUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ActividadUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, ActividadUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ActividadUsuarioClient<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ActividadUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadUsuarioFindFirstArgs} args - Arguments to find a ActividadUsuario
     * @example
     * // Get one ActividadUsuario
     * const actividadUsuario = await prisma.actividadUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ActividadUsuarioFindFirstArgs>(args?: SelectSubset<T, ActividadUsuarioFindFirstArgs<ExtArgs>>): Prisma__ActividadUsuarioClient<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ActividadUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadUsuarioFindFirstOrThrowArgs} args - Arguments to find a ActividadUsuario
     * @example
     * // Get one ActividadUsuario
     * const actividadUsuario = await prisma.actividadUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ActividadUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, ActividadUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__ActividadUsuarioClient<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ActividadUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ActividadUsuarios
     * const actividadUsuarios = await prisma.actividadUsuario.findMany()
     * 
     * // Get first 10 ActividadUsuarios
     * const actividadUsuarios = await prisma.actividadUsuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const actividadUsuarioWithIdOnly = await prisma.actividadUsuario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ActividadUsuarioFindManyArgs>(args?: SelectSubset<T, ActividadUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ActividadUsuario.
     * @param {ActividadUsuarioCreateArgs} args - Arguments to create a ActividadUsuario.
     * @example
     * // Create one ActividadUsuario
     * const ActividadUsuario = await prisma.actividadUsuario.create({
     *   data: {
     *     // ... data to create a ActividadUsuario
     *   }
     * })
     * 
     */
    create<T extends ActividadUsuarioCreateArgs>(args: SelectSubset<T, ActividadUsuarioCreateArgs<ExtArgs>>): Prisma__ActividadUsuarioClient<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ActividadUsuarios.
     * @param {ActividadUsuarioCreateManyArgs} args - Arguments to create many ActividadUsuarios.
     * @example
     * // Create many ActividadUsuarios
     * const actividadUsuario = await prisma.actividadUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ActividadUsuarioCreateManyArgs>(args?: SelectSubset<T, ActividadUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ActividadUsuarios and returns the data saved in the database.
     * @param {ActividadUsuarioCreateManyAndReturnArgs} args - Arguments to create many ActividadUsuarios.
     * @example
     * // Create many ActividadUsuarios
     * const actividadUsuario = await prisma.actividadUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ActividadUsuarios and only return the `id`
     * const actividadUsuarioWithIdOnly = await prisma.actividadUsuario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ActividadUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, ActividadUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ActividadUsuario.
     * @param {ActividadUsuarioDeleteArgs} args - Arguments to delete one ActividadUsuario.
     * @example
     * // Delete one ActividadUsuario
     * const ActividadUsuario = await prisma.actividadUsuario.delete({
     *   where: {
     *     // ... filter to delete one ActividadUsuario
     *   }
     * })
     * 
     */
    delete<T extends ActividadUsuarioDeleteArgs>(args: SelectSubset<T, ActividadUsuarioDeleteArgs<ExtArgs>>): Prisma__ActividadUsuarioClient<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ActividadUsuario.
     * @param {ActividadUsuarioUpdateArgs} args - Arguments to update one ActividadUsuario.
     * @example
     * // Update one ActividadUsuario
     * const actividadUsuario = await prisma.actividadUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ActividadUsuarioUpdateArgs>(args: SelectSubset<T, ActividadUsuarioUpdateArgs<ExtArgs>>): Prisma__ActividadUsuarioClient<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ActividadUsuarios.
     * @param {ActividadUsuarioDeleteManyArgs} args - Arguments to filter ActividadUsuarios to delete.
     * @example
     * // Delete a few ActividadUsuarios
     * const { count } = await prisma.actividadUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ActividadUsuarioDeleteManyArgs>(args?: SelectSubset<T, ActividadUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ActividadUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ActividadUsuarios
     * const actividadUsuario = await prisma.actividadUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ActividadUsuarioUpdateManyArgs>(args: SelectSubset<T, ActividadUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ActividadUsuarios and returns the data updated in the database.
     * @param {ActividadUsuarioUpdateManyAndReturnArgs} args - Arguments to update many ActividadUsuarios.
     * @example
     * // Update many ActividadUsuarios
     * const actividadUsuario = await prisma.actividadUsuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ActividadUsuarios and only return the `id`
     * const actividadUsuarioWithIdOnly = await prisma.actividadUsuario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ActividadUsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, ActividadUsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ActividadUsuario.
     * @param {ActividadUsuarioUpsertArgs} args - Arguments to update or create a ActividadUsuario.
     * @example
     * // Update or create a ActividadUsuario
     * const actividadUsuario = await prisma.actividadUsuario.upsert({
     *   create: {
     *     // ... data to create a ActividadUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ActividadUsuario we want to update
     *   }
     * })
     */
    upsert<T extends ActividadUsuarioUpsertArgs>(args: SelectSubset<T, ActividadUsuarioUpsertArgs<ExtArgs>>): Prisma__ActividadUsuarioClient<$Result.GetResult<Prisma.$ActividadUsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ActividadUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadUsuarioCountArgs} args - Arguments to filter ActividadUsuarios to count.
     * @example
     * // Count the number of ActividadUsuarios
     * const count = await prisma.actividadUsuario.count({
     *   where: {
     *     // ... the filter for the ActividadUsuarios we want to count
     *   }
     * })
    **/
    count<T extends ActividadUsuarioCountArgs>(
      args?: Subset<T, ActividadUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ActividadUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ActividadUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ActividadUsuarioAggregateArgs>(args: Subset<T, ActividadUsuarioAggregateArgs>): Prisma.PrismaPromise<GetActividadUsuarioAggregateType<T>>

    /**
     * Group by ActividadUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ActividadUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ActividadUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ActividadUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: ActividadUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ActividadUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActividadUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ActividadUsuario model
   */
  readonly fields: ActividadUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ActividadUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ActividadUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ActividadUsuario model
   */
  interface ActividadUsuarioFieldRefs {
    readonly id: FieldRef<"ActividadUsuario", 'Int'>
    readonly usuarioId: FieldRef<"ActividadUsuario", 'Int'>
    readonly accion: FieldRef<"ActividadUsuario", 'String'>
    readonly detalles: FieldRef<"ActividadUsuario", 'String'>
    readonly fecha: FieldRef<"ActividadUsuario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ActividadUsuario findUnique
   */
  export type ActividadUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ActividadUsuario to fetch.
     */
    where: ActividadUsuarioWhereUniqueInput
  }

  /**
   * ActividadUsuario findUniqueOrThrow
   */
  export type ActividadUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ActividadUsuario to fetch.
     */
    where: ActividadUsuarioWhereUniqueInput
  }

  /**
   * ActividadUsuario findFirst
   */
  export type ActividadUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ActividadUsuario to fetch.
     */
    where?: ActividadUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ActividadUsuarios to fetch.
     */
    orderBy?: ActividadUsuarioOrderByWithRelationInput | ActividadUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ActividadUsuarios.
     */
    cursor?: ActividadUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ActividadUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ActividadUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ActividadUsuarios.
     */
    distinct?: ActividadUsuarioScalarFieldEnum | ActividadUsuarioScalarFieldEnum[]
  }

  /**
   * ActividadUsuario findFirstOrThrow
   */
  export type ActividadUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ActividadUsuario to fetch.
     */
    where?: ActividadUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ActividadUsuarios to fetch.
     */
    orderBy?: ActividadUsuarioOrderByWithRelationInput | ActividadUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ActividadUsuarios.
     */
    cursor?: ActividadUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ActividadUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ActividadUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ActividadUsuarios.
     */
    distinct?: ActividadUsuarioScalarFieldEnum | ActividadUsuarioScalarFieldEnum[]
  }

  /**
   * ActividadUsuario findMany
   */
  export type ActividadUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ActividadUsuarios to fetch.
     */
    where?: ActividadUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ActividadUsuarios to fetch.
     */
    orderBy?: ActividadUsuarioOrderByWithRelationInput | ActividadUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ActividadUsuarios.
     */
    cursor?: ActividadUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ActividadUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ActividadUsuarios.
     */
    skip?: number
    distinct?: ActividadUsuarioScalarFieldEnum | ActividadUsuarioScalarFieldEnum[]
  }

  /**
   * ActividadUsuario create
   */
  export type ActividadUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a ActividadUsuario.
     */
    data: XOR<ActividadUsuarioCreateInput, ActividadUsuarioUncheckedCreateInput>
  }

  /**
   * ActividadUsuario createMany
   */
  export type ActividadUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ActividadUsuarios.
     */
    data: ActividadUsuarioCreateManyInput | ActividadUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ActividadUsuario createManyAndReturn
   */
  export type ActividadUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many ActividadUsuarios.
     */
    data: ActividadUsuarioCreateManyInput | ActividadUsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ActividadUsuario update
   */
  export type ActividadUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a ActividadUsuario.
     */
    data: XOR<ActividadUsuarioUpdateInput, ActividadUsuarioUncheckedUpdateInput>
    /**
     * Choose, which ActividadUsuario to update.
     */
    where: ActividadUsuarioWhereUniqueInput
  }

  /**
   * ActividadUsuario updateMany
   */
  export type ActividadUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ActividadUsuarios.
     */
    data: XOR<ActividadUsuarioUpdateManyMutationInput, ActividadUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which ActividadUsuarios to update
     */
    where?: ActividadUsuarioWhereInput
    /**
     * Limit how many ActividadUsuarios to update.
     */
    limit?: number
  }

  /**
   * ActividadUsuario updateManyAndReturn
   */
  export type ActividadUsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * The data used to update ActividadUsuarios.
     */
    data: XOR<ActividadUsuarioUpdateManyMutationInput, ActividadUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which ActividadUsuarios to update
     */
    where?: ActividadUsuarioWhereInput
    /**
     * Limit how many ActividadUsuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ActividadUsuario upsert
   */
  export type ActividadUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the ActividadUsuario to update in case it exists.
     */
    where: ActividadUsuarioWhereUniqueInput
    /**
     * In case the ActividadUsuario found by the `where` argument doesn't exist, create a new ActividadUsuario with this data.
     */
    create: XOR<ActividadUsuarioCreateInput, ActividadUsuarioUncheckedCreateInput>
    /**
     * In case the ActividadUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ActividadUsuarioUpdateInput, ActividadUsuarioUncheckedUpdateInput>
  }

  /**
   * ActividadUsuario delete
   */
  export type ActividadUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
    /**
     * Filter which ActividadUsuario to delete.
     */
    where: ActividadUsuarioWhereUniqueInput
  }

  /**
   * ActividadUsuario deleteMany
   */
  export type ActividadUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ActividadUsuarios to delete
     */
    where?: ActividadUsuarioWhereInput
    /**
     * Limit how many ActividadUsuarios to delete.
     */
    limit?: number
  }

  /**
   * ActividadUsuario without action
   */
  export type ActividadUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ActividadUsuario
     */
    select?: ActividadUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ActividadUsuario
     */
    omit?: ActividadUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ActividadUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Notificaciones
   */

  export type AggregateNotificaciones = {
    _count: NotificacionesCountAggregateOutputType | null
    _avg: NotificacionesAvgAggregateOutputType | null
    _sum: NotificacionesSumAggregateOutputType | null
    _min: NotificacionesMinAggregateOutputType | null
    _max: NotificacionesMaxAggregateOutputType | null
  }

  export type NotificacionesAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type NotificacionesSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type NotificacionesMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    tipo: string | null
    mensaje: string | null
    leido: boolean | null
    fecha: Date | null
  }

  export type NotificacionesMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    tipo: string | null
    mensaje: string | null
    leido: boolean | null
    fecha: Date | null
  }

  export type NotificacionesCountAggregateOutputType = {
    id: number
    usuarioId: number
    tipo: number
    mensaje: number
    leido: number
    fecha: number
    _all: number
  }


  export type NotificacionesAvgAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type NotificacionesSumAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type NotificacionesMinAggregateInputType = {
    id?: true
    usuarioId?: true
    tipo?: true
    mensaje?: true
    leido?: true
    fecha?: true
  }

  export type NotificacionesMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    tipo?: true
    mensaje?: true
    leido?: true
    fecha?: true
  }

  export type NotificacionesCountAggregateInputType = {
    id?: true
    usuarioId?: true
    tipo?: true
    mensaje?: true
    leido?: true
    fecha?: true
    _all?: true
  }

  export type NotificacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificaciones to aggregate.
     */
    where?: NotificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificaciones to fetch.
     */
    orderBy?: NotificacionesOrderByWithRelationInput | NotificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notificaciones
    **/
    _count?: true | NotificacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificacionesMaxAggregateInputType
  }

  export type GetNotificacionesAggregateType<T extends NotificacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateNotificaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotificaciones[P]>
      : GetScalarType<T[P], AggregateNotificaciones[P]>
  }




  export type NotificacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificacionesWhereInput
    orderBy?: NotificacionesOrderByWithAggregationInput | NotificacionesOrderByWithAggregationInput[]
    by: NotificacionesScalarFieldEnum[] | NotificacionesScalarFieldEnum
    having?: NotificacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificacionesCountAggregateInputType | true
    _avg?: NotificacionesAvgAggregateInputType
    _sum?: NotificacionesSumAggregateInputType
    _min?: NotificacionesMinAggregateInputType
    _max?: NotificacionesMaxAggregateInputType
  }

  export type NotificacionesGroupByOutputType = {
    id: number
    usuarioId: number
    tipo: string | null
    mensaje: string | null
    leido: boolean
    fecha: Date
    _count: NotificacionesCountAggregateOutputType | null
    _avg: NotificacionesAvgAggregateOutputType | null
    _sum: NotificacionesSumAggregateOutputType | null
    _min: NotificacionesMinAggregateOutputType | null
    _max: NotificacionesMaxAggregateOutputType | null
  }

  type GetNotificacionesGroupByPayload<T extends NotificacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificacionesGroupByOutputType[P]>
            : GetScalarType<T[P], NotificacionesGroupByOutputType[P]>
        }
      >
    >


  export type NotificacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    tipo?: boolean
    mensaje?: boolean
    leido?: boolean
    fecha?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificaciones"]>

  export type NotificacionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    tipo?: boolean
    mensaje?: boolean
    leido?: boolean
    fecha?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificaciones"]>

  export type NotificacionesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    tipo?: boolean
    mensaje?: boolean
    leido?: boolean
    fecha?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notificaciones"]>

  export type NotificacionesSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    tipo?: boolean
    mensaje?: boolean
    leido?: boolean
    fecha?: boolean
  }

  export type NotificacionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuarioId" | "tipo" | "mensaje" | "leido" | "fecha", ExtArgs["result"]["notificaciones"]>
  export type NotificacionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type NotificacionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type NotificacionesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $NotificacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notificaciones"
    objects: {
      usuario: Prisma.$CuentasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      tipo: string | null
      mensaje: string | null
      leido: boolean
      fecha: Date
    }, ExtArgs["result"]["notificaciones"]>
    composites: {}
  }

  type NotificacionesGetPayload<S extends boolean | null | undefined | NotificacionesDefaultArgs> = $Result.GetResult<Prisma.$NotificacionesPayload, S>

  type NotificacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificacionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificacionesCountAggregateInputType | true
    }

  export interface NotificacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notificaciones'], meta: { name: 'Notificaciones' } }
    /**
     * Find zero or one Notificaciones that matches the filter.
     * @param {NotificacionesFindUniqueArgs} args - Arguments to find a Notificaciones
     * @example
     * // Get one Notificaciones
     * const notificaciones = await prisma.notificaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificacionesFindUniqueArgs>(args: SelectSubset<T, NotificacionesFindUniqueArgs<ExtArgs>>): Prisma__NotificacionesClient<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notificaciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificacionesFindUniqueOrThrowArgs} args - Arguments to find a Notificaciones
     * @example
     * // Get one Notificaciones
     * const notificaciones = await prisma.notificaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificacionesFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificacionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificacionesClient<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notificaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesFindFirstArgs} args - Arguments to find a Notificaciones
     * @example
     * // Get one Notificaciones
     * const notificaciones = await prisma.notificaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificacionesFindFirstArgs>(args?: SelectSubset<T, NotificacionesFindFirstArgs<ExtArgs>>): Prisma__NotificacionesClient<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notificaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesFindFirstOrThrowArgs} args - Arguments to find a Notificaciones
     * @example
     * // Get one Notificaciones
     * const notificaciones = await prisma.notificaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificacionesFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificacionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificacionesClient<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notificaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notificaciones
     * const notificaciones = await prisma.notificaciones.findMany()
     * 
     * // Get first 10 Notificaciones
     * const notificaciones = await prisma.notificaciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificacionesWithIdOnly = await prisma.notificaciones.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificacionesFindManyArgs>(args?: SelectSubset<T, NotificacionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notificaciones.
     * @param {NotificacionesCreateArgs} args - Arguments to create a Notificaciones.
     * @example
     * // Create one Notificaciones
     * const Notificaciones = await prisma.notificaciones.create({
     *   data: {
     *     // ... data to create a Notificaciones
     *   }
     * })
     * 
     */
    create<T extends NotificacionesCreateArgs>(args: SelectSubset<T, NotificacionesCreateArgs<ExtArgs>>): Prisma__NotificacionesClient<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notificaciones.
     * @param {NotificacionesCreateManyArgs} args - Arguments to create many Notificaciones.
     * @example
     * // Create many Notificaciones
     * const notificaciones = await prisma.notificaciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificacionesCreateManyArgs>(args?: SelectSubset<T, NotificacionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notificaciones and returns the data saved in the database.
     * @param {NotificacionesCreateManyAndReturnArgs} args - Arguments to create many Notificaciones.
     * @example
     * // Create many Notificaciones
     * const notificaciones = await prisma.notificaciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notificaciones and only return the `id`
     * const notificacionesWithIdOnly = await prisma.notificaciones.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificacionesCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificacionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notificaciones.
     * @param {NotificacionesDeleteArgs} args - Arguments to delete one Notificaciones.
     * @example
     * // Delete one Notificaciones
     * const Notificaciones = await prisma.notificaciones.delete({
     *   where: {
     *     // ... filter to delete one Notificaciones
     *   }
     * })
     * 
     */
    delete<T extends NotificacionesDeleteArgs>(args: SelectSubset<T, NotificacionesDeleteArgs<ExtArgs>>): Prisma__NotificacionesClient<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notificaciones.
     * @param {NotificacionesUpdateArgs} args - Arguments to update one Notificaciones.
     * @example
     * // Update one Notificaciones
     * const notificaciones = await prisma.notificaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificacionesUpdateArgs>(args: SelectSubset<T, NotificacionesUpdateArgs<ExtArgs>>): Prisma__NotificacionesClient<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notificaciones.
     * @param {NotificacionesDeleteManyArgs} args - Arguments to filter Notificaciones to delete.
     * @example
     * // Delete a few Notificaciones
     * const { count } = await prisma.notificaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificacionesDeleteManyArgs>(args?: SelectSubset<T, NotificacionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notificaciones
     * const notificaciones = await prisma.notificaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificacionesUpdateManyArgs>(args: SelectSubset<T, NotificacionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notificaciones and returns the data updated in the database.
     * @param {NotificacionesUpdateManyAndReturnArgs} args - Arguments to update many Notificaciones.
     * @example
     * // Update many Notificaciones
     * const notificaciones = await prisma.notificaciones.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notificaciones and only return the `id`
     * const notificacionesWithIdOnly = await prisma.notificaciones.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificacionesUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificacionesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notificaciones.
     * @param {NotificacionesUpsertArgs} args - Arguments to update or create a Notificaciones.
     * @example
     * // Update or create a Notificaciones
     * const notificaciones = await prisma.notificaciones.upsert({
     *   create: {
     *     // ... data to create a Notificaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notificaciones we want to update
     *   }
     * })
     */
    upsert<T extends NotificacionesUpsertArgs>(args: SelectSubset<T, NotificacionesUpsertArgs<ExtArgs>>): Prisma__NotificacionesClient<$Result.GetResult<Prisma.$NotificacionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesCountArgs} args - Arguments to filter Notificaciones to count.
     * @example
     * // Count the number of Notificaciones
     * const count = await prisma.notificaciones.count({
     *   where: {
     *     // ... the filter for the Notificaciones we want to count
     *   }
     * })
    **/
    count<T extends NotificacionesCountArgs>(
      args?: Subset<T, NotificacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificacionesAggregateArgs>(args: Subset<T, NotificacionesAggregateArgs>): Prisma.PrismaPromise<GetNotificacionesAggregateType<T>>

    /**
     * Group by Notificaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificacionesGroupByArgs['orderBy'] }
        : { orderBy?: NotificacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notificaciones model
   */
  readonly fields: NotificacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notificaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notificaciones model
   */
  interface NotificacionesFieldRefs {
    readonly id: FieldRef<"Notificaciones", 'Int'>
    readonly usuarioId: FieldRef<"Notificaciones", 'Int'>
    readonly tipo: FieldRef<"Notificaciones", 'String'>
    readonly mensaje: FieldRef<"Notificaciones", 'String'>
    readonly leido: FieldRef<"Notificaciones", 'Boolean'>
    readonly fecha: FieldRef<"Notificaciones", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notificaciones findUnique
   */
  export type NotificacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
    /**
     * Filter, which Notificaciones to fetch.
     */
    where: NotificacionesWhereUniqueInput
  }

  /**
   * Notificaciones findUniqueOrThrow
   */
  export type NotificacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
    /**
     * Filter, which Notificaciones to fetch.
     */
    where: NotificacionesWhereUniqueInput
  }

  /**
   * Notificaciones findFirst
   */
  export type NotificacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
    /**
     * Filter, which Notificaciones to fetch.
     */
    where?: NotificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificaciones to fetch.
     */
    orderBy?: NotificacionesOrderByWithRelationInput | NotificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificaciones.
     */
    cursor?: NotificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificaciones.
     */
    distinct?: NotificacionesScalarFieldEnum | NotificacionesScalarFieldEnum[]
  }

  /**
   * Notificaciones findFirstOrThrow
   */
  export type NotificacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
    /**
     * Filter, which Notificaciones to fetch.
     */
    where?: NotificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificaciones to fetch.
     */
    orderBy?: NotificacionesOrderByWithRelationInput | NotificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notificaciones.
     */
    cursor?: NotificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notificaciones.
     */
    distinct?: NotificacionesScalarFieldEnum | NotificacionesScalarFieldEnum[]
  }

  /**
   * Notificaciones findMany
   */
  export type NotificacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
    /**
     * Filter, which Notificaciones to fetch.
     */
    where?: NotificacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notificaciones to fetch.
     */
    orderBy?: NotificacionesOrderByWithRelationInput | NotificacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notificaciones.
     */
    cursor?: NotificacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notificaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notificaciones.
     */
    skip?: number
    distinct?: NotificacionesScalarFieldEnum | NotificacionesScalarFieldEnum[]
  }

  /**
   * Notificaciones create
   */
  export type NotificacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
    /**
     * The data needed to create a Notificaciones.
     */
    data: XOR<NotificacionesCreateInput, NotificacionesUncheckedCreateInput>
  }

  /**
   * Notificaciones createMany
   */
  export type NotificacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notificaciones.
     */
    data: NotificacionesCreateManyInput | NotificacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notificaciones createManyAndReturn
   */
  export type NotificacionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * The data used to create many Notificaciones.
     */
    data: NotificacionesCreateManyInput | NotificacionesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notificaciones update
   */
  export type NotificacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
    /**
     * The data needed to update a Notificaciones.
     */
    data: XOR<NotificacionesUpdateInput, NotificacionesUncheckedUpdateInput>
    /**
     * Choose, which Notificaciones to update.
     */
    where: NotificacionesWhereUniqueInput
  }

  /**
   * Notificaciones updateMany
   */
  export type NotificacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notificaciones.
     */
    data: XOR<NotificacionesUpdateManyMutationInput, NotificacionesUncheckedUpdateManyInput>
    /**
     * Filter which Notificaciones to update
     */
    where?: NotificacionesWhereInput
    /**
     * Limit how many Notificaciones to update.
     */
    limit?: number
  }

  /**
   * Notificaciones updateManyAndReturn
   */
  export type NotificacionesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * The data used to update Notificaciones.
     */
    data: XOR<NotificacionesUpdateManyMutationInput, NotificacionesUncheckedUpdateManyInput>
    /**
     * Filter which Notificaciones to update
     */
    where?: NotificacionesWhereInput
    /**
     * Limit how many Notificaciones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notificaciones upsert
   */
  export type NotificacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
    /**
     * The filter to search for the Notificaciones to update in case it exists.
     */
    where: NotificacionesWhereUniqueInput
    /**
     * In case the Notificaciones found by the `where` argument doesn't exist, create a new Notificaciones with this data.
     */
    create: XOR<NotificacionesCreateInput, NotificacionesUncheckedCreateInput>
    /**
     * In case the Notificaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificacionesUpdateInput, NotificacionesUncheckedUpdateInput>
  }

  /**
   * Notificaciones delete
   */
  export type NotificacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
    /**
     * Filter which Notificaciones to delete.
     */
    where: NotificacionesWhereUniqueInput
  }

  /**
   * Notificaciones deleteMany
   */
  export type NotificacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notificaciones to delete
     */
    where?: NotificacionesWhereInput
    /**
     * Limit how many Notificaciones to delete.
     */
    limit?: number
  }

  /**
   * Notificaciones without action
   */
  export type NotificacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notificaciones
     */
    select?: NotificacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notificaciones
     */
    omit?: NotificacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificacionesInclude<ExtArgs> | null
  }


  /**
   * Model Publicaciones
   */

  export type AggregatePublicaciones = {
    _count: PublicacionesCountAggregateOutputType | null
    _avg: PublicacionesAvgAggregateOutputType | null
    _sum: PublicacionesSumAggregateOutputType | null
    _min: PublicacionesMinAggregateOutputType | null
    _max: PublicacionesMaxAggregateOutputType | null
  }

  export type PublicacionesAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type PublicacionesSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type PublicacionesMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    cuerpo: string | null
    usuarioId: number | null
    estado: string | null
    fecha: Date | null
    visto: boolean | null
  }

  export type PublicacionesMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    cuerpo: string | null
    usuarioId: number | null
    estado: string | null
    fecha: Date | null
    visto: boolean | null
  }

  export type PublicacionesCountAggregateOutputType = {
    id: number
    titulo: number
    cuerpo: number
    usuarioId: number
    estado: number
    fecha: number
    visto: number
    _all: number
  }


  export type PublicacionesAvgAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type PublicacionesSumAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type PublicacionesMinAggregateInputType = {
    id?: true
    titulo?: true
    cuerpo?: true
    usuarioId?: true
    estado?: true
    fecha?: true
    visto?: true
  }

  export type PublicacionesMaxAggregateInputType = {
    id?: true
    titulo?: true
    cuerpo?: true
    usuarioId?: true
    estado?: true
    fecha?: true
    visto?: true
  }

  export type PublicacionesCountAggregateInputType = {
    id?: true
    titulo?: true
    cuerpo?: true
    usuarioId?: true
    estado?: true
    fecha?: true
    visto?: true
    _all?: true
  }

  export type PublicacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Publicaciones to aggregate.
     */
    where?: PublicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones to fetch.
     */
    orderBy?: PublicacionesOrderByWithRelationInput | PublicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PublicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Publicaciones
    **/
    _count?: true | PublicacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PublicacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PublicacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PublicacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PublicacionesMaxAggregateInputType
  }

  export type GetPublicacionesAggregateType<T extends PublicacionesAggregateArgs> = {
        [P in keyof T & keyof AggregatePublicaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePublicaciones[P]>
      : GetScalarType<T[P], AggregatePublicaciones[P]>
  }




  export type PublicacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionesWhereInput
    orderBy?: PublicacionesOrderByWithAggregationInput | PublicacionesOrderByWithAggregationInput[]
    by: PublicacionesScalarFieldEnum[] | PublicacionesScalarFieldEnum
    having?: PublicacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PublicacionesCountAggregateInputType | true
    _avg?: PublicacionesAvgAggregateInputType
    _sum?: PublicacionesSumAggregateInputType
    _min?: PublicacionesMinAggregateInputType
    _max?: PublicacionesMaxAggregateInputType
  }

  export type PublicacionesGroupByOutputType = {
    id: number
    titulo: string | null
    cuerpo: string | null
    usuarioId: number
    estado: string | null
    fecha: Date
    visto: boolean
    _count: PublicacionesCountAggregateOutputType | null
    _avg: PublicacionesAvgAggregateOutputType | null
    _sum: PublicacionesSumAggregateOutputType | null
    _min: PublicacionesMinAggregateOutputType | null
    _max: PublicacionesMaxAggregateOutputType | null
  }

  type GetPublicacionesGroupByPayload<T extends PublicacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PublicacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PublicacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PublicacionesGroupByOutputType[P]>
            : GetScalarType<T[P], PublicacionesGroupByOutputType[P]>
        }
      >
    >


  export type PublicacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    cuerpo?: boolean
    usuarioId?: boolean
    estado?: boolean
    fecha?: boolean
    visto?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    favoritos?: boolean | Publicaciones$favoritosArgs<ExtArgs>
    _count?: boolean | PublicacionesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicaciones"]>

  export type PublicacionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    cuerpo?: boolean
    usuarioId?: boolean
    estado?: boolean
    fecha?: boolean
    visto?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicaciones"]>

  export type PublicacionesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    cuerpo?: boolean
    usuarioId?: boolean
    estado?: boolean
    fecha?: boolean
    visto?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicaciones"]>

  export type PublicacionesSelectScalar = {
    id?: boolean
    titulo?: boolean
    cuerpo?: boolean
    usuarioId?: boolean
    estado?: boolean
    fecha?: boolean
    visto?: boolean
  }

  export type PublicacionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "cuerpo" | "usuarioId" | "estado" | "fecha" | "visto", ExtArgs["result"]["publicaciones"]>
  export type PublicacionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    favoritos?: boolean | Publicaciones$favoritosArgs<ExtArgs>
    _count?: boolean | PublicacionesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PublicacionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type PublicacionesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $PublicacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Publicaciones"
    objects: {
      usuario: Prisma.$CuentasPayload<ExtArgs>
      favoritos: Prisma.$FavoritosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string | null
      cuerpo: string | null
      usuarioId: number
      estado: string | null
      fecha: Date
      visto: boolean
    }, ExtArgs["result"]["publicaciones"]>
    composites: {}
  }

  type PublicacionesGetPayload<S extends boolean | null | undefined | PublicacionesDefaultArgs> = $Result.GetResult<Prisma.$PublicacionesPayload, S>

  type PublicacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PublicacionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PublicacionesCountAggregateInputType | true
    }

  export interface PublicacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Publicaciones'], meta: { name: 'Publicaciones' } }
    /**
     * Find zero or one Publicaciones that matches the filter.
     * @param {PublicacionesFindUniqueArgs} args - Arguments to find a Publicaciones
     * @example
     * // Get one Publicaciones
     * const publicaciones = await prisma.publicaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PublicacionesFindUniqueArgs>(args: SelectSubset<T, PublicacionesFindUniqueArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Publicaciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PublicacionesFindUniqueOrThrowArgs} args - Arguments to find a Publicaciones
     * @example
     * // Get one Publicaciones
     * const publicaciones = await prisma.publicaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PublicacionesFindUniqueOrThrowArgs>(args: SelectSubset<T, PublicacionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Publicaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesFindFirstArgs} args - Arguments to find a Publicaciones
     * @example
     * // Get one Publicaciones
     * const publicaciones = await prisma.publicaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PublicacionesFindFirstArgs>(args?: SelectSubset<T, PublicacionesFindFirstArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Publicaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesFindFirstOrThrowArgs} args - Arguments to find a Publicaciones
     * @example
     * // Get one Publicaciones
     * const publicaciones = await prisma.publicaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PublicacionesFindFirstOrThrowArgs>(args?: SelectSubset<T, PublicacionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Publicaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Publicaciones
     * const publicaciones = await prisma.publicaciones.findMany()
     * 
     * // Get first 10 Publicaciones
     * const publicaciones = await prisma.publicaciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const publicacionesWithIdOnly = await prisma.publicaciones.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PublicacionesFindManyArgs>(args?: SelectSubset<T, PublicacionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Publicaciones.
     * @param {PublicacionesCreateArgs} args - Arguments to create a Publicaciones.
     * @example
     * // Create one Publicaciones
     * const Publicaciones = await prisma.publicaciones.create({
     *   data: {
     *     // ... data to create a Publicaciones
     *   }
     * })
     * 
     */
    create<T extends PublicacionesCreateArgs>(args: SelectSubset<T, PublicacionesCreateArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Publicaciones.
     * @param {PublicacionesCreateManyArgs} args - Arguments to create many Publicaciones.
     * @example
     * // Create many Publicaciones
     * const publicaciones = await prisma.publicaciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PublicacionesCreateManyArgs>(args?: SelectSubset<T, PublicacionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Publicaciones and returns the data saved in the database.
     * @param {PublicacionesCreateManyAndReturnArgs} args - Arguments to create many Publicaciones.
     * @example
     * // Create many Publicaciones
     * const publicaciones = await prisma.publicaciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Publicaciones and only return the `id`
     * const publicacionesWithIdOnly = await prisma.publicaciones.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PublicacionesCreateManyAndReturnArgs>(args?: SelectSubset<T, PublicacionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Publicaciones.
     * @param {PublicacionesDeleteArgs} args - Arguments to delete one Publicaciones.
     * @example
     * // Delete one Publicaciones
     * const Publicaciones = await prisma.publicaciones.delete({
     *   where: {
     *     // ... filter to delete one Publicaciones
     *   }
     * })
     * 
     */
    delete<T extends PublicacionesDeleteArgs>(args: SelectSubset<T, PublicacionesDeleteArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Publicaciones.
     * @param {PublicacionesUpdateArgs} args - Arguments to update one Publicaciones.
     * @example
     * // Update one Publicaciones
     * const publicaciones = await prisma.publicaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PublicacionesUpdateArgs>(args: SelectSubset<T, PublicacionesUpdateArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Publicaciones.
     * @param {PublicacionesDeleteManyArgs} args - Arguments to filter Publicaciones to delete.
     * @example
     * // Delete a few Publicaciones
     * const { count } = await prisma.publicaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PublicacionesDeleteManyArgs>(args?: SelectSubset<T, PublicacionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Publicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Publicaciones
     * const publicaciones = await prisma.publicaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PublicacionesUpdateManyArgs>(args: SelectSubset<T, PublicacionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Publicaciones and returns the data updated in the database.
     * @param {PublicacionesUpdateManyAndReturnArgs} args - Arguments to update many Publicaciones.
     * @example
     * // Update many Publicaciones
     * const publicaciones = await prisma.publicaciones.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Publicaciones and only return the `id`
     * const publicacionesWithIdOnly = await prisma.publicaciones.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PublicacionesUpdateManyAndReturnArgs>(args: SelectSubset<T, PublicacionesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Publicaciones.
     * @param {PublicacionesUpsertArgs} args - Arguments to update or create a Publicaciones.
     * @example
     * // Update or create a Publicaciones
     * const publicaciones = await prisma.publicaciones.upsert({
     *   create: {
     *     // ... data to create a Publicaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Publicaciones we want to update
     *   }
     * })
     */
    upsert<T extends PublicacionesUpsertArgs>(args: SelectSubset<T, PublicacionesUpsertArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Publicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesCountArgs} args - Arguments to filter Publicaciones to count.
     * @example
     * // Count the number of Publicaciones
     * const count = await prisma.publicaciones.count({
     *   where: {
     *     // ... the filter for the Publicaciones we want to count
     *   }
     * })
    **/
    count<T extends PublicacionesCountArgs>(
      args?: Subset<T, PublicacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PublicacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Publicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PublicacionesAggregateArgs>(args: Subset<T, PublicacionesAggregateArgs>): Prisma.PrismaPromise<GetPublicacionesAggregateType<T>>

    /**
     * Group by Publicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PublicacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PublicacionesGroupByArgs['orderBy'] }
        : { orderBy?: PublicacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PublicacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPublicacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Publicaciones model
   */
  readonly fields: PublicacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Publicaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PublicacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    favoritos<T extends Publicaciones$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, Publicaciones$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Publicaciones model
   */
  interface PublicacionesFieldRefs {
    readonly id: FieldRef<"Publicaciones", 'Int'>
    readonly titulo: FieldRef<"Publicaciones", 'String'>
    readonly cuerpo: FieldRef<"Publicaciones", 'String'>
    readonly usuarioId: FieldRef<"Publicaciones", 'Int'>
    readonly estado: FieldRef<"Publicaciones", 'String'>
    readonly fecha: FieldRef<"Publicaciones", 'DateTime'>
    readonly visto: FieldRef<"Publicaciones", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Publicaciones findUnique
   */
  export type PublicacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones to fetch.
     */
    where: PublicacionesWhereUniqueInput
  }

  /**
   * Publicaciones findUniqueOrThrow
   */
  export type PublicacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones to fetch.
     */
    where: PublicacionesWhereUniqueInput
  }

  /**
   * Publicaciones findFirst
   */
  export type PublicacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones to fetch.
     */
    where?: PublicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones to fetch.
     */
    orderBy?: PublicacionesOrderByWithRelationInput | PublicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Publicaciones.
     */
    cursor?: PublicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Publicaciones.
     */
    distinct?: PublicacionesScalarFieldEnum | PublicacionesScalarFieldEnum[]
  }

  /**
   * Publicaciones findFirstOrThrow
   */
  export type PublicacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones to fetch.
     */
    where?: PublicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones to fetch.
     */
    orderBy?: PublicacionesOrderByWithRelationInput | PublicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Publicaciones.
     */
    cursor?: PublicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Publicaciones.
     */
    distinct?: PublicacionesScalarFieldEnum | PublicacionesScalarFieldEnum[]
  }

  /**
   * Publicaciones findMany
   */
  export type PublicacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Publicaciones to fetch.
     */
    where?: PublicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Publicaciones to fetch.
     */
    orderBy?: PublicacionesOrderByWithRelationInput | PublicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Publicaciones.
     */
    cursor?: PublicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Publicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Publicaciones.
     */
    skip?: number
    distinct?: PublicacionesScalarFieldEnum | PublicacionesScalarFieldEnum[]
  }

  /**
   * Publicaciones create
   */
  export type PublicacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * The data needed to create a Publicaciones.
     */
    data: XOR<PublicacionesCreateInput, PublicacionesUncheckedCreateInput>
  }

  /**
   * Publicaciones createMany
   */
  export type PublicacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Publicaciones.
     */
    data: PublicacionesCreateManyInput | PublicacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Publicaciones createManyAndReturn
   */
  export type PublicacionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * The data used to create many Publicaciones.
     */
    data: PublicacionesCreateManyInput | PublicacionesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Publicaciones update
   */
  export type PublicacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * The data needed to update a Publicaciones.
     */
    data: XOR<PublicacionesUpdateInput, PublicacionesUncheckedUpdateInput>
    /**
     * Choose, which Publicaciones to update.
     */
    where: PublicacionesWhereUniqueInput
  }

  /**
   * Publicaciones updateMany
   */
  export type PublicacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Publicaciones.
     */
    data: XOR<PublicacionesUpdateManyMutationInput, PublicacionesUncheckedUpdateManyInput>
    /**
     * Filter which Publicaciones to update
     */
    where?: PublicacionesWhereInput
    /**
     * Limit how many Publicaciones to update.
     */
    limit?: number
  }

  /**
   * Publicaciones updateManyAndReturn
   */
  export type PublicacionesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * The data used to update Publicaciones.
     */
    data: XOR<PublicacionesUpdateManyMutationInput, PublicacionesUncheckedUpdateManyInput>
    /**
     * Filter which Publicaciones to update
     */
    where?: PublicacionesWhereInput
    /**
     * Limit how many Publicaciones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Publicaciones upsert
   */
  export type PublicacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * The filter to search for the Publicaciones to update in case it exists.
     */
    where: PublicacionesWhereUniqueInput
    /**
     * In case the Publicaciones found by the `where` argument doesn't exist, create a new Publicaciones with this data.
     */
    create: XOR<PublicacionesCreateInput, PublicacionesUncheckedCreateInput>
    /**
     * In case the Publicaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PublicacionesUpdateInput, PublicacionesUncheckedUpdateInput>
  }

  /**
   * Publicaciones delete
   */
  export type PublicacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
    /**
     * Filter which Publicaciones to delete.
     */
    where: PublicacionesWhereUniqueInput
  }

  /**
   * Publicaciones deleteMany
   */
  export type PublicacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Publicaciones to delete
     */
    where?: PublicacionesWhereInput
    /**
     * Limit how many Publicaciones to delete.
     */
    limit?: number
  }

  /**
   * Publicaciones.favoritos
   */
  export type Publicaciones$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    where?: FavoritosWhereInput
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    cursor?: FavoritosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * Publicaciones without action
   */
  export type PublicacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Publicaciones
     */
    select?: PublicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Publicaciones
     */
    omit?: PublicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesInclude<ExtArgs> | null
  }


  /**
   * Model Foros
   */

  export type AggregateForos = {
    _count: ForosCountAggregateOutputType | null
    _avg: ForosAvgAggregateOutputType | null
    _sum: ForosSumAggregateOutputType | null
    _min: ForosMinAggregateOutputType | null
    _max: ForosMaxAggregateOutputType | null
  }

  export type ForosAvgAggregateOutputType = {
    id: number | null
    creadorId: number | null
  }

  export type ForosSumAggregateOutputType = {
    id: number | null
    creadorId: number | null
  }

  export type ForosMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    creadorId: number | null
    fechaCreacion: Date | null
  }

  export type ForosMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    creadorId: number | null
    fechaCreacion: Date | null
  }

  export type ForosCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    creadorId: number
    fechaCreacion: number
    _all: number
  }


  export type ForosAvgAggregateInputType = {
    id?: true
    creadorId?: true
  }

  export type ForosSumAggregateInputType = {
    id?: true
    creadorId?: true
  }

  export type ForosMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    creadorId?: true
    fechaCreacion?: true
  }

  export type ForosMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    creadorId?: true
    fechaCreacion?: true
  }

  export type ForosCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    creadorId?: true
    fechaCreacion?: true
    _all?: true
  }

  export type ForosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Foros to aggregate.
     */
    where?: ForosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foros to fetch.
     */
    orderBy?: ForosOrderByWithRelationInput | ForosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ForosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Foros
    **/
    _count?: true | ForosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ForosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ForosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ForosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ForosMaxAggregateInputType
  }

  export type GetForosAggregateType<T extends ForosAggregateArgs> = {
        [P in keyof T & keyof AggregateForos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateForos[P]>
      : GetScalarType<T[P], AggregateForos[P]>
  }




  export type ForosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ForosWhereInput
    orderBy?: ForosOrderByWithAggregationInput | ForosOrderByWithAggregationInput[]
    by: ForosScalarFieldEnum[] | ForosScalarFieldEnum
    having?: ForosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ForosCountAggregateInputType | true
    _avg?: ForosAvgAggregateInputType
    _sum?: ForosSumAggregateInputType
    _min?: ForosMinAggregateInputType
    _max?: ForosMaxAggregateInputType
  }

  export type ForosGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    creadorId: number
    fechaCreacion: Date
    _count: ForosCountAggregateOutputType | null
    _avg: ForosAvgAggregateOutputType | null
    _sum: ForosSumAggregateOutputType | null
    _min: ForosMinAggregateOutputType | null
    _max: ForosMaxAggregateOutputType | null
  }

  type GetForosGroupByPayload<T extends ForosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ForosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ForosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ForosGroupByOutputType[P]>
            : GetScalarType<T[P], ForosGroupByOutputType[P]>
        }
      >
    >


  export type ForosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    creadorId?: boolean
    fechaCreacion?: boolean
    creador?: boolean | CuentasDefaultArgs<ExtArgs>
    publicaciones?: boolean | Foros$publicacionesArgs<ExtArgs>
    _count?: boolean | ForosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foros"]>

  export type ForosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    creadorId?: boolean
    fechaCreacion?: boolean
    creador?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foros"]>

  export type ForosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    creadorId?: boolean
    fechaCreacion?: boolean
    creador?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foros"]>

  export type ForosSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    creadorId?: boolean
    fechaCreacion?: boolean
  }

  export type ForosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "descripcion" | "creadorId" | "fechaCreacion", ExtArgs["result"]["foros"]>
  export type ForosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creador?: boolean | CuentasDefaultArgs<ExtArgs>
    publicaciones?: boolean | Foros$publicacionesArgs<ExtArgs>
    _count?: boolean | ForosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ForosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creador?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type ForosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creador?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $ForosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Foros"
    objects: {
      creador: Prisma.$CuentasPayload<ExtArgs>
      publicaciones: Prisma.$PublicacionesForoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
      creadorId: number
      fechaCreacion: Date
    }, ExtArgs["result"]["foros"]>
    composites: {}
  }

  type ForosGetPayload<S extends boolean | null | undefined | ForosDefaultArgs> = $Result.GetResult<Prisma.$ForosPayload, S>

  type ForosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ForosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ForosCountAggregateInputType | true
    }

  export interface ForosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Foros'], meta: { name: 'Foros' } }
    /**
     * Find zero or one Foros that matches the filter.
     * @param {ForosFindUniqueArgs} args - Arguments to find a Foros
     * @example
     * // Get one Foros
     * const foros = await prisma.foros.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ForosFindUniqueArgs>(args: SelectSubset<T, ForosFindUniqueArgs<ExtArgs>>): Prisma__ForosClient<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Foros that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ForosFindUniqueOrThrowArgs} args - Arguments to find a Foros
     * @example
     * // Get one Foros
     * const foros = await prisma.foros.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ForosFindUniqueOrThrowArgs>(args: SelectSubset<T, ForosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ForosClient<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Foros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForosFindFirstArgs} args - Arguments to find a Foros
     * @example
     * // Get one Foros
     * const foros = await prisma.foros.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ForosFindFirstArgs>(args?: SelectSubset<T, ForosFindFirstArgs<ExtArgs>>): Prisma__ForosClient<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Foros that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForosFindFirstOrThrowArgs} args - Arguments to find a Foros
     * @example
     * // Get one Foros
     * const foros = await prisma.foros.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ForosFindFirstOrThrowArgs>(args?: SelectSubset<T, ForosFindFirstOrThrowArgs<ExtArgs>>): Prisma__ForosClient<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Foros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Foros
     * const foros = await prisma.foros.findMany()
     * 
     * // Get first 10 Foros
     * const foros = await prisma.foros.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const forosWithIdOnly = await prisma.foros.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ForosFindManyArgs>(args?: SelectSubset<T, ForosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Foros.
     * @param {ForosCreateArgs} args - Arguments to create a Foros.
     * @example
     * // Create one Foros
     * const Foros = await prisma.foros.create({
     *   data: {
     *     // ... data to create a Foros
     *   }
     * })
     * 
     */
    create<T extends ForosCreateArgs>(args: SelectSubset<T, ForosCreateArgs<ExtArgs>>): Prisma__ForosClient<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Foros.
     * @param {ForosCreateManyArgs} args - Arguments to create many Foros.
     * @example
     * // Create many Foros
     * const foros = await prisma.foros.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ForosCreateManyArgs>(args?: SelectSubset<T, ForosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Foros and returns the data saved in the database.
     * @param {ForosCreateManyAndReturnArgs} args - Arguments to create many Foros.
     * @example
     * // Create many Foros
     * const foros = await prisma.foros.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Foros and only return the `id`
     * const forosWithIdOnly = await prisma.foros.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ForosCreateManyAndReturnArgs>(args?: SelectSubset<T, ForosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Foros.
     * @param {ForosDeleteArgs} args - Arguments to delete one Foros.
     * @example
     * // Delete one Foros
     * const Foros = await prisma.foros.delete({
     *   where: {
     *     // ... filter to delete one Foros
     *   }
     * })
     * 
     */
    delete<T extends ForosDeleteArgs>(args: SelectSubset<T, ForosDeleteArgs<ExtArgs>>): Prisma__ForosClient<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Foros.
     * @param {ForosUpdateArgs} args - Arguments to update one Foros.
     * @example
     * // Update one Foros
     * const foros = await prisma.foros.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ForosUpdateArgs>(args: SelectSubset<T, ForosUpdateArgs<ExtArgs>>): Prisma__ForosClient<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Foros.
     * @param {ForosDeleteManyArgs} args - Arguments to filter Foros to delete.
     * @example
     * // Delete a few Foros
     * const { count } = await prisma.foros.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ForosDeleteManyArgs>(args?: SelectSubset<T, ForosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Foros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Foros
     * const foros = await prisma.foros.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ForosUpdateManyArgs>(args: SelectSubset<T, ForosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Foros and returns the data updated in the database.
     * @param {ForosUpdateManyAndReturnArgs} args - Arguments to update many Foros.
     * @example
     * // Update many Foros
     * const foros = await prisma.foros.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Foros and only return the `id`
     * const forosWithIdOnly = await prisma.foros.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ForosUpdateManyAndReturnArgs>(args: SelectSubset<T, ForosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Foros.
     * @param {ForosUpsertArgs} args - Arguments to update or create a Foros.
     * @example
     * // Update or create a Foros
     * const foros = await prisma.foros.upsert({
     *   create: {
     *     // ... data to create a Foros
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Foros we want to update
     *   }
     * })
     */
    upsert<T extends ForosUpsertArgs>(args: SelectSubset<T, ForosUpsertArgs<ExtArgs>>): Prisma__ForosClient<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Foros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForosCountArgs} args - Arguments to filter Foros to count.
     * @example
     * // Count the number of Foros
     * const count = await prisma.foros.count({
     *   where: {
     *     // ... the filter for the Foros we want to count
     *   }
     * })
    **/
    count<T extends ForosCountArgs>(
      args?: Subset<T, ForosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ForosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Foros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ForosAggregateArgs>(args: Subset<T, ForosAggregateArgs>): Prisma.PrismaPromise<GetForosAggregateType<T>>

    /**
     * Group by Foros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ForosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ForosGroupByArgs['orderBy'] }
        : { orderBy?: ForosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ForosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetForosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Foros model
   */
  readonly fields: ForosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Foros.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ForosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creador<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    publicaciones<T extends Foros$publicacionesArgs<ExtArgs> = {}>(args?: Subset<T, Foros$publicacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Foros model
   */
  interface ForosFieldRefs {
    readonly id: FieldRef<"Foros", 'Int'>
    readonly nombre: FieldRef<"Foros", 'String'>
    readonly descripcion: FieldRef<"Foros", 'String'>
    readonly creadorId: FieldRef<"Foros", 'Int'>
    readonly fechaCreacion: FieldRef<"Foros", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Foros findUnique
   */
  export type ForosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
    /**
     * Filter, which Foros to fetch.
     */
    where: ForosWhereUniqueInput
  }

  /**
   * Foros findUniqueOrThrow
   */
  export type ForosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
    /**
     * Filter, which Foros to fetch.
     */
    where: ForosWhereUniqueInput
  }

  /**
   * Foros findFirst
   */
  export type ForosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
    /**
     * Filter, which Foros to fetch.
     */
    where?: ForosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foros to fetch.
     */
    orderBy?: ForosOrderByWithRelationInput | ForosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Foros.
     */
    cursor?: ForosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Foros.
     */
    distinct?: ForosScalarFieldEnum | ForosScalarFieldEnum[]
  }

  /**
   * Foros findFirstOrThrow
   */
  export type ForosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
    /**
     * Filter, which Foros to fetch.
     */
    where?: ForosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foros to fetch.
     */
    orderBy?: ForosOrderByWithRelationInput | ForosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Foros.
     */
    cursor?: ForosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Foros.
     */
    distinct?: ForosScalarFieldEnum | ForosScalarFieldEnum[]
  }

  /**
   * Foros findMany
   */
  export type ForosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
    /**
     * Filter, which Foros to fetch.
     */
    where?: ForosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Foros to fetch.
     */
    orderBy?: ForosOrderByWithRelationInput | ForosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Foros.
     */
    cursor?: ForosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Foros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Foros.
     */
    skip?: number
    distinct?: ForosScalarFieldEnum | ForosScalarFieldEnum[]
  }

  /**
   * Foros create
   */
  export type ForosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
    /**
     * The data needed to create a Foros.
     */
    data: XOR<ForosCreateInput, ForosUncheckedCreateInput>
  }

  /**
   * Foros createMany
   */
  export type ForosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Foros.
     */
    data: ForosCreateManyInput | ForosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Foros createManyAndReturn
   */
  export type ForosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * The data used to create many Foros.
     */
    data: ForosCreateManyInput | ForosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Foros update
   */
  export type ForosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
    /**
     * The data needed to update a Foros.
     */
    data: XOR<ForosUpdateInput, ForosUncheckedUpdateInput>
    /**
     * Choose, which Foros to update.
     */
    where: ForosWhereUniqueInput
  }

  /**
   * Foros updateMany
   */
  export type ForosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Foros.
     */
    data: XOR<ForosUpdateManyMutationInput, ForosUncheckedUpdateManyInput>
    /**
     * Filter which Foros to update
     */
    where?: ForosWhereInput
    /**
     * Limit how many Foros to update.
     */
    limit?: number
  }

  /**
   * Foros updateManyAndReturn
   */
  export type ForosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * The data used to update Foros.
     */
    data: XOR<ForosUpdateManyMutationInput, ForosUncheckedUpdateManyInput>
    /**
     * Filter which Foros to update
     */
    where?: ForosWhereInput
    /**
     * Limit how many Foros to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Foros upsert
   */
  export type ForosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
    /**
     * The filter to search for the Foros to update in case it exists.
     */
    where: ForosWhereUniqueInput
    /**
     * In case the Foros found by the `where` argument doesn't exist, create a new Foros with this data.
     */
    create: XOR<ForosCreateInput, ForosUncheckedCreateInput>
    /**
     * In case the Foros was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ForosUpdateInput, ForosUncheckedUpdateInput>
  }

  /**
   * Foros delete
   */
  export type ForosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
    /**
     * Filter which Foros to delete.
     */
    where: ForosWhereUniqueInput
  }

  /**
   * Foros deleteMany
   */
  export type ForosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Foros to delete
     */
    where?: ForosWhereInput
    /**
     * Limit how many Foros to delete.
     */
    limit?: number
  }

  /**
   * Foros.publicaciones
   */
  export type Foros$publicacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    where?: PublicacionesForoWhereInput
    orderBy?: PublicacionesForoOrderByWithRelationInput | PublicacionesForoOrderByWithRelationInput[]
    cursor?: PublicacionesForoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PublicacionesForoScalarFieldEnum | PublicacionesForoScalarFieldEnum[]
  }

  /**
   * Foros without action
   */
  export type ForosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Foros
     */
    select?: ForosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Foros
     */
    omit?: ForosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForosInclude<ExtArgs> | null
  }


  /**
   * Model PublicacionesForo
   */

  export type AggregatePublicacionesForo = {
    _count: PublicacionesForoCountAggregateOutputType | null
    _avg: PublicacionesForoAvgAggregateOutputType | null
    _sum: PublicacionesForoSumAggregateOutputType | null
    _min: PublicacionesForoMinAggregateOutputType | null
    _max: PublicacionesForoMaxAggregateOutputType | null
  }

  export type PublicacionesForoAvgAggregateOutputType = {
    id: number | null
    foroId: number | null
    autorId: number | null
  }

  export type PublicacionesForoSumAggregateOutputType = {
    id: number | null
    foroId: number | null
    autorId: number | null
  }

  export type PublicacionesForoMinAggregateOutputType = {
    id: number | null
    foroId: number | null
    autorId: number | null
    titulo: string | null
    contenido: string | null
    fecha: Date | null
  }

  export type PublicacionesForoMaxAggregateOutputType = {
    id: number | null
    foroId: number | null
    autorId: number | null
    titulo: string | null
    contenido: string | null
    fecha: Date | null
  }

  export type PublicacionesForoCountAggregateOutputType = {
    id: number
    foroId: number
    autorId: number
    titulo: number
    contenido: number
    fecha: number
    _all: number
  }


  export type PublicacionesForoAvgAggregateInputType = {
    id?: true
    foroId?: true
    autorId?: true
  }

  export type PublicacionesForoSumAggregateInputType = {
    id?: true
    foroId?: true
    autorId?: true
  }

  export type PublicacionesForoMinAggregateInputType = {
    id?: true
    foroId?: true
    autorId?: true
    titulo?: true
    contenido?: true
    fecha?: true
  }

  export type PublicacionesForoMaxAggregateInputType = {
    id?: true
    foroId?: true
    autorId?: true
    titulo?: true
    contenido?: true
    fecha?: true
  }

  export type PublicacionesForoCountAggregateInputType = {
    id?: true
    foroId?: true
    autorId?: true
    titulo?: true
    contenido?: true
    fecha?: true
    _all?: true
  }

  export type PublicacionesForoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PublicacionesForo to aggregate.
     */
    where?: PublicacionesForoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PublicacionesForos to fetch.
     */
    orderBy?: PublicacionesForoOrderByWithRelationInput | PublicacionesForoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PublicacionesForoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PublicacionesForos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PublicacionesForos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PublicacionesForos
    **/
    _count?: true | PublicacionesForoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PublicacionesForoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PublicacionesForoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PublicacionesForoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PublicacionesForoMaxAggregateInputType
  }

  export type GetPublicacionesForoAggregateType<T extends PublicacionesForoAggregateArgs> = {
        [P in keyof T & keyof AggregatePublicacionesForo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePublicacionesForo[P]>
      : GetScalarType<T[P], AggregatePublicacionesForo[P]>
  }




  export type PublicacionesForoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PublicacionesForoWhereInput
    orderBy?: PublicacionesForoOrderByWithAggregationInput | PublicacionesForoOrderByWithAggregationInput[]
    by: PublicacionesForoScalarFieldEnum[] | PublicacionesForoScalarFieldEnum
    having?: PublicacionesForoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PublicacionesForoCountAggregateInputType | true
    _avg?: PublicacionesForoAvgAggregateInputType
    _sum?: PublicacionesForoSumAggregateInputType
    _min?: PublicacionesForoMinAggregateInputType
    _max?: PublicacionesForoMaxAggregateInputType
  }

  export type PublicacionesForoGroupByOutputType = {
    id: number
    foroId: number
    autorId: number
    titulo: string | null
    contenido: string | null
    fecha: Date
    _count: PublicacionesForoCountAggregateOutputType | null
    _avg: PublicacionesForoAvgAggregateOutputType | null
    _sum: PublicacionesForoSumAggregateOutputType | null
    _min: PublicacionesForoMinAggregateOutputType | null
    _max: PublicacionesForoMaxAggregateOutputType | null
  }

  type GetPublicacionesForoGroupByPayload<T extends PublicacionesForoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PublicacionesForoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PublicacionesForoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PublicacionesForoGroupByOutputType[P]>
            : GetScalarType<T[P], PublicacionesForoGroupByOutputType[P]>
        }
      >
    >


  export type PublicacionesForoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    foroId?: boolean
    autorId?: boolean
    titulo?: boolean
    contenido?: boolean
    fecha?: boolean
    foro?: boolean | ForosDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
    comentarios?: boolean | PublicacionesForo$comentariosArgs<ExtArgs>
    _count?: boolean | PublicacionesForoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicacionesForo"]>

  export type PublicacionesForoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    foroId?: boolean
    autorId?: boolean
    titulo?: boolean
    contenido?: boolean
    fecha?: boolean
    foro?: boolean | ForosDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicacionesForo"]>

  export type PublicacionesForoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    foroId?: boolean
    autorId?: boolean
    titulo?: boolean
    contenido?: boolean
    fecha?: boolean
    foro?: boolean | ForosDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["publicacionesForo"]>

  export type PublicacionesForoSelectScalar = {
    id?: boolean
    foroId?: boolean
    autorId?: boolean
    titulo?: boolean
    contenido?: boolean
    fecha?: boolean
  }

  export type PublicacionesForoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "foroId" | "autorId" | "titulo" | "contenido" | "fecha", ExtArgs["result"]["publicacionesForo"]>
  export type PublicacionesForoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foro?: boolean | ForosDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
    comentarios?: boolean | PublicacionesForo$comentariosArgs<ExtArgs>
    _count?: boolean | PublicacionesForoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PublicacionesForoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foro?: boolean | ForosDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type PublicacionesForoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    foro?: boolean | ForosDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $PublicacionesForoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PublicacionesForo"
    objects: {
      foro: Prisma.$ForosPayload<ExtArgs>
      autor: Prisma.$CuentasPayload<ExtArgs>
      comentarios: Prisma.$ComentariosPublicacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      foroId: number
      autorId: number
      titulo: string | null
      contenido: string | null
      fecha: Date
    }, ExtArgs["result"]["publicacionesForo"]>
    composites: {}
  }

  type PublicacionesForoGetPayload<S extends boolean | null | undefined | PublicacionesForoDefaultArgs> = $Result.GetResult<Prisma.$PublicacionesForoPayload, S>

  type PublicacionesForoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PublicacionesForoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PublicacionesForoCountAggregateInputType | true
    }

  export interface PublicacionesForoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PublicacionesForo'], meta: { name: 'PublicacionesForo' } }
    /**
     * Find zero or one PublicacionesForo that matches the filter.
     * @param {PublicacionesForoFindUniqueArgs} args - Arguments to find a PublicacionesForo
     * @example
     * // Get one PublicacionesForo
     * const publicacionesForo = await prisma.publicacionesForo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PublicacionesForoFindUniqueArgs>(args: SelectSubset<T, PublicacionesForoFindUniqueArgs<ExtArgs>>): Prisma__PublicacionesForoClient<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PublicacionesForo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PublicacionesForoFindUniqueOrThrowArgs} args - Arguments to find a PublicacionesForo
     * @example
     * // Get one PublicacionesForo
     * const publicacionesForo = await prisma.publicacionesForo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PublicacionesForoFindUniqueOrThrowArgs>(args: SelectSubset<T, PublicacionesForoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PublicacionesForoClient<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PublicacionesForo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesForoFindFirstArgs} args - Arguments to find a PublicacionesForo
     * @example
     * // Get one PublicacionesForo
     * const publicacionesForo = await prisma.publicacionesForo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PublicacionesForoFindFirstArgs>(args?: SelectSubset<T, PublicacionesForoFindFirstArgs<ExtArgs>>): Prisma__PublicacionesForoClient<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PublicacionesForo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesForoFindFirstOrThrowArgs} args - Arguments to find a PublicacionesForo
     * @example
     * // Get one PublicacionesForo
     * const publicacionesForo = await prisma.publicacionesForo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PublicacionesForoFindFirstOrThrowArgs>(args?: SelectSubset<T, PublicacionesForoFindFirstOrThrowArgs<ExtArgs>>): Prisma__PublicacionesForoClient<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PublicacionesForos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesForoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PublicacionesForos
     * const publicacionesForos = await prisma.publicacionesForo.findMany()
     * 
     * // Get first 10 PublicacionesForos
     * const publicacionesForos = await prisma.publicacionesForo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const publicacionesForoWithIdOnly = await prisma.publicacionesForo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PublicacionesForoFindManyArgs>(args?: SelectSubset<T, PublicacionesForoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PublicacionesForo.
     * @param {PublicacionesForoCreateArgs} args - Arguments to create a PublicacionesForo.
     * @example
     * // Create one PublicacionesForo
     * const PublicacionesForo = await prisma.publicacionesForo.create({
     *   data: {
     *     // ... data to create a PublicacionesForo
     *   }
     * })
     * 
     */
    create<T extends PublicacionesForoCreateArgs>(args: SelectSubset<T, PublicacionesForoCreateArgs<ExtArgs>>): Prisma__PublicacionesForoClient<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PublicacionesForos.
     * @param {PublicacionesForoCreateManyArgs} args - Arguments to create many PublicacionesForos.
     * @example
     * // Create many PublicacionesForos
     * const publicacionesForo = await prisma.publicacionesForo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PublicacionesForoCreateManyArgs>(args?: SelectSubset<T, PublicacionesForoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PublicacionesForos and returns the data saved in the database.
     * @param {PublicacionesForoCreateManyAndReturnArgs} args - Arguments to create many PublicacionesForos.
     * @example
     * // Create many PublicacionesForos
     * const publicacionesForo = await prisma.publicacionesForo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PublicacionesForos and only return the `id`
     * const publicacionesForoWithIdOnly = await prisma.publicacionesForo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PublicacionesForoCreateManyAndReturnArgs>(args?: SelectSubset<T, PublicacionesForoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PublicacionesForo.
     * @param {PublicacionesForoDeleteArgs} args - Arguments to delete one PublicacionesForo.
     * @example
     * // Delete one PublicacionesForo
     * const PublicacionesForo = await prisma.publicacionesForo.delete({
     *   where: {
     *     // ... filter to delete one PublicacionesForo
     *   }
     * })
     * 
     */
    delete<T extends PublicacionesForoDeleteArgs>(args: SelectSubset<T, PublicacionesForoDeleteArgs<ExtArgs>>): Prisma__PublicacionesForoClient<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PublicacionesForo.
     * @param {PublicacionesForoUpdateArgs} args - Arguments to update one PublicacionesForo.
     * @example
     * // Update one PublicacionesForo
     * const publicacionesForo = await prisma.publicacionesForo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PublicacionesForoUpdateArgs>(args: SelectSubset<T, PublicacionesForoUpdateArgs<ExtArgs>>): Prisma__PublicacionesForoClient<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PublicacionesForos.
     * @param {PublicacionesForoDeleteManyArgs} args - Arguments to filter PublicacionesForos to delete.
     * @example
     * // Delete a few PublicacionesForos
     * const { count } = await prisma.publicacionesForo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PublicacionesForoDeleteManyArgs>(args?: SelectSubset<T, PublicacionesForoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PublicacionesForos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesForoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PublicacionesForos
     * const publicacionesForo = await prisma.publicacionesForo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PublicacionesForoUpdateManyArgs>(args: SelectSubset<T, PublicacionesForoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PublicacionesForos and returns the data updated in the database.
     * @param {PublicacionesForoUpdateManyAndReturnArgs} args - Arguments to update many PublicacionesForos.
     * @example
     * // Update many PublicacionesForos
     * const publicacionesForo = await prisma.publicacionesForo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PublicacionesForos and only return the `id`
     * const publicacionesForoWithIdOnly = await prisma.publicacionesForo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PublicacionesForoUpdateManyAndReturnArgs>(args: SelectSubset<T, PublicacionesForoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PublicacionesForo.
     * @param {PublicacionesForoUpsertArgs} args - Arguments to update or create a PublicacionesForo.
     * @example
     * // Update or create a PublicacionesForo
     * const publicacionesForo = await prisma.publicacionesForo.upsert({
     *   create: {
     *     // ... data to create a PublicacionesForo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PublicacionesForo we want to update
     *   }
     * })
     */
    upsert<T extends PublicacionesForoUpsertArgs>(args: SelectSubset<T, PublicacionesForoUpsertArgs<ExtArgs>>): Prisma__PublicacionesForoClient<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PublicacionesForos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesForoCountArgs} args - Arguments to filter PublicacionesForos to count.
     * @example
     * // Count the number of PublicacionesForos
     * const count = await prisma.publicacionesForo.count({
     *   where: {
     *     // ... the filter for the PublicacionesForos we want to count
     *   }
     * })
    **/
    count<T extends PublicacionesForoCountArgs>(
      args?: Subset<T, PublicacionesForoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PublicacionesForoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PublicacionesForo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesForoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PublicacionesForoAggregateArgs>(args: Subset<T, PublicacionesForoAggregateArgs>): Prisma.PrismaPromise<GetPublicacionesForoAggregateType<T>>

    /**
     * Group by PublicacionesForo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PublicacionesForoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PublicacionesForoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PublicacionesForoGroupByArgs['orderBy'] }
        : { orderBy?: PublicacionesForoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PublicacionesForoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPublicacionesForoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PublicacionesForo model
   */
  readonly fields: PublicacionesForoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PublicacionesForo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PublicacionesForoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    foro<T extends ForosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ForosDefaultArgs<ExtArgs>>): Prisma__ForosClient<$Result.GetResult<Prisma.$ForosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    autor<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    comentarios<T extends PublicacionesForo$comentariosArgs<ExtArgs> = {}>(args?: Subset<T, PublicacionesForo$comentariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PublicacionesForo model
   */
  interface PublicacionesForoFieldRefs {
    readonly id: FieldRef<"PublicacionesForo", 'Int'>
    readonly foroId: FieldRef<"PublicacionesForo", 'Int'>
    readonly autorId: FieldRef<"PublicacionesForo", 'Int'>
    readonly titulo: FieldRef<"PublicacionesForo", 'String'>
    readonly contenido: FieldRef<"PublicacionesForo", 'String'>
    readonly fecha: FieldRef<"PublicacionesForo", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PublicacionesForo findUnique
   */
  export type PublicacionesForoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    /**
     * Filter, which PublicacionesForo to fetch.
     */
    where: PublicacionesForoWhereUniqueInput
  }

  /**
   * PublicacionesForo findUniqueOrThrow
   */
  export type PublicacionesForoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    /**
     * Filter, which PublicacionesForo to fetch.
     */
    where: PublicacionesForoWhereUniqueInput
  }

  /**
   * PublicacionesForo findFirst
   */
  export type PublicacionesForoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    /**
     * Filter, which PublicacionesForo to fetch.
     */
    where?: PublicacionesForoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PublicacionesForos to fetch.
     */
    orderBy?: PublicacionesForoOrderByWithRelationInput | PublicacionesForoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PublicacionesForos.
     */
    cursor?: PublicacionesForoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PublicacionesForos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PublicacionesForos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PublicacionesForos.
     */
    distinct?: PublicacionesForoScalarFieldEnum | PublicacionesForoScalarFieldEnum[]
  }

  /**
   * PublicacionesForo findFirstOrThrow
   */
  export type PublicacionesForoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    /**
     * Filter, which PublicacionesForo to fetch.
     */
    where?: PublicacionesForoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PublicacionesForos to fetch.
     */
    orderBy?: PublicacionesForoOrderByWithRelationInput | PublicacionesForoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PublicacionesForos.
     */
    cursor?: PublicacionesForoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PublicacionesForos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PublicacionesForos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PublicacionesForos.
     */
    distinct?: PublicacionesForoScalarFieldEnum | PublicacionesForoScalarFieldEnum[]
  }

  /**
   * PublicacionesForo findMany
   */
  export type PublicacionesForoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    /**
     * Filter, which PublicacionesForos to fetch.
     */
    where?: PublicacionesForoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PublicacionesForos to fetch.
     */
    orderBy?: PublicacionesForoOrderByWithRelationInput | PublicacionesForoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PublicacionesForos.
     */
    cursor?: PublicacionesForoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PublicacionesForos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PublicacionesForos.
     */
    skip?: number
    distinct?: PublicacionesForoScalarFieldEnum | PublicacionesForoScalarFieldEnum[]
  }

  /**
   * PublicacionesForo create
   */
  export type PublicacionesForoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    /**
     * The data needed to create a PublicacionesForo.
     */
    data: XOR<PublicacionesForoCreateInput, PublicacionesForoUncheckedCreateInput>
  }

  /**
   * PublicacionesForo createMany
   */
  export type PublicacionesForoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PublicacionesForos.
     */
    data: PublicacionesForoCreateManyInput | PublicacionesForoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PublicacionesForo createManyAndReturn
   */
  export type PublicacionesForoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * The data used to create many PublicacionesForos.
     */
    data: PublicacionesForoCreateManyInput | PublicacionesForoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PublicacionesForo update
   */
  export type PublicacionesForoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    /**
     * The data needed to update a PublicacionesForo.
     */
    data: XOR<PublicacionesForoUpdateInput, PublicacionesForoUncheckedUpdateInput>
    /**
     * Choose, which PublicacionesForo to update.
     */
    where: PublicacionesForoWhereUniqueInput
  }

  /**
   * PublicacionesForo updateMany
   */
  export type PublicacionesForoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PublicacionesForos.
     */
    data: XOR<PublicacionesForoUpdateManyMutationInput, PublicacionesForoUncheckedUpdateManyInput>
    /**
     * Filter which PublicacionesForos to update
     */
    where?: PublicacionesForoWhereInput
    /**
     * Limit how many PublicacionesForos to update.
     */
    limit?: number
  }

  /**
   * PublicacionesForo updateManyAndReturn
   */
  export type PublicacionesForoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * The data used to update PublicacionesForos.
     */
    data: XOR<PublicacionesForoUpdateManyMutationInput, PublicacionesForoUncheckedUpdateManyInput>
    /**
     * Filter which PublicacionesForos to update
     */
    where?: PublicacionesForoWhereInput
    /**
     * Limit how many PublicacionesForos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PublicacionesForo upsert
   */
  export type PublicacionesForoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    /**
     * The filter to search for the PublicacionesForo to update in case it exists.
     */
    where: PublicacionesForoWhereUniqueInput
    /**
     * In case the PublicacionesForo found by the `where` argument doesn't exist, create a new PublicacionesForo with this data.
     */
    create: XOR<PublicacionesForoCreateInput, PublicacionesForoUncheckedCreateInput>
    /**
     * In case the PublicacionesForo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PublicacionesForoUpdateInput, PublicacionesForoUncheckedUpdateInput>
  }

  /**
   * PublicacionesForo delete
   */
  export type PublicacionesForoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
    /**
     * Filter which PublicacionesForo to delete.
     */
    where: PublicacionesForoWhereUniqueInput
  }

  /**
   * PublicacionesForo deleteMany
   */
  export type PublicacionesForoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PublicacionesForos to delete
     */
    where?: PublicacionesForoWhereInput
    /**
     * Limit how many PublicacionesForos to delete.
     */
    limit?: number
  }

  /**
   * PublicacionesForo.comentarios
   */
  export type PublicacionesForo$comentariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    where?: ComentariosPublicacionWhereInput
    orderBy?: ComentariosPublicacionOrderByWithRelationInput | ComentariosPublicacionOrderByWithRelationInput[]
    cursor?: ComentariosPublicacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComentariosPublicacionScalarFieldEnum | ComentariosPublicacionScalarFieldEnum[]
  }

  /**
   * PublicacionesForo without action
   */
  export type PublicacionesForoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PublicacionesForo
     */
    select?: PublicacionesForoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PublicacionesForo
     */
    omit?: PublicacionesForoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PublicacionesForoInclude<ExtArgs> | null
  }


  /**
   * Model ComentariosPublicacion
   */

  export type AggregateComentariosPublicacion = {
    _count: ComentariosPublicacionCountAggregateOutputType | null
    _avg: ComentariosPublicacionAvgAggregateOutputType | null
    _sum: ComentariosPublicacionSumAggregateOutputType | null
    _min: ComentariosPublicacionMinAggregateOutputType | null
    _max: ComentariosPublicacionMaxAggregateOutputType | null
  }

  export type ComentariosPublicacionAvgAggregateOutputType = {
    id: number | null
    publicacionId: number | null
    autorId: number | null
  }

  export type ComentariosPublicacionSumAggregateOutputType = {
    id: number | null
    publicacionId: number | null
    autorId: number | null
  }

  export type ComentariosPublicacionMinAggregateOutputType = {
    id: number | null
    publicacionId: number | null
    autorId: number | null
    contenido: string | null
    fecha: Date | null
  }

  export type ComentariosPublicacionMaxAggregateOutputType = {
    id: number | null
    publicacionId: number | null
    autorId: number | null
    contenido: string | null
    fecha: Date | null
  }

  export type ComentariosPublicacionCountAggregateOutputType = {
    id: number
    publicacionId: number
    autorId: number
    contenido: number
    fecha: number
    _all: number
  }


  export type ComentariosPublicacionAvgAggregateInputType = {
    id?: true
    publicacionId?: true
    autorId?: true
  }

  export type ComentariosPublicacionSumAggregateInputType = {
    id?: true
    publicacionId?: true
    autorId?: true
  }

  export type ComentariosPublicacionMinAggregateInputType = {
    id?: true
    publicacionId?: true
    autorId?: true
    contenido?: true
    fecha?: true
  }

  export type ComentariosPublicacionMaxAggregateInputType = {
    id?: true
    publicacionId?: true
    autorId?: true
    contenido?: true
    fecha?: true
  }

  export type ComentariosPublicacionCountAggregateInputType = {
    id?: true
    publicacionId?: true
    autorId?: true
    contenido?: true
    fecha?: true
    _all?: true
  }

  export type ComentariosPublicacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComentariosPublicacion to aggregate.
     */
    where?: ComentariosPublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentariosPublicacions to fetch.
     */
    orderBy?: ComentariosPublicacionOrderByWithRelationInput | ComentariosPublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComentariosPublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentariosPublicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentariosPublicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ComentariosPublicacions
    **/
    _count?: true | ComentariosPublicacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComentariosPublicacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComentariosPublicacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComentariosPublicacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComentariosPublicacionMaxAggregateInputType
  }

  export type GetComentariosPublicacionAggregateType<T extends ComentariosPublicacionAggregateArgs> = {
        [P in keyof T & keyof AggregateComentariosPublicacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComentariosPublicacion[P]>
      : GetScalarType<T[P], AggregateComentariosPublicacion[P]>
  }




  export type ComentariosPublicacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComentariosPublicacionWhereInput
    orderBy?: ComentariosPublicacionOrderByWithAggregationInput | ComentariosPublicacionOrderByWithAggregationInput[]
    by: ComentariosPublicacionScalarFieldEnum[] | ComentariosPublicacionScalarFieldEnum
    having?: ComentariosPublicacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComentariosPublicacionCountAggregateInputType | true
    _avg?: ComentariosPublicacionAvgAggregateInputType
    _sum?: ComentariosPublicacionSumAggregateInputType
    _min?: ComentariosPublicacionMinAggregateInputType
    _max?: ComentariosPublicacionMaxAggregateInputType
  }

  export type ComentariosPublicacionGroupByOutputType = {
    id: number
    publicacionId: number
    autorId: number
    contenido: string | null
    fecha: Date
    _count: ComentariosPublicacionCountAggregateOutputType | null
    _avg: ComentariosPublicacionAvgAggregateOutputType | null
    _sum: ComentariosPublicacionSumAggregateOutputType | null
    _min: ComentariosPublicacionMinAggregateOutputType | null
    _max: ComentariosPublicacionMaxAggregateOutputType | null
  }

  type GetComentariosPublicacionGroupByPayload<T extends ComentariosPublicacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComentariosPublicacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComentariosPublicacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComentariosPublicacionGroupByOutputType[P]>
            : GetScalarType<T[P], ComentariosPublicacionGroupByOutputType[P]>
        }
      >
    >


  export type ComentariosPublicacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    publicacionId?: boolean
    autorId?: boolean
    contenido?: boolean
    fecha?: boolean
    publicacion?: boolean | PublicacionesForoDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentariosPublicacion"]>

  export type ComentariosPublicacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    publicacionId?: boolean
    autorId?: boolean
    contenido?: boolean
    fecha?: boolean
    publicacion?: boolean | PublicacionesForoDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentariosPublicacion"]>

  export type ComentariosPublicacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    publicacionId?: boolean
    autorId?: boolean
    contenido?: boolean
    fecha?: boolean
    publicacion?: boolean | PublicacionesForoDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comentariosPublicacion"]>

  export type ComentariosPublicacionSelectScalar = {
    id?: boolean
    publicacionId?: boolean
    autorId?: boolean
    contenido?: boolean
    fecha?: boolean
  }

  export type ComentariosPublicacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "publicacionId" | "autorId" | "contenido" | "fecha", ExtArgs["result"]["comentariosPublicacion"]>
  export type ComentariosPublicacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    publicacion?: boolean | PublicacionesForoDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type ComentariosPublicacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    publicacion?: boolean | PublicacionesForoDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type ComentariosPublicacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    publicacion?: boolean | PublicacionesForoDefaultArgs<ExtArgs>
    autor?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $ComentariosPublicacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ComentariosPublicacion"
    objects: {
      publicacion: Prisma.$PublicacionesForoPayload<ExtArgs>
      autor: Prisma.$CuentasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      publicacionId: number
      autorId: number
      contenido: string | null
      fecha: Date
    }, ExtArgs["result"]["comentariosPublicacion"]>
    composites: {}
  }

  type ComentariosPublicacionGetPayload<S extends boolean | null | undefined | ComentariosPublicacionDefaultArgs> = $Result.GetResult<Prisma.$ComentariosPublicacionPayload, S>

  type ComentariosPublicacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ComentariosPublicacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ComentariosPublicacionCountAggregateInputType | true
    }

  export interface ComentariosPublicacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ComentariosPublicacion'], meta: { name: 'ComentariosPublicacion' } }
    /**
     * Find zero or one ComentariosPublicacion that matches the filter.
     * @param {ComentariosPublicacionFindUniqueArgs} args - Arguments to find a ComentariosPublicacion
     * @example
     * // Get one ComentariosPublicacion
     * const comentariosPublicacion = await prisma.comentariosPublicacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComentariosPublicacionFindUniqueArgs>(args: SelectSubset<T, ComentariosPublicacionFindUniqueArgs<ExtArgs>>): Prisma__ComentariosPublicacionClient<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ComentariosPublicacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ComentariosPublicacionFindUniqueOrThrowArgs} args - Arguments to find a ComentariosPublicacion
     * @example
     * // Get one ComentariosPublicacion
     * const comentariosPublicacion = await prisma.comentariosPublicacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComentariosPublicacionFindUniqueOrThrowArgs>(args: SelectSubset<T, ComentariosPublicacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComentariosPublicacionClient<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ComentariosPublicacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentariosPublicacionFindFirstArgs} args - Arguments to find a ComentariosPublicacion
     * @example
     * // Get one ComentariosPublicacion
     * const comentariosPublicacion = await prisma.comentariosPublicacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComentariosPublicacionFindFirstArgs>(args?: SelectSubset<T, ComentariosPublicacionFindFirstArgs<ExtArgs>>): Prisma__ComentariosPublicacionClient<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ComentariosPublicacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentariosPublicacionFindFirstOrThrowArgs} args - Arguments to find a ComentariosPublicacion
     * @example
     * // Get one ComentariosPublicacion
     * const comentariosPublicacion = await prisma.comentariosPublicacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComentariosPublicacionFindFirstOrThrowArgs>(args?: SelectSubset<T, ComentariosPublicacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComentariosPublicacionClient<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ComentariosPublicacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentariosPublicacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ComentariosPublicacions
     * const comentariosPublicacions = await prisma.comentariosPublicacion.findMany()
     * 
     * // Get first 10 ComentariosPublicacions
     * const comentariosPublicacions = await prisma.comentariosPublicacion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const comentariosPublicacionWithIdOnly = await prisma.comentariosPublicacion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ComentariosPublicacionFindManyArgs>(args?: SelectSubset<T, ComentariosPublicacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ComentariosPublicacion.
     * @param {ComentariosPublicacionCreateArgs} args - Arguments to create a ComentariosPublicacion.
     * @example
     * // Create one ComentariosPublicacion
     * const ComentariosPublicacion = await prisma.comentariosPublicacion.create({
     *   data: {
     *     // ... data to create a ComentariosPublicacion
     *   }
     * })
     * 
     */
    create<T extends ComentariosPublicacionCreateArgs>(args: SelectSubset<T, ComentariosPublicacionCreateArgs<ExtArgs>>): Prisma__ComentariosPublicacionClient<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ComentariosPublicacions.
     * @param {ComentariosPublicacionCreateManyArgs} args - Arguments to create many ComentariosPublicacions.
     * @example
     * // Create many ComentariosPublicacions
     * const comentariosPublicacion = await prisma.comentariosPublicacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComentariosPublicacionCreateManyArgs>(args?: SelectSubset<T, ComentariosPublicacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ComentariosPublicacions and returns the data saved in the database.
     * @param {ComentariosPublicacionCreateManyAndReturnArgs} args - Arguments to create many ComentariosPublicacions.
     * @example
     * // Create many ComentariosPublicacions
     * const comentariosPublicacion = await prisma.comentariosPublicacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ComentariosPublicacions and only return the `id`
     * const comentariosPublicacionWithIdOnly = await prisma.comentariosPublicacion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComentariosPublicacionCreateManyAndReturnArgs>(args?: SelectSubset<T, ComentariosPublicacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ComentariosPublicacion.
     * @param {ComentariosPublicacionDeleteArgs} args - Arguments to delete one ComentariosPublicacion.
     * @example
     * // Delete one ComentariosPublicacion
     * const ComentariosPublicacion = await prisma.comentariosPublicacion.delete({
     *   where: {
     *     // ... filter to delete one ComentariosPublicacion
     *   }
     * })
     * 
     */
    delete<T extends ComentariosPublicacionDeleteArgs>(args: SelectSubset<T, ComentariosPublicacionDeleteArgs<ExtArgs>>): Prisma__ComentariosPublicacionClient<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ComentariosPublicacion.
     * @param {ComentariosPublicacionUpdateArgs} args - Arguments to update one ComentariosPublicacion.
     * @example
     * // Update one ComentariosPublicacion
     * const comentariosPublicacion = await prisma.comentariosPublicacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComentariosPublicacionUpdateArgs>(args: SelectSubset<T, ComentariosPublicacionUpdateArgs<ExtArgs>>): Prisma__ComentariosPublicacionClient<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ComentariosPublicacions.
     * @param {ComentariosPublicacionDeleteManyArgs} args - Arguments to filter ComentariosPublicacions to delete.
     * @example
     * // Delete a few ComentariosPublicacions
     * const { count } = await prisma.comentariosPublicacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComentariosPublicacionDeleteManyArgs>(args?: SelectSubset<T, ComentariosPublicacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComentariosPublicacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentariosPublicacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ComentariosPublicacions
     * const comentariosPublicacion = await prisma.comentariosPublicacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComentariosPublicacionUpdateManyArgs>(args: SelectSubset<T, ComentariosPublicacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComentariosPublicacions and returns the data updated in the database.
     * @param {ComentariosPublicacionUpdateManyAndReturnArgs} args - Arguments to update many ComentariosPublicacions.
     * @example
     * // Update many ComentariosPublicacions
     * const comentariosPublicacion = await prisma.comentariosPublicacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ComentariosPublicacions and only return the `id`
     * const comentariosPublicacionWithIdOnly = await prisma.comentariosPublicacion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ComentariosPublicacionUpdateManyAndReturnArgs>(args: SelectSubset<T, ComentariosPublicacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ComentariosPublicacion.
     * @param {ComentariosPublicacionUpsertArgs} args - Arguments to update or create a ComentariosPublicacion.
     * @example
     * // Update or create a ComentariosPublicacion
     * const comentariosPublicacion = await prisma.comentariosPublicacion.upsert({
     *   create: {
     *     // ... data to create a ComentariosPublicacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ComentariosPublicacion we want to update
     *   }
     * })
     */
    upsert<T extends ComentariosPublicacionUpsertArgs>(args: SelectSubset<T, ComentariosPublicacionUpsertArgs<ExtArgs>>): Prisma__ComentariosPublicacionClient<$Result.GetResult<Prisma.$ComentariosPublicacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ComentariosPublicacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentariosPublicacionCountArgs} args - Arguments to filter ComentariosPublicacions to count.
     * @example
     * // Count the number of ComentariosPublicacions
     * const count = await prisma.comentariosPublicacion.count({
     *   where: {
     *     // ... the filter for the ComentariosPublicacions we want to count
     *   }
     * })
    **/
    count<T extends ComentariosPublicacionCountArgs>(
      args?: Subset<T, ComentariosPublicacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComentariosPublicacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ComentariosPublicacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentariosPublicacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComentariosPublicacionAggregateArgs>(args: Subset<T, ComentariosPublicacionAggregateArgs>): Prisma.PrismaPromise<GetComentariosPublicacionAggregateType<T>>

    /**
     * Group by ComentariosPublicacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComentariosPublicacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComentariosPublicacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComentariosPublicacionGroupByArgs['orderBy'] }
        : { orderBy?: ComentariosPublicacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComentariosPublicacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComentariosPublicacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ComentariosPublicacion model
   */
  readonly fields: ComentariosPublicacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ComentariosPublicacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComentariosPublicacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    publicacion<T extends PublicacionesForoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PublicacionesForoDefaultArgs<ExtArgs>>): Prisma__PublicacionesForoClient<$Result.GetResult<Prisma.$PublicacionesForoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    autor<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ComentariosPublicacion model
   */
  interface ComentariosPublicacionFieldRefs {
    readonly id: FieldRef<"ComentariosPublicacion", 'Int'>
    readonly publicacionId: FieldRef<"ComentariosPublicacion", 'Int'>
    readonly autorId: FieldRef<"ComentariosPublicacion", 'Int'>
    readonly contenido: FieldRef<"ComentariosPublicacion", 'String'>
    readonly fecha: FieldRef<"ComentariosPublicacion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ComentariosPublicacion findUnique
   */
  export type ComentariosPublicacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    /**
     * Filter, which ComentariosPublicacion to fetch.
     */
    where: ComentariosPublicacionWhereUniqueInput
  }

  /**
   * ComentariosPublicacion findUniqueOrThrow
   */
  export type ComentariosPublicacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    /**
     * Filter, which ComentariosPublicacion to fetch.
     */
    where: ComentariosPublicacionWhereUniqueInput
  }

  /**
   * ComentariosPublicacion findFirst
   */
  export type ComentariosPublicacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    /**
     * Filter, which ComentariosPublicacion to fetch.
     */
    where?: ComentariosPublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentariosPublicacions to fetch.
     */
    orderBy?: ComentariosPublicacionOrderByWithRelationInput | ComentariosPublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComentariosPublicacions.
     */
    cursor?: ComentariosPublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentariosPublicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentariosPublicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComentariosPublicacions.
     */
    distinct?: ComentariosPublicacionScalarFieldEnum | ComentariosPublicacionScalarFieldEnum[]
  }

  /**
   * ComentariosPublicacion findFirstOrThrow
   */
  export type ComentariosPublicacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    /**
     * Filter, which ComentariosPublicacion to fetch.
     */
    where?: ComentariosPublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentariosPublicacions to fetch.
     */
    orderBy?: ComentariosPublicacionOrderByWithRelationInput | ComentariosPublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComentariosPublicacions.
     */
    cursor?: ComentariosPublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentariosPublicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentariosPublicacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComentariosPublicacions.
     */
    distinct?: ComentariosPublicacionScalarFieldEnum | ComentariosPublicacionScalarFieldEnum[]
  }

  /**
   * ComentariosPublicacion findMany
   */
  export type ComentariosPublicacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    /**
     * Filter, which ComentariosPublicacions to fetch.
     */
    where?: ComentariosPublicacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComentariosPublicacions to fetch.
     */
    orderBy?: ComentariosPublicacionOrderByWithRelationInput | ComentariosPublicacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ComentariosPublicacions.
     */
    cursor?: ComentariosPublicacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComentariosPublicacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComentariosPublicacions.
     */
    skip?: number
    distinct?: ComentariosPublicacionScalarFieldEnum | ComentariosPublicacionScalarFieldEnum[]
  }

  /**
   * ComentariosPublicacion create
   */
  export type ComentariosPublicacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    /**
     * The data needed to create a ComentariosPublicacion.
     */
    data: XOR<ComentariosPublicacionCreateInput, ComentariosPublicacionUncheckedCreateInput>
  }

  /**
   * ComentariosPublicacion createMany
   */
  export type ComentariosPublicacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ComentariosPublicacions.
     */
    data: ComentariosPublicacionCreateManyInput | ComentariosPublicacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ComentariosPublicacion createManyAndReturn
   */
  export type ComentariosPublicacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * The data used to create many ComentariosPublicacions.
     */
    data: ComentariosPublicacionCreateManyInput | ComentariosPublicacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ComentariosPublicacion update
   */
  export type ComentariosPublicacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    /**
     * The data needed to update a ComentariosPublicacion.
     */
    data: XOR<ComentariosPublicacionUpdateInput, ComentariosPublicacionUncheckedUpdateInput>
    /**
     * Choose, which ComentariosPublicacion to update.
     */
    where: ComentariosPublicacionWhereUniqueInput
  }

  /**
   * ComentariosPublicacion updateMany
   */
  export type ComentariosPublicacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ComentariosPublicacions.
     */
    data: XOR<ComentariosPublicacionUpdateManyMutationInput, ComentariosPublicacionUncheckedUpdateManyInput>
    /**
     * Filter which ComentariosPublicacions to update
     */
    where?: ComentariosPublicacionWhereInput
    /**
     * Limit how many ComentariosPublicacions to update.
     */
    limit?: number
  }

  /**
   * ComentariosPublicacion updateManyAndReturn
   */
  export type ComentariosPublicacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * The data used to update ComentariosPublicacions.
     */
    data: XOR<ComentariosPublicacionUpdateManyMutationInput, ComentariosPublicacionUncheckedUpdateManyInput>
    /**
     * Filter which ComentariosPublicacions to update
     */
    where?: ComentariosPublicacionWhereInput
    /**
     * Limit how many ComentariosPublicacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ComentariosPublicacion upsert
   */
  export type ComentariosPublicacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    /**
     * The filter to search for the ComentariosPublicacion to update in case it exists.
     */
    where: ComentariosPublicacionWhereUniqueInput
    /**
     * In case the ComentariosPublicacion found by the `where` argument doesn't exist, create a new ComentariosPublicacion with this data.
     */
    create: XOR<ComentariosPublicacionCreateInput, ComentariosPublicacionUncheckedCreateInput>
    /**
     * In case the ComentariosPublicacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComentariosPublicacionUpdateInput, ComentariosPublicacionUncheckedUpdateInput>
  }

  /**
   * ComentariosPublicacion delete
   */
  export type ComentariosPublicacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
    /**
     * Filter which ComentariosPublicacion to delete.
     */
    where: ComentariosPublicacionWhereUniqueInput
  }

  /**
   * ComentariosPublicacion deleteMany
   */
  export type ComentariosPublicacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComentariosPublicacions to delete
     */
    where?: ComentariosPublicacionWhereInput
    /**
     * Limit how many ComentariosPublicacions to delete.
     */
    limit?: number
  }

  /**
   * ComentariosPublicacion without action
   */
  export type ComentariosPublicacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComentariosPublicacion
     */
    select?: ComentariosPublicacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComentariosPublicacion
     */
    omit?: ComentariosPublicacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComentariosPublicacionInclude<ExtArgs> | null
  }


  /**
   * Model Ubicaciones
   */

  export type AggregateUbicaciones = {
    _count: UbicacionesCountAggregateOutputType | null
    _avg: UbicacionesAvgAggregateOutputType | null
    _sum: UbicacionesSumAggregateOutputType | null
    _min: UbicacionesMinAggregateOutputType | null
    _max: UbicacionesMaxAggregateOutputType | null
  }

  export type UbicacionesAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type UbicacionesSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
  }

  export type UbicacionesMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    nombreLugar: string | null
    descripcion: string | null
  }

  export type UbicacionesMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    nombreLugar: string | null
    descripcion: string | null
  }

  export type UbicacionesCountAggregateOutputType = {
    id: number
    usuarioId: number
    nombreLugar: number
    descripcion: number
    _all: number
  }


  export type UbicacionesAvgAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type UbicacionesSumAggregateInputType = {
    id?: true
    usuarioId?: true
  }

  export type UbicacionesMinAggregateInputType = {
    id?: true
    usuarioId?: true
    nombreLugar?: true
    descripcion?: true
  }

  export type UbicacionesMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    nombreLugar?: true
    descripcion?: true
  }

  export type UbicacionesCountAggregateInputType = {
    id?: true
    usuarioId?: true
    nombreLugar?: true
    descripcion?: true
    _all?: true
  }

  export type UbicacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ubicaciones to aggregate.
     */
    where?: UbicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicaciones to fetch.
     */
    orderBy?: UbicacionesOrderByWithRelationInput | UbicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UbicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ubicaciones
    **/
    _count?: true | UbicacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UbicacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UbicacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UbicacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UbicacionesMaxAggregateInputType
  }

  export type GetUbicacionesAggregateType<T extends UbicacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateUbicaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUbicaciones[P]>
      : GetScalarType<T[P], AggregateUbicaciones[P]>
  }




  export type UbicacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UbicacionesWhereInput
    orderBy?: UbicacionesOrderByWithAggregationInput | UbicacionesOrderByWithAggregationInput[]
    by: UbicacionesScalarFieldEnum[] | UbicacionesScalarFieldEnum
    having?: UbicacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UbicacionesCountAggregateInputType | true
    _avg?: UbicacionesAvgAggregateInputType
    _sum?: UbicacionesSumAggregateInputType
    _min?: UbicacionesMinAggregateInputType
    _max?: UbicacionesMaxAggregateInputType
  }

  export type UbicacionesGroupByOutputType = {
    id: number
    usuarioId: number
    nombreLugar: string | null
    descripcion: string | null
    _count: UbicacionesCountAggregateOutputType | null
    _avg: UbicacionesAvgAggregateOutputType | null
    _sum: UbicacionesSumAggregateOutputType | null
    _min: UbicacionesMinAggregateOutputType | null
    _max: UbicacionesMaxAggregateOutputType | null
  }

  type GetUbicacionesGroupByPayload<T extends UbicacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UbicacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UbicacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UbicacionesGroupByOutputType[P]>
            : GetScalarType<T[P], UbicacionesGroupByOutputType[P]>
        }
      >
    >


  export type UbicacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    nombreLugar?: boolean
    descripcion?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ubicaciones"]>

  export type UbicacionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    nombreLugar?: boolean
    descripcion?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ubicaciones"]>

  export type UbicacionesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    nombreLugar?: boolean
    descripcion?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ubicaciones"]>

  export type UbicacionesSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    nombreLugar?: boolean
    descripcion?: boolean
  }

  export type UbicacionesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuarioId" | "nombreLugar" | "descripcion", ExtArgs["result"]["ubicaciones"]>
  export type UbicacionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type UbicacionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type UbicacionesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $UbicacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ubicaciones"
    objects: {
      usuario: Prisma.$CuentasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      nombreLugar: string | null
      descripcion: string | null
    }, ExtArgs["result"]["ubicaciones"]>
    composites: {}
  }

  type UbicacionesGetPayload<S extends boolean | null | undefined | UbicacionesDefaultArgs> = $Result.GetResult<Prisma.$UbicacionesPayload, S>

  type UbicacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UbicacionesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UbicacionesCountAggregateInputType | true
    }

  export interface UbicacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ubicaciones'], meta: { name: 'Ubicaciones' } }
    /**
     * Find zero or one Ubicaciones that matches the filter.
     * @param {UbicacionesFindUniqueArgs} args - Arguments to find a Ubicaciones
     * @example
     * // Get one Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UbicacionesFindUniqueArgs>(args: SelectSubset<T, UbicacionesFindUniqueArgs<ExtArgs>>): Prisma__UbicacionesClient<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ubicaciones that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UbicacionesFindUniqueOrThrowArgs} args - Arguments to find a Ubicaciones
     * @example
     * // Get one Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UbicacionesFindUniqueOrThrowArgs>(args: SelectSubset<T, UbicacionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UbicacionesClient<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ubicaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionesFindFirstArgs} args - Arguments to find a Ubicaciones
     * @example
     * // Get one Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UbicacionesFindFirstArgs>(args?: SelectSubset<T, UbicacionesFindFirstArgs<ExtArgs>>): Prisma__UbicacionesClient<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ubicaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionesFindFirstOrThrowArgs} args - Arguments to find a Ubicaciones
     * @example
     * // Get one Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UbicacionesFindFirstOrThrowArgs>(args?: SelectSubset<T, UbicacionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__UbicacionesClient<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ubicaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.findMany()
     * 
     * // Get first 10 Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ubicacionesWithIdOnly = await prisma.ubicaciones.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UbicacionesFindManyArgs>(args?: SelectSubset<T, UbicacionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ubicaciones.
     * @param {UbicacionesCreateArgs} args - Arguments to create a Ubicaciones.
     * @example
     * // Create one Ubicaciones
     * const Ubicaciones = await prisma.ubicaciones.create({
     *   data: {
     *     // ... data to create a Ubicaciones
     *   }
     * })
     * 
     */
    create<T extends UbicacionesCreateArgs>(args: SelectSubset<T, UbicacionesCreateArgs<ExtArgs>>): Prisma__UbicacionesClient<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ubicaciones.
     * @param {UbicacionesCreateManyArgs} args - Arguments to create many Ubicaciones.
     * @example
     * // Create many Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UbicacionesCreateManyArgs>(args?: SelectSubset<T, UbicacionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ubicaciones and returns the data saved in the database.
     * @param {UbicacionesCreateManyAndReturnArgs} args - Arguments to create many Ubicaciones.
     * @example
     * // Create many Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ubicaciones and only return the `id`
     * const ubicacionesWithIdOnly = await prisma.ubicaciones.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UbicacionesCreateManyAndReturnArgs>(args?: SelectSubset<T, UbicacionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ubicaciones.
     * @param {UbicacionesDeleteArgs} args - Arguments to delete one Ubicaciones.
     * @example
     * // Delete one Ubicaciones
     * const Ubicaciones = await prisma.ubicaciones.delete({
     *   where: {
     *     // ... filter to delete one Ubicaciones
     *   }
     * })
     * 
     */
    delete<T extends UbicacionesDeleteArgs>(args: SelectSubset<T, UbicacionesDeleteArgs<ExtArgs>>): Prisma__UbicacionesClient<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ubicaciones.
     * @param {UbicacionesUpdateArgs} args - Arguments to update one Ubicaciones.
     * @example
     * // Update one Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UbicacionesUpdateArgs>(args: SelectSubset<T, UbicacionesUpdateArgs<ExtArgs>>): Prisma__UbicacionesClient<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ubicaciones.
     * @param {UbicacionesDeleteManyArgs} args - Arguments to filter Ubicaciones to delete.
     * @example
     * // Delete a few Ubicaciones
     * const { count } = await prisma.ubicaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UbicacionesDeleteManyArgs>(args?: SelectSubset<T, UbicacionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ubicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UbicacionesUpdateManyArgs>(args: SelectSubset<T, UbicacionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ubicaciones and returns the data updated in the database.
     * @param {UbicacionesUpdateManyAndReturnArgs} args - Arguments to update many Ubicaciones.
     * @example
     * // Update many Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ubicaciones and only return the `id`
     * const ubicacionesWithIdOnly = await prisma.ubicaciones.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UbicacionesUpdateManyAndReturnArgs>(args: SelectSubset<T, UbicacionesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ubicaciones.
     * @param {UbicacionesUpsertArgs} args - Arguments to update or create a Ubicaciones.
     * @example
     * // Update or create a Ubicaciones
     * const ubicaciones = await prisma.ubicaciones.upsert({
     *   create: {
     *     // ... data to create a Ubicaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ubicaciones we want to update
     *   }
     * })
     */
    upsert<T extends UbicacionesUpsertArgs>(args: SelectSubset<T, UbicacionesUpsertArgs<ExtArgs>>): Prisma__UbicacionesClient<$Result.GetResult<Prisma.$UbicacionesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ubicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionesCountArgs} args - Arguments to filter Ubicaciones to count.
     * @example
     * // Count the number of Ubicaciones
     * const count = await prisma.ubicaciones.count({
     *   where: {
     *     // ... the filter for the Ubicaciones we want to count
     *   }
     * })
    **/
    count<T extends UbicacionesCountArgs>(
      args?: Subset<T, UbicacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UbicacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ubicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UbicacionesAggregateArgs>(args: Subset<T, UbicacionesAggregateArgs>): Prisma.PrismaPromise<GetUbicacionesAggregateType<T>>

    /**
     * Group by Ubicaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UbicacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UbicacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UbicacionesGroupByArgs['orderBy'] }
        : { orderBy?: UbicacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UbicacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUbicacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ubicaciones model
   */
  readonly fields: UbicacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ubicaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UbicacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ubicaciones model
   */
  interface UbicacionesFieldRefs {
    readonly id: FieldRef<"Ubicaciones", 'Int'>
    readonly usuarioId: FieldRef<"Ubicaciones", 'Int'>
    readonly nombreLugar: FieldRef<"Ubicaciones", 'String'>
    readonly descripcion: FieldRef<"Ubicaciones", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Ubicaciones findUnique
   */
  export type UbicacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Ubicaciones to fetch.
     */
    where: UbicacionesWhereUniqueInput
  }

  /**
   * Ubicaciones findUniqueOrThrow
   */
  export type UbicacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Ubicaciones to fetch.
     */
    where: UbicacionesWhereUniqueInput
  }

  /**
   * Ubicaciones findFirst
   */
  export type UbicacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Ubicaciones to fetch.
     */
    where?: UbicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicaciones to fetch.
     */
    orderBy?: UbicacionesOrderByWithRelationInput | UbicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ubicaciones.
     */
    cursor?: UbicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ubicaciones.
     */
    distinct?: UbicacionesScalarFieldEnum | UbicacionesScalarFieldEnum[]
  }

  /**
   * Ubicaciones findFirstOrThrow
   */
  export type UbicacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Ubicaciones to fetch.
     */
    where?: UbicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicaciones to fetch.
     */
    orderBy?: UbicacionesOrderByWithRelationInput | UbicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ubicaciones.
     */
    cursor?: UbicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ubicaciones.
     */
    distinct?: UbicacionesScalarFieldEnum | UbicacionesScalarFieldEnum[]
  }

  /**
   * Ubicaciones findMany
   */
  export type UbicacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
    /**
     * Filter, which Ubicaciones to fetch.
     */
    where?: UbicacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ubicaciones to fetch.
     */
    orderBy?: UbicacionesOrderByWithRelationInput | UbicacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ubicaciones.
     */
    cursor?: UbicacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ubicaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ubicaciones.
     */
    skip?: number
    distinct?: UbicacionesScalarFieldEnum | UbicacionesScalarFieldEnum[]
  }

  /**
   * Ubicaciones create
   */
  export type UbicacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
    /**
     * The data needed to create a Ubicaciones.
     */
    data: XOR<UbicacionesCreateInput, UbicacionesUncheckedCreateInput>
  }

  /**
   * Ubicaciones createMany
   */
  export type UbicacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Ubicaciones.
     */
    data: UbicacionesCreateManyInput | UbicacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ubicaciones createManyAndReturn
   */
  export type UbicacionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * The data used to create many Ubicaciones.
     */
    data: UbicacionesCreateManyInput | UbicacionesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ubicaciones update
   */
  export type UbicacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
    /**
     * The data needed to update a Ubicaciones.
     */
    data: XOR<UbicacionesUpdateInput, UbicacionesUncheckedUpdateInput>
    /**
     * Choose, which Ubicaciones to update.
     */
    where: UbicacionesWhereUniqueInput
  }

  /**
   * Ubicaciones updateMany
   */
  export type UbicacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Ubicaciones.
     */
    data: XOR<UbicacionesUpdateManyMutationInput, UbicacionesUncheckedUpdateManyInput>
    /**
     * Filter which Ubicaciones to update
     */
    where?: UbicacionesWhereInput
    /**
     * Limit how many Ubicaciones to update.
     */
    limit?: number
  }

  /**
   * Ubicaciones updateManyAndReturn
   */
  export type UbicacionesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * The data used to update Ubicaciones.
     */
    data: XOR<UbicacionesUpdateManyMutationInput, UbicacionesUncheckedUpdateManyInput>
    /**
     * Filter which Ubicaciones to update
     */
    where?: UbicacionesWhereInput
    /**
     * Limit how many Ubicaciones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ubicaciones upsert
   */
  export type UbicacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
    /**
     * The filter to search for the Ubicaciones to update in case it exists.
     */
    where: UbicacionesWhereUniqueInput
    /**
     * In case the Ubicaciones found by the `where` argument doesn't exist, create a new Ubicaciones with this data.
     */
    create: XOR<UbicacionesCreateInput, UbicacionesUncheckedCreateInput>
    /**
     * In case the Ubicaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UbicacionesUpdateInput, UbicacionesUncheckedUpdateInput>
  }

  /**
   * Ubicaciones delete
   */
  export type UbicacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
    /**
     * Filter which Ubicaciones to delete.
     */
    where: UbicacionesWhereUniqueInput
  }

  /**
   * Ubicaciones deleteMany
   */
  export type UbicacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ubicaciones to delete
     */
    where?: UbicacionesWhereInput
    /**
     * Limit how many Ubicaciones to delete.
     */
    limit?: number
  }

  /**
   * Ubicaciones without action
   */
  export type UbicacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ubicaciones
     */
    select?: UbicacionesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ubicaciones
     */
    omit?: UbicacionesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UbicacionesInclude<ExtArgs> | null
  }


  /**
   * Model ResumenUsuario
   */

  export type AggregateResumenUsuario = {
    _count: ResumenUsuarioCountAggregateOutputType | null
    _avg: ResumenUsuarioAvgAggregateOutputType | null
    _sum: ResumenUsuarioSumAggregateOutputType | null
    _min: ResumenUsuarioMinAggregateOutputType | null
    _max: ResumenUsuarioMaxAggregateOutputType | null
  }

  export type ResumenUsuarioAvgAggregateOutputType = {
    usuarioId: number | null
    totalProductos: number | null
    totalVentas: number | null
    totalCompras: number | null
    promedioCalificacion: Decimal | null
  }

  export type ResumenUsuarioSumAggregateOutputType = {
    usuarioId: number | null
    totalProductos: number | null
    totalVentas: number | null
    totalCompras: number | null
    promedioCalificacion: Decimal | null
  }

  export type ResumenUsuarioMinAggregateOutputType = {
    usuarioId: number | null
    totalProductos: number | null
    totalVentas: number | null
    totalCompras: number | null
    promedioCalificacion: Decimal | null
  }

  export type ResumenUsuarioMaxAggregateOutputType = {
    usuarioId: number | null
    totalProductos: number | null
    totalVentas: number | null
    totalCompras: number | null
    promedioCalificacion: Decimal | null
  }

  export type ResumenUsuarioCountAggregateOutputType = {
    usuarioId: number
    totalProductos: number
    totalVentas: number
    totalCompras: number
    promedioCalificacion: number
    _all: number
  }


  export type ResumenUsuarioAvgAggregateInputType = {
    usuarioId?: true
    totalProductos?: true
    totalVentas?: true
    totalCompras?: true
    promedioCalificacion?: true
  }

  export type ResumenUsuarioSumAggregateInputType = {
    usuarioId?: true
    totalProductos?: true
    totalVentas?: true
    totalCompras?: true
    promedioCalificacion?: true
  }

  export type ResumenUsuarioMinAggregateInputType = {
    usuarioId?: true
    totalProductos?: true
    totalVentas?: true
    totalCompras?: true
    promedioCalificacion?: true
  }

  export type ResumenUsuarioMaxAggregateInputType = {
    usuarioId?: true
    totalProductos?: true
    totalVentas?: true
    totalCompras?: true
    promedioCalificacion?: true
  }

  export type ResumenUsuarioCountAggregateInputType = {
    usuarioId?: true
    totalProductos?: true
    totalVentas?: true
    totalCompras?: true
    promedioCalificacion?: true
    _all?: true
  }

  export type ResumenUsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ResumenUsuario to aggregate.
     */
    where?: ResumenUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResumenUsuarios to fetch.
     */
    orderBy?: ResumenUsuarioOrderByWithRelationInput | ResumenUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ResumenUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResumenUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResumenUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ResumenUsuarios
    **/
    _count?: true | ResumenUsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ResumenUsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ResumenUsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ResumenUsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ResumenUsuarioMaxAggregateInputType
  }

  export type GetResumenUsuarioAggregateType<T extends ResumenUsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateResumenUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateResumenUsuario[P]>
      : GetScalarType<T[P], AggregateResumenUsuario[P]>
  }




  export type ResumenUsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResumenUsuarioWhereInput
    orderBy?: ResumenUsuarioOrderByWithAggregationInput | ResumenUsuarioOrderByWithAggregationInput[]
    by: ResumenUsuarioScalarFieldEnum[] | ResumenUsuarioScalarFieldEnum
    having?: ResumenUsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ResumenUsuarioCountAggregateInputType | true
    _avg?: ResumenUsuarioAvgAggregateInputType
    _sum?: ResumenUsuarioSumAggregateInputType
    _min?: ResumenUsuarioMinAggregateInputType
    _max?: ResumenUsuarioMaxAggregateInputType
  }

  export type ResumenUsuarioGroupByOutputType = {
    usuarioId: number
    totalProductos: number
    totalVentas: number
    totalCompras: number
    promedioCalificacion: Decimal
    _count: ResumenUsuarioCountAggregateOutputType | null
    _avg: ResumenUsuarioAvgAggregateOutputType | null
    _sum: ResumenUsuarioSumAggregateOutputType | null
    _min: ResumenUsuarioMinAggregateOutputType | null
    _max: ResumenUsuarioMaxAggregateOutputType | null
  }

  type GetResumenUsuarioGroupByPayload<T extends ResumenUsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ResumenUsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ResumenUsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ResumenUsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], ResumenUsuarioGroupByOutputType[P]>
        }
      >
    >


  export type ResumenUsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    totalProductos?: boolean
    totalVentas?: boolean
    totalCompras?: boolean
    promedioCalificacion?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resumenUsuario"]>

  export type ResumenUsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    totalProductos?: boolean
    totalVentas?: boolean
    totalCompras?: boolean
    promedioCalificacion?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resumenUsuario"]>

  export type ResumenUsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioId?: boolean
    totalProductos?: boolean
    totalVentas?: boolean
    totalCompras?: boolean
    promedioCalificacion?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resumenUsuario"]>

  export type ResumenUsuarioSelectScalar = {
    usuarioId?: boolean
    totalProductos?: boolean
    totalVentas?: boolean
    totalCompras?: boolean
    promedioCalificacion?: boolean
  }

  export type ResumenUsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"usuarioId" | "totalProductos" | "totalVentas" | "totalCompras" | "promedioCalificacion", ExtArgs["result"]["resumenUsuario"]>
  export type ResumenUsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type ResumenUsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type ResumenUsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $ResumenUsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ResumenUsuario"
    objects: {
      usuario: Prisma.$CuentasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      usuarioId: number
      totalProductos: number
      totalVentas: number
      totalCompras: number
      promedioCalificacion: Prisma.Decimal
    }, ExtArgs["result"]["resumenUsuario"]>
    composites: {}
  }

  type ResumenUsuarioGetPayload<S extends boolean | null | undefined | ResumenUsuarioDefaultArgs> = $Result.GetResult<Prisma.$ResumenUsuarioPayload, S>

  type ResumenUsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ResumenUsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ResumenUsuarioCountAggregateInputType | true
    }

  export interface ResumenUsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ResumenUsuario'], meta: { name: 'ResumenUsuario' } }
    /**
     * Find zero or one ResumenUsuario that matches the filter.
     * @param {ResumenUsuarioFindUniqueArgs} args - Arguments to find a ResumenUsuario
     * @example
     * // Get one ResumenUsuario
     * const resumenUsuario = await prisma.resumenUsuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ResumenUsuarioFindUniqueArgs>(args: SelectSubset<T, ResumenUsuarioFindUniqueArgs<ExtArgs>>): Prisma__ResumenUsuarioClient<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ResumenUsuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ResumenUsuarioFindUniqueOrThrowArgs} args - Arguments to find a ResumenUsuario
     * @example
     * // Get one ResumenUsuario
     * const resumenUsuario = await prisma.resumenUsuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ResumenUsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, ResumenUsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ResumenUsuarioClient<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ResumenUsuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResumenUsuarioFindFirstArgs} args - Arguments to find a ResumenUsuario
     * @example
     * // Get one ResumenUsuario
     * const resumenUsuario = await prisma.resumenUsuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ResumenUsuarioFindFirstArgs>(args?: SelectSubset<T, ResumenUsuarioFindFirstArgs<ExtArgs>>): Prisma__ResumenUsuarioClient<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ResumenUsuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResumenUsuarioFindFirstOrThrowArgs} args - Arguments to find a ResumenUsuario
     * @example
     * // Get one ResumenUsuario
     * const resumenUsuario = await prisma.resumenUsuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ResumenUsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, ResumenUsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__ResumenUsuarioClient<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ResumenUsuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResumenUsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ResumenUsuarios
     * const resumenUsuarios = await prisma.resumenUsuario.findMany()
     * 
     * // Get first 10 ResumenUsuarios
     * const resumenUsuarios = await prisma.resumenUsuario.findMany({ take: 10 })
     * 
     * // Only select the `usuarioId`
     * const resumenUsuarioWithUsuarioIdOnly = await prisma.resumenUsuario.findMany({ select: { usuarioId: true } })
     * 
     */
    findMany<T extends ResumenUsuarioFindManyArgs>(args?: SelectSubset<T, ResumenUsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ResumenUsuario.
     * @param {ResumenUsuarioCreateArgs} args - Arguments to create a ResumenUsuario.
     * @example
     * // Create one ResumenUsuario
     * const ResumenUsuario = await prisma.resumenUsuario.create({
     *   data: {
     *     // ... data to create a ResumenUsuario
     *   }
     * })
     * 
     */
    create<T extends ResumenUsuarioCreateArgs>(args: SelectSubset<T, ResumenUsuarioCreateArgs<ExtArgs>>): Prisma__ResumenUsuarioClient<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ResumenUsuarios.
     * @param {ResumenUsuarioCreateManyArgs} args - Arguments to create many ResumenUsuarios.
     * @example
     * // Create many ResumenUsuarios
     * const resumenUsuario = await prisma.resumenUsuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ResumenUsuarioCreateManyArgs>(args?: SelectSubset<T, ResumenUsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ResumenUsuarios and returns the data saved in the database.
     * @param {ResumenUsuarioCreateManyAndReturnArgs} args - Arguments to create many ResumenUsuarios.
     * @example
     * // Create many ResumenUsuarios
     * const resumenUsuario = await prisma.resumenUsuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ResumenUsuarios and only return the `usuarioId`
     * const resumenUsuarioWithUsuarioIdOnly = await prisma.resumenUsuario.createManyAndReturn({
     *   select: { usuarioId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ResumenUsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, ResumenUsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ResumenUsuario.
     * @param {ResumenUsuarioDeleteArgs} args - Arguments to delete one ResumenUsuario.
     * @example
     * // Delete one ResumenUsuario
     * const ResumenUsuario = await prisma.resumenUsuario.delete({
     *   where: {
     *     // ... filter to delete one ResumenUsuario
     *   }
     * })
     * 
     */
    delete<T extends ResumenUsuarioDeleteArgs>(args: SelectSubset<T, ResumenUsuarioDeleteArgs<ExtArgs>>): Prisma__ResumenUsuarioClient<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ResumenUsuario.
     * @param {ResumenUsuarioUpdateArgs} args - Arguments to update one ResumenUsuario.
     * @example
     * // Update one ResumenUsuario
     * const resumenUsuario = await prisma.resumenUsuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ResumenUsuarioUpdateArgs>(args: SelectSubset<T, ResumenUsuarioUpdateArgs<ExtArgs>>): Prisma__ResumenUsuarioClient<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ResumenUsuarios.
     * @param {ResumenUsuarioDeleteManyArgs} args - Arguments to filter ResumenUsuarios to delete.
     * @example
     * // Delete a few ResumenUsuarios
     * const { count } = await prisma.resumenUsuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ResumenUsuarioDeleteManyArgs>(args?: SelectSubset<T, ResumenUsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ResumenUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResumenUsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ResumenUsuarios
     * const resumenUsuario = await prisma.resumenUsuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ResumenUsuarioUpdateManyArgs>(args: SelectSubset<T, ResumenUsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ResumenUsuarios and returns the data updated in the database.
     * @param {ResumenUsuarioUpdateManyAndReturnArgs} args - Arguments to update many ResumenUsuarios.
     * @example
     * // Update many ResumenUsuarios
     * const resumenUsuario = await prisma.resumenUsuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ResumenUsuarios and only return the `usuarioId`
     * const resumenUsuarioWithUsuarioIdOnly = await prisma.resumenUsuario.updateManyAndReturn({
     *   select: { usuarioId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ResumenUsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, ResumenUsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ResumenUsuario.
     * @param {ResumenUsuarioUpsertArgs} args - Arguments to update or create a ResumenUsuario.
     * @example
     * // Update or create a ResumenUsuario
     * const resumenUsuario = await prisma.resumenUsuario.upsert({
     *   create: {
     *     // ... data to create a ResumenUsuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ResumenUsuario we want to update
     *   }
     * })
     */
    upsert<T extends ResumenUsuarioUpsertArgs>(args: SelectSubset<T, ResumenUsuarioUpsertArgs<ExtArgs>>): Prisma__ResumenUsuarioClient<$Result.GetResult<Prisma.$ResumenUsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ResumenUsuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResumenUsuarioCountArgs} args - Arguments to filter ResumenUsuarios to count.
     * @example
     * // Count the number of ResumenUsuarios
     * const count = await prisma.resumenUsuario.count({
     *   where: {
     *     // ... the filter for the ResumenUsuarios we want to count
     *   }
     * })
    **/
    count<T extends ResumenUsuarioCountArgs>(
      args?: Subset<T, ResumenUsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ResumenUsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ResumenUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResumenUsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ResumenUsuarioAggregateArgs>(args: Subset<T, ResumenUsuarioAggregateArgs>): Prisma.PrismaPromise<GetResumenUsuarioAggregateType<T>>

    /**
     * Group by ResumenUsuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResumenUsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ResumenUsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ResumenUsuarioGroupByArgs['orderBy'] }
        : { orderBy?: ResumenUsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ResumenUsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetResumenUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ResumenUsuario model
   */
  readonly fields: ResumenUsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ResumenUsuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ResumenUsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ResumenUsuario model
   */
  interface ResumenUsuarioFieldRefs {
    readonly usuarioId: FieldRef<"ResumenUsuario", 'Int'>
    readonly totalProductos: FieldRef<"ResumenUsuario", 'Int'>
    readonly totalVentas: FieldRef<"ResumenUsuario", 'Int'>
    readonly totalCompras: FieldRef<"ResumenUsuario", 'Int'>
    readonly promedioCalificacion: FieldRef<"ResumenUsuario", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * ResumenUsuario findUnique
   */
  export type ResumenUsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ResumenUsuario to fetch.
     */
    where: ResumenUsuarioWhereUniqueInput
  }

  /**
   * ResumenUsuario findUniqueOrThrow
   */
  export type ResumenUsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ResumenUsuario to fetch.
     */
    where: ResumenUsuarioWhereUniqueInput
  }

  /**
   * ResumenUsuario findFirst
   */
  export type ResumenUsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ResumenUsuario to fetch.
     */
    where?: ResumenUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResumenUsuarios to fetch.
     */
    orderBy?: ResumenUsuarioOrderByWithRelationInput | ResumenUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ResumenUsuarios.
     */
    cursor?: ResumenUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResumenUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResumenUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ResumenUsuarios.
     */
    distinct?: ResumenUsuarioScalarFieldEnum | ResumenUsuarioScalarFieldEnum[]
  }

  /**
   * ResumenUsuario findFirstOrThrow
   */
  export type ResumenUsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ResumenUsuario to fetch.
     */
    where?: ResumenUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResumenUsuarios to fetch.
     */
    orderBy?: ResumenUsuarioOrderByWithRelationInput | ResumenUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ResumenUsuarios.
     */
    cursor?: ResumenUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResumenUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResumenUsuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ResumenUsuarios.
     */
    distinct?: ResumenUsuarioScalarFieldEnum | ResumenUsuarioScalarFieldEnum[]
  }

  /**
   * ResumenUsuario findMany
   */
  export type ResumenUsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
    /**
     * Filter, which ResumenUsuarios to fetch.
     */
    where?: ResumenUsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResumenUsuarios to fetch.
     */
    orderBy?: ResumenUsuarioOrderByWithRelationInput | ResumenUsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ResumenUsuarios.
     */
    cursor?: ResumenUsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResumenUsuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResumenUsuarios.
     */
    skip?: number
    distinct?: ResumenUsuarioScalarFieldEnum | ResumenUsuarioScalarFieldEnum[]
  }

  /**
   * ResumenUsuario create
   */
  export type ResumenUsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a ResumenUsuario.
     */
    data: XOR<ResumenUsuarioCreateInput, ResumenUsuarioUncheckedCreateInput>
  }

  /**
   * ResumenUsuario createMany
   */
  export type ResumenUsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ResumenUsuarios.
     */
    data: ResumenUsuarioCreateManyInput | ResumenUsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ResumenUsuario createManyAndReturn
   */
  export type ResumenUsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many ResumenUsuarios.
     */
    data: ResumenUsuarioCreateManyInput | ResumenUsuarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ResumenUsuario update
   */
  export type ResumenUsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a ResumenUsuario.
     */
    data: XOR<ResumenUsuarioUpdateInput, ResumenUsuarioUncheckedUpdateInput>
    /**
     * Choose, which ResumenUsuario to update.
     */
    where: ResumenUsuarioWhereUniqueInput
  }

  /**
   * ResumenUsuario updateMany
   */
  export type ResumenUsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ResumenUsuarios.
     */
    data: XOR<ResumenUsuarioUpdateManyMutationInput, ResumenUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which ResumenUsuarios to update
     */
    where?: ResumenUsuarioWhereInput
    /**
     * Limit how many ResumenUsuarios to update.
     */
    limit?: number
  }

  /**
   * ResumenUsuario updateManyAndReturn
   */
  export type ResumenUsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * The data used to update ResumenUsuarios.
     */
    data: XOR<ResumenUsuarioUpdateManyMutationInput, ResumenUsuarioUncheckedUpdateManyInput>
    /**
     * Filter which ResumenUsuarios to update
     */
    where?: ResumenUsuarioWhereInput
    /**
     * Limit how many ResumenUsuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ResumenUsuario upsert
   */
  export type ResumenUsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the ResumenUsuario to update in case it exists.
     */
    where: ResumenUsuarioWhereUniqueInput
    /**
     * In case the ResumenUsuario found by the `where` argument doesn't exist, create a new ResumenUsuario with this data.
     */
    create: XOR<ResumenUsuarioCreateInput, ResumenUsuarioUncheckedCreateInput>
    /**
     * In case the ResumenUsuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ResumenUsuarioUpdateInput, ResumenUsuarioUncheckedUpdateInput>
  }

  /**
   * ResumenUsuario delete
   */
  export type ResumenUsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
    /**
     * Filter which ResumenUsuario to delete.
     */
    where: ResumenUsuarioWhereUniqueInput
  }

  /**
   * ResumenUsuario deleteMany
   */
  export type ResumenUsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ResumenUsuarios to delete
     */
    where?: ResumenUsuarioWhereInput
    /**
     * Limit how many ResumenUsuarios to delete.
     */
    limit?: number
  }

  /**
   * ResumenUsuario without action
   */
  export type ResumenUsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResumenUsuario
     */
    select?: ResumenUsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ResumenUsuario
     */
    omit?: ResumenUsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ResumenUsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Seguidores
   */

  export type AggregateSeguidores = {
    _count: SeguidoresCountAggregateOutputType | null
    _avg: SeguidoresAvgAggregateOutputType | null
    _sum: SeguidoresSumAggregateOutputType | null
    _min: SeguidoresMinAggregateOutputType | null
    _max: SeguidoresMaxAggregateOutputType | null
  }

  export type SeguidoresAvgAggregateOutputType = {
    usuarioSigueId: number | null
    usuarioSeguidoId: number | null
  }

  export type SeguidoresSumAggregateOutputType = {
    usuarioSigueId: number | null
    usuarioSeguidoId: number | null
  }

  export type SeguidoresMinAggregateOutputType = {
    usuarioSigueId: number | null
    usuarioSeguidoId: number | null
    fecha: Date | null
  }

  export type SeguidoresMaxAggregateOutputType = {
    usuarioSigueId: number | null
    usuarioSeguidoId: number | null
    fecha: Date | null
  }

  export type SeguidoresCountAggregateOutputType = {
    usuarioSigueId: number
    usuarioSeguidoId: number
    fecha: number
    _all: number
  }


  export type SeguidoresAvgAggregateInputType = {
    usuarioSigueId?: true
    usuarioSeguidoId?: true
  }

  export type SeguidoresSumAggregateInputType = {
    usuarioSigueId?: true
    usuarioSeguidoId?: true
  }

  export type SeguidoresMinAggregateInputType = {
    usuarioSigueId?: true
    usuarioSeguidoId?: true
    fecha?: true
  }

  export type SeguidoresMaxAggregateInputType = {
    usuarioSigueId?: true
    usuarioSeguidoId?: true
    fecha?: true
  }

  export type SeguidoresCountAggregateInputType = {
    usuarioSigueId?: true
    usuarioSeguidoId?: true
    fecha?: true
    _all?: true
  }

  export type SeguidoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Seguidores to aggregate.
     */
    where?: SeguidoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seguidores to fetch.
     */
    orderBy?: SeguidoresOrderByWithRelationInput | SeguidoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SeguidoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seguidores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seguidores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Seguidores
    **/
    _count?: true | SeguidoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SeguidoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SeguidoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SeguidoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SeguidoresMaxAggregateInputType
  }

  export type GetSeguidoresAggregateType<T extends SeguidoresAggregateArgs> = {
        [P in keyof T & keyof AggregateSeguidores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeguidores[P]>
      : GetScalarType<T[P], AggregateSeguidores[P]>
  }




  export type SeguidoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SeguidoresWhereInput
    orderBy?: SeguidoresOrderByWithAggregationInput | SeguidoresOrderByWithAggregationInput[]
    by: SeguidoresScalarFieldEnum[] | SeguidoresScalarFieldEnum
    having?: SeguidoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SeguidoresCountAggregateInputType | true
    _avg?: SeguidoresAvgAggregateInputType
    _sum?: SeguidoresSumAggregateInputType
    _min?: SeguidoresMinAggregateInputType
    _max?: SeguidoresMaxAggregateInputType
  }

  export type SeguidoresGroupByOutputType = {
    usuarioSigueId: number
    usuarioSeguidoId: number
    fecha: Date
    _count: SeguidoresCountAggregateOutputType | null
    _avg: SeguidoresAvgAggregateOutputType | null
    _sum: SeguidoresSumAggregateOutputType | null
    _min: SeguidoresMinAggregateOutputType | null
    _max: SeguidoresMaxAggregateOutputType | null
  }

  type GetSeguidoresGroupByPayload<T extends SeguidoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SeguidoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SeguidoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SeguidoresGroupByOutputType[P]>
            : GetScalarType<T[P], SeguidoresGroupByOutputType[P]>
        }
      >
    >


  export type SeguidoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioSigueId?: boolean
    usuarioSeguidoId?: boolean
    fecha?: boolean
    usuarioSigue?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioSeguido?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["seguidores"]>

  export type SeguidoresSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioSigueId?: boolean
    usuarioSeguidoId?: boolean
    fecha?: boolean
    usuarioSigue?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioSeguido?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["seguidores"]>

  export type SeguidoresSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuarioSigueId?: boolean
    usuarioSeguidoId?: boolean
    fecha?: boolean
    usuarioSigue?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioSeguido?: boolean | CuentasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["seguidores"]>

  export type SeguidoresSelectScalar = {
    usuarioSigueId?: boolean
    usuarioSeguidoId?: boolean
    fecha?: boolean
  }

  export type SeguidoresOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"usuarioSigueId" | "usuarioSeguidoId" | "fecha", ExtArgs["result"]["seguidores"]>
  export type SeguidoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarioSigue?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioSeguido?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type SeguidoresIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarioSigue?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioSeguido?: boolean | CuentasDefaultArgs<ExtArgs>
  }
  export type SeguidoresIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarioSigue?: boolean | CuentasDefaultArgs<ExtArgs>
    usuarioSeguido?: boolean | CuentasDefaultArgs<ExtArgs>
  }

  export type $SeguidoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Seguidores"
    objects: {
      usuarioSigue: Prisma.$CuentasPayload<ExtArgs>
      usuarioSeguido: Prisma.$CuentasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      usuarioSigueId: number
      usuarioSeguidoId: number
      fecha: Date
    }, ExtArgs["result"]["seguidores"]>
    composites: {}
  }

  type SeguidoresGetPayload<S extends boolean | null | undefined | SeguidoresDefaultArgs> = $Result.GetResult<Prisma.$SeguidoresPayload, S>

  type SeguidoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SeguidoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SeguidoresCountAggregateInputType | true
    }

  export interface SeguidoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Seguidores'], meta: { name: 'Seguidores' } }
    /**
     * Find zero or one Seguidores that matches the filter.
     * @param {SeguidoresFindUniqueArgs} args - Arguments to find a Seguidores
     * @example
     * // Get one Seguidores
     * const seguidores = await prisma.seguidores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SeguidoresFindUniqueArgs>(args: SelectSubset<T, SeguidoresFindUniqueArgs<ExtArgs>>): Prisma__SeguidoresClient<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Seguidores that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SeguidoresFindUniqueOrThrowArgs} args - Arguments to find a Seguidores
     * @example
     * // Get one Seguidores
     * const seguidores = await prisma.seguidores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SeguidoresFindUniqueOrThrowArgs>(args: SelectSubset<T, SeguidoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SeguidoresClient<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Seguidores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeguidoresFindFirstArgs} args - Arguments to find a Seguidores
     * @example
     * // Get one Seguidores
     * const seguidores = await prisma.seguidores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SeguidoresFindFirstArgs>(args?: SelectSubset<T, SeguidoresFindFirstArgs<ExtArgs>>): Prisma__SeguidoresClient<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Seguidores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeguidoresFindFirstOrThrowArgs} args - Arguments to find a Seguidores
     * @example
     * // Get one Seguidores
     * const seguidores = await prisma.seguidores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SeguidoresFindFirstOrThrowArgs>(args?: SelectSubset<T, SeguidoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__SeguidoresClient<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Seguidores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeguidoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Seguidores
     * const seguidores = await prisma.seguidores.findMany()
     * 
     * // Get first 10 Seguidores
     * const seguidores = await prisma.seguidores.findMany({ take: 10 })
     * 
     * // Only select the `usuarioSigueId`
     * const seguidoresWithUsuarioSigueIdOnly = await prisma.seguidores.findMany({ select: { usuarioSigueId: true } })
     * 
     */
    findMany<T extends SeguidoresFindManyArgs>(args?: SelectSubset<T, SeguidoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Seguidores.
     * @param {SeguidoresCreateArgs} args - Arguments to create a Seguidores.
     * @example
     * // Create one Seguidores
     * const Seguidores = await prisma.seguidores.create({
     *   data: {
     *     // ... data to create a Seguidores
     *   }
     * })
     * 
     */
    create<T extends SeguidoresCreateArgs>(args: SelectSubset<T, SeguidoresCreateArgs<ExtArgs>>): Prisma__SeguidoresClient<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Seguidores.
     * @param {SeguidoresCreateManyArgs} args - Arguments to create many Seguidores.
     * @example
     * // Create many Seguidores
     * const seguidores = await prisma.seguidores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SeguidoresCreateManyArgs>(args?: SelectSubset<T, SeguidoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Seguidores and returns the data saved in the database.
     * @param {SeguidoresCreateManyAndReturnArgs} args - Arguments to create many Seguidores.
     * @example
     * // Create many Seguidores
     * const seguidores = await prisma.seguidores.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Seguidores and only return the `usuarioSigueId`
     * const seguidoresWithUsuarioSigueIdOnly = await prisma.seguidores.createManyAndReturn({
     *   select: { usuarioSigueId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SeguidoresCreateManyAndReturnArgs>(args?: SelectSubset<T, SeguidoresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Seguidores.
     * @param {SeguidoresDeleteArgs} args - Arguments to delete one Seguidores.
     * @example
     * // Delete one Seguidores
     * const Seguidores = await prisma.seguidores.delete({
     *   where: {
     *     // ... filter to delete one Seguidores
     *   }
     * })
     * 
     */
    delete<T extends SeguidoresDeleteArgs>(args: SelectSubset<T, SeguidoresDeleteArgs<ExtArgs>>): Prisma__SeguidoresClient<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Seguidores.
     * @param {SeguidoresUpdateArgs} args - Arguments to update one Seguidores.
     * @example
     * // Update one Seguidores
     * const seguidores = await prisma.seguidores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SeguidoresUpdateArgs>(args: SelectSubset<T, SeguidoresUpdateArgs<ExtArgs>>): Prisma__SeguidoresClient<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Seguidores.
     * @param {SeguidoresDeleteManyArgs} args - Arguments to filter Seguidores to delete.
     * @example
     * // Delete a few Seguidores
     * const { count } = await prisma.seguidores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SeguidoresDeleteManyArgs>(args?: SelectSubset<T, SeguidoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Seguidores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeguidoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Seguidores
     * const seguidores = await prisma.seguidores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SeguidoresUpdateManyArgs>(args: SelectSubset<T, SeguidoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Seguidores and returns the data updated in the database.
     * @param {SeguidoresUpdateManyAndReturnArgs} args - Arguments to update many Seguidores.
     * @example
     * // Update many Seguidores
     * const seguidores = await prisma.seguidores.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Seguidores and only return the `usuarioSigueId`
     * const seguidoresWithUsuarioSigueIdOnly = await prisma.seguidores.updateManyAndReturn({
     *   select: { usuarioSigueId: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SeguidoresUpdateManyAndReturnArgs>(args: SelectSubset<T, SeguidoresUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Seguidores.
     * @param {SeguidoresUpsertArgs} args - Arguments to update or create a Seguidores.
     * @example
     * // Update or create a Seguidores
     * const seguidores = await prisma.seguidores.upsert({
     *   create: {
     *     // ... data to create a Seguidores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Seguidores we want to update
     *   }
     * })
     */
    upsert<T extends SeguidoresUpsertArgs>(args: SelectSubset<T, SeguidoresUpsertArgs<ExtArgs>>): Prisma__SeguidoresClient<$Result.GetResult<Prisma.$SeguidoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Seguidores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeguidoresCountArgs} args - Arguments to filter Seguidores to count.
     * @example
     * // Count the number of Seguidores
     * const count = await prisma.seguidores.count({
     *   where: {
     *     // ... the filter for the Seguidores we want to count
     *   }
     * })
    **/
    count<T extends SeguidoresCountArgs>(
      args?: Subset<T, SeguidoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SeguidoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Seguidores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeguidoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SeguidoresAggregateArgs>(args: Subset<T, SeguidoresAggregateArgs>): Prisma.PrismaPromise<GetSeguidoresAggregateType<T>>

    /**
     * Group by Seguidores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SeguidoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SeguidoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SeguidoresGroupByArgs['orderBy'] }
        : { orderBy?: SeguidoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SeguidoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSeguidoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Seguidores model
   */
  readonly fields: SeguidoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Seguidores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SeguidoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarioSigue<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuarioSeguido<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Seguidores model
   */
  interface SeguidoresFieldRefs {
    readonly usuarioSigueId: FieldRef<"Seguidores", 'Int'>
    readonly usuarioSeguidoId: FieldRef<"Seguidores", 'Int'>
    readonly fecha: FieldRef<"Seguidores", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Seguidores findUnique
   */
  export type SeguidoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    /**
     * Filter, which Seguidores to fetch.
     */
    where: SeguidoresWhereUniqueInput
  }

  /**
   * Seguidores findUniqueOrThrow
   */
  export type SeguidoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    /**
     * Filter, which Seguidores to fetch.
     */
    where: SeguidoresWhereUniqueInput
  }

  /**
   * Seguidores findFirst
   */
  export type SeguidoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    /**
     * Filter, which Seguidores to fetch.
     */
    where?: SeguidoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seguidores to fetch.
     */
    orderBy?: SeguidoresOrderByWithRelationInput | SeguidoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Seguidores.
     */
    cursor?: SeguidoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seguidores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seguidores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Seguidores.
     */
    distinct?: SeguidoresScalarFieldEnum | SeguidoresScalarFieldEnum[]
  }

  /**
   * Seguidores findFirstOrThrow
   */
  export type SeguidoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    /**
     * Filter, which Seguidores to fetch.
     */
    where?: SeguidoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seguidores to fetch.
     */
    orderBy?: SeguidoresOrderByWithRelationInput | SeguidoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Seguidores.
     */
    cursor?: SeguidoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seguidores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seguidores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Seguidores.
     */
    distinct?: SeguidoresScalarFieldEnum | SeguidoresScalarFieldEnum[]
  }

  /**
   * Seguidores findMany
   */
  export type SeguidoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    /**
     * Filter, which Seguidores to fetch.
     */
    where?: SeguidoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Seguidores to fetch.
     */
    orderBy?: SeguidoresOrderByWithRelationInput | SeguidoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Seguidores.
     */
    cursor?: SeguidoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Seguidores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Seguidores.
     */
    skip?: number
    distinct?: SeguidoresScalarFieldEnum | SeguidoresScalarFieldEnum[]
  }

  /**
   * Seguidores create
   */
  export type SeguidoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    /**
     * The data needed to create a Seguidores.
     */
    data: XOR<SeguidoresCreateInput, SeguidoresUncheckedCreateInput>
  }

  /**
   * Seguidores createMany
   */
  export type SeguidoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Seguidores.
     */
    data: SeguidoresCreateManyInput | SeguidoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Seguidores createManyAndReturn
   */
  export type SeguidoresCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * The data used to create many Seguidores.
     */
    data: SeguidoresCreateManyInput | SeguidoresCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Seguidores update
   */
  export type SeguidoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    /**
     * The data needed to update a Seguidores.
     */
    data: XOR<SeguidoresUpdateInput, SeguidoresUncheckedUpdateInput>
    /**
     * Choose, which Seguidores to update.
     */
    where: SeguidoresWhereUniqueInput
  }

  /**
   * Seguidores updateMany
   */
  export type SeguidoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Seguidores.
     */
    data: XOR<SeguidoresUpdateManyMutationInput, SeguidoresUncheckedUpdateManyInput>
    /**
     * Filter which Seguidores to update
     */
    where?: SeguidoresWhereInput
    /**
     * Limit how many Seguidores to update.
     */
    limit?: number
  }

  /**
   * Seguidores updateManyAndReturn
   */
  export type SeguidoresUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * The data used to update Seguidores.
     */
    data: XOR<SeguidoresUpdateManyMutationInput, SeguidoresUncheckedUpdateManyInput>
    /**
     * Filter which Seguidores to update
     */
    where?: SeguidoresWhereInput
    /**
     * Limit how many Seguidores to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Seguidores upsert
   */
  export type SeguidoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    /**
     * The filter to search for the Seguidores to update in case it exists.
     */
    where: SeguidoresWhereUniqueInput
    /**
     * In case the Seguidores found by the `where` argument doesn't exist, create a new Seguidores with this data.
     */
    create: XOR<SeguidoresCreateInput, SeguidoresUncheckedCreateInput>
    /**
     * In case the Seguidores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SeguidoresUpdateInput, SeguidoresUncheckedUpdateInput>
  }

  /**
   * Seguidores delete
   */
  export type SeguidoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
    /**
     * Filter which Seguidores to delete.
     */
    where: SeguidoresWhereUniqueInput
  }

  /**
   * Seguidores deleteMany
   */
  export type SeguidoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Seguidores to delete
     */
    where?: SeguidoresWhereInput
    /**
     * Limit how many Seguidores to delete.
     */
    limit?: number
  }

  /**
   * Seguidores without action
   */
  export type SeguidoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seguidores
     */
    select?: SeguidoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Seguidores
     */
    omit?: SeguidoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SeguidoresInclude<ExtArgs> | null
  }


  /**
   * Model MetricasDiarias
   */

  export type AggregateMetricasDiarias = {
    _count: MetricasDiariasCountAggregateOutputType | null
    _avg: MetricasDiariasAvgAggregateOutputType | null
    _sum: MetricasDiariasSumAggregateOutputType | null
    _min: MetricasDiariasMinAggregateOutputType | null
    _max: MetricasDiariasMaxAggregateOutputType | null
  }

  export type MetricasDiariasAvgAggregateOutputType = {
    id: number | null
    usuariosActivos: number | null
    nuevosUsuarios: number | null
    productosCreados: number | null
    transaccionesCompletadas: number | null
    mensajesEnviados: number | null
  }

  export type MetricasDiariasSumAggregateOutputType = {
    id: number | null
    usuariosActivos: number | null
    nuevosUsuarios: number | null
    productosCreados: number | null
    transaccionesCompletadas: number | null
    mensajesEnviados: number | null
  }

  export type MetricasDiariasMinAggregateOutputType = {
    id: number | null
    fechaMetricas: Date | null
    usuariosActivos: number | null
    nuevosUsuarios: number | null
    productosCreados: number | null
    transaccionesCompletadas: number | null
    mensajesEnviados: number | null
  }

  export type MetricasDiariasMaxAggregateOutputType = {
    id: number | null
    fechaMetricas: Date | null
    usuariosActivos: number | null
    nuevosUsuarios: number | null
    productosCreados: number | null
    transaccionesCompletadas: number | null
    mensajesEnviados: number | null
  }

  export type MetricasDiariasCountAggregateOutputType = {
    id: number
    fechaMetricas: number
    usuariosActivos: number
    nuevosUsuarios: number
    productosCreados: number
    transaccionesCompletadas: number
    mensajesEnviados: number
    _all: number
  }


  export type MetricasDiariasAvgAggregateInputType = {
    id?: true
    usuariosActivos?: true
    nuevosUsuarios?: true
    productosCreados?: true
    transaccionesCompletadas?: true
    mensajesEnviados?: true
  }

  export type MetricasDiariasSumAggregateInputType = {
    id?: true
    usuariosActivos?: true
    nuevosUsuarios?: true
    productosCreados?: true
    transaccionesCompletadas?: true
    mensajesEnviados?: true
  }

  export type MetricasDiariasMinAggregateInputType = {
    id?: true
    fechaMetricas?: true
    usuariosActivos?: true
    nuevosUsuarios?: true
    productosCreados?: true
    transaccionesCompletadas?: true
    mensajesEnviados?: true
  }

  export type MetricasDiariasMaxAggregateInputType = {
    id?: true
    fechaMetricas?: true
    usuariosActivos?: true
    nuevosUsuarios?: true
    productosCreados?: true
    transaccionesCompletadas?: true
    mensajesEnviados?: true
  }

  export type MetricasDiariasCountAggregateInputType = {
    id?: true
    fechaMetricas?: true
    usuariosActivos?: true
    nuevosUsuarios?: true
    productosCreados?: true
    transaccionesCompletadas?: true
    mensajesEnviados?: true
    _all?: true
  }

  export type MetricasDiariasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MetricasDiarias to aggregate.
     */
    where?: MetricasDiariasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetricasDiarias to fetch.
     */
    orderBy?: MetricasDiariasOrderByWithRelationInput | MetricasDiariasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MetricasDiariasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetricasDiarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetricasDiarias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MetricasDiarias
    **/
    _count?: true | MetricasDiariasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MetricasDiariasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MetricasDiariasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MetricasDiariasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MetricasDiariasMaxAggregateInputType
  }

  export type GetMetricasDiariasAggregateType<T extends MetricasDiariasAggregateArgs> = {
        [P in keyof T & keyof AggregateMetricasDiarias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMetricasDiarias[P]>
      : GetScalarType<T[P], AggregateMetricasDiarias[P]>
  }




  export type MetricasDiariasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MetricasDiariasWhereInput
    orderBy?: MetricasDiariasOrderByWithAggregationInput | MetricasDiariasOrderByWithAggregationInput[]
    by: MetricasDiariasScalarFieldEnum[] | MetricasDiariasScalarFieldEnum
    having?: MetricasDiariasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MetricasDiariasCountAggregateInputType | true
    _avg?: MetricasDiariasAvgAggregateInputType
    _sum?: MetricasDiariasSumAggregateInputType
    _min?: MetricasDiariasMinAggregateInputType
    _max?: MetricasDiariasMaxAggregateInputType
  }

  export type MetricasDiariasGroupByOutputType = {
    id: number
    fechaMetricas: Date
    usuariosActivos: number
    nuevosUsuarios: number
    productosCreados: number
    transaccionesCompletadas: number
    mensajesEnviados: number
    _count: MetricasDiariasCountAggregateOutputType | null
    _avg: MetricasDiariasAvgAggregateOutputType | null
    _sum: MetricasDiariasSumAggregateOutputType | null
    _min: MetricasDiariasMinAggregateOutputType | null
    _max: MetricasDiariasMaxAggregateOutputType | null
  }

  type GetMetricasDiariasGroupByPayload<T extends MetricasDiariasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MetricasDiariasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MetricasDiariasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MetricasDiariasGroupByOutputType[P]>
            : GetScalarType<T[P], MetricasDiariasGroupByOutputType[P]>
        }
      >
    >


  export type MetricasDiariasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaMetricas?: boolean
    usuariosActivos?: boolean
    nuevosUsuarios?: boolean
    productosCreados?: boolean
    transaccionesCompletadas?: boolean
    mensajesEnviados?: boolean
  }, ExtArgs["result"]["metricasDiarias"]>

  export type MetricasDiariasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaMetricas?: boolean
    usuariosActivos?: boolean
    nuevosUsuarios?: boolean
    productosCreados?: boolean
    transaccionesCompletadas?: boolean
    mensajesEnviados?: boolean
  }, ExtArgs["result"]["metricasDiarias"]>

  export type MetricasDiariasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fechaMetricas?: boolean
    usuariosActivos?: boolean
    nuevosUsuarios?: boolean
    productosCreados?: boolean
    transaccionesCompletadas?: boolean
    mensajesEnviados?: boolean
  }, ExtArgs["result"]["metricasDiarias"]>

  export type MetricasDiariasSelectScalar = {
    id?: boolean
    fechaMetricas?: boolean
    usuariosActivos?: boolean
    nuevosUsuarios?: boolean
    productosCreados?: boolean
    transaccionesCompletadas?: boolean
    mensajesEnviados?: boolean
  }

  export type MetricasDiariasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fechaMetricas" | "usuariosActivos" | "nuevosUsuarios" | "productosCreados" | "transaccionesCompletadas" | "mensajesEnviados", ExtArgs["result"]["metricasDiarias"]>

  export type $MetricasDiariasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MetricasDiarias"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fechaMetricas: Date
      usuariosActivos: number
      nuevosUsuarios: number
      productosCreados: number
      transaccionesCompletadas: number
      mensajesEnviados: number
    }, ExtArgs["result"]["metricasDiarias"]>
    composites: {}
  }

  type MetricasDiariasGetPayload<S extends boolean | null | undefined | MetricasDiariasDefaultArgs> = $Result.GetResult<Prisma.$MetricasDiariasPayload, S>

  type MetricasDiariasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MetricasDiariasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MetricasDiariasCountAggregateInputType | true
    }

  export interface MetricasDiariasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MetricasDiarias'], meta: { name: 'MetricasDiarias' } }
    /**
     * Find zero or one MetricasDiarias that matches the filter.
     * @param {MetricasDiariasFindUniqueArgs} args - Arguments to find a MetricasDiarias
     * @example
     * // Get one MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MetricasDiariasFindUniqueArgs>(args: SelectSubset<T, MetricasDiariasFindUniqueArgs<ExtArgs>>): Prisma__MetricasDiariasClient<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MetricasDiarias that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MetricasDiariasFindUniqueOrThrowArgs} args - Arguments to find a MetricasDiarias
     * @example
     * // Get one MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MetricasDiariasFindUniqueOrThrowArgs>(args: SelectSubset<T, MetricasDiariasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MetricasDiariasClient<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MetricasDiarias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasDiariasFindFirstArgs} args - Arguments to find a MetricasDiarias
     * @example
     * // Get one MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MetricasDiariasFindFirstArgs>(args?: SelectSubset<T, MetricasDiariasFindFirstArgs<ExtArgs>>): Prisma__MetricasDiariasClient<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MetricasDiarias that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasDiariasFindFirstOrThrowArgs} args - Arguments to find a MetricasDiarias
     * @example
     * // Get one MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MetricasDiariasFindFirstOrThrowArgs>(args?: SelectSubset<T, MetricasDiariasFindFirstOrThrowArgs<ExtArgs>>): Prisma__MetricasDiariasClient<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MetricasDiarias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasDiariasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.findMany()
     * 
     * // Get first 10 MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const metricasDiariasWithIdOnly = await prisma.metricasDiarias.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MetricasDiariasFindManyArgs>(args?: SelectSubset<T, MetricasDiariasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MetricasDiarias.
     * @param {MetricasDiariasCreateArgs} args - Arguments to create a MetricasDiarias.
     * @example
     * // Create one MetricasDiarias
     * const MetricasDiarias = await prisma.metricasDiarias.create({
     *   data: {
     *     // ... data to create a MetricasDiarias
     *   }
     * })
     * 
     */
    create<T extends MetricasDiariasCreateArgs>(args: SelectSubset<T, MetricasDiariasCreateArgs<ExtArgs>>): Prisma__MetricasDiariasClient<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MetricasDiarias.
     * @param {MetricasDiariasCreateManyArgs} args - Arguments to create many MetricasDiarias.
     * @example
     * // Create many MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MetricasDiariasCreateManyArgs>(args?: SelectSubset<T, MetricasDiariasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MetricasDiarias and returns the data saved in the database.
     * @param {MetricasDiariasCreateManyAndReturnArgs} args - Arguments to create many MetricasDiarias.
     * @example
     * // Create many MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MetricasDiarias and only return the `id`
     * const metricasDiariasWithIdOnly = await prisma.metricasDiarias.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MetricasDiariasCreateManyAndReturnArgs>(args?: SelectSubset<T, MetricasDiariasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MetricasDiarias.
     * @param {MetricasDiariasDeleteArgs} args - Arguments to delete one MetricasDiarias.
     * @example
     * // Delete one MetricasDiarias
     * const MetricasDiarias = await prisma.metricasDiarias.delete({
     *   where: {
     *     // ... filter to delete one MetricasDiarias
     *   }
     * })
     * 
     */
    delete<T extends MetricasDiariasDeleteArgs>(args: SelectSubset<T, MetricasDiariasDeleteArgs<ExtArgs>>): Prisma__MetricasDiariasClient<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MetricasDiarias.
     * @param {MetricasDiariasUpdateArgs} args - Arguments to update one MetricasDiarias.
     * @example
     * // Update one MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MetricasDiariasUpdateArgs>(args: SelectSubset<T, MetricasDiariasUpdateArgs<ExtArgs>>): Prisma__MetricasDiariasClient<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MetricasDiarias.
     * @param {MetricasDiariasDeleteManyArgs} args - Arguments to filter MetricasDiarias to delete.
     * @example
     * // Delete a few MetricasDiarias
     * const { count } = await prisma.metricasDiarias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MetricasDiariasDeleteManyArgs>(args?: SelectSubset<T, MetricasDiariasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MetricasDiarias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasDiariasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MetricasDiariasUpdateManyArgs>(args: SelectSubset<T, MetricasDiariasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MetricasDiarias and returns the data updated in the database.
     * @param {MetricasDiariasUpdateManyAndReturnArgs} args - Arguments to update many MetricasDiarias.
     * @example
     * // Update many MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MetricasDiarias and only return the `id`
     * const metricasDiariasWithIdOnly = await prisma.metricasDiarias.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MetricasDiariasUpdateManyAndReturnArgs>(args: SelectSubset<T, MetricasDiariasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MetricasDiarias.
     * @param {MetricasDiariasUpsertArgs} args - Arguments to update or create a MetricasDiarias.
     * @example
     * // Update or create a MetricasDiarias
     * const metricasDiarias = await prisma.metricasDiarias.upsert({
     *   create: {
     *     // ... data to create a MetricasDiarias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MetricasDiarias we want to update
     *   }
     * })
     */
    upsert<T extends MetricasDiariasUpsertArgs>(args: SelectSubset<T, MetricasDiariasUpsertArgs<ExtArgs>>): Prisma__MetricasDiariasClient<$Result.GetResult<Prisma.$MetricasDiariasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MetricasDiarias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasDiariasCountArgs} args - Arguments to filter MetricasDiarias to count.
     * @example
     * // Count the number of MetricasDiarias
     * const count = await prisma.metricasDiarias.count({
     *   where: {
     *     // ... the filter for the MetricasDiarias we want to count
     *   }
     * })
    **/
    count<T extends MetricasDiariasCountArgs>(
      args?: Subset<T, MetricasDiariasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MetricasDiariasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MetricasDiarias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasDiariasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MetricasDiariasAggregateArgs>(args: Subset<T, MetricasDiariasAggregateArgs>): Prisma.PrismaPromise<GetMetricasDiariasAggregateType<T>>

    /**
     * Group by MetricasDiarias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasDiariasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MetricasDiariasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MetricasDiariasGroupByArgs['orderBy'] }
        : { orderBy?: MetricasDiariasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MetricasDiariasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMetricasDiariasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MetricasDiarias model
   */
  readonly fields: MetricasDiariasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MetricasDiarias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MetricasDiariasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MetricasDiarias model
   */
  interface MetricasDiariasFieldRefs {
    readonly id: FieldRef<"MetricasDiarias", 'Int'>
    readonly fechaMetricas: FieldRef<"MetricasDiarias", 'DateTime'>
    readonly usuariosActivos: FieldRef<"MetricasDiarias", 'Int'>
    readonly nuevosUsuarios: FieldRef<"MetricasDiarias", 'Int'>
    readonly productosCreados: FieldRef<"MetricasDiarias", 'Int'>
    readonly transaccionesCompletadas: FieldRef<"MetricasDiarias", 'Int'>
    readonly mensajesEnviados: FieldRef<"MetricasDiarias", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MetricasDiarias findUnique
   */
  export type MetricasDiariasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * Filter, which MetricasDiarias to fetch.
     */
    where: MetricasDiariasWhereUniqueInput
  }

  /**
   * MetricasDiarias findUniqueOrThrow
   */
  export type MetricasDiariasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * Filter, which MetricasDiarias to fetch.
     */
    where: MetricasDiariasWhereUniqueInput
  }

  /**
   * MetricasDiarias findFirst
   */
  export type MetricasDiariasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * Filter, which MetricasDiarias to fetch.
     */
    where?: MetricasDiariasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetricasDiarias to fetch.
     */
    orderBy?: MetricasDiariasOrderByWithRelationInput | MetricasDiariasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MetricasDiarias.
     */
    cursor?: MetricasDiariasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetricasDiarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetricasDiarias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MetricasDiarias.
     */
    distinct?: MetricasDiariasScalarFieldEnum | MetricasDiariasScalarFieldEnum[]
  }

  /**
   * MetricasDiarias findFirstOrThrow
   */
  export type MetricasDiariasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * Filter, which MetricasDiarias to fetch.
     */
    where?: MetricasDiariasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetricasDiarias to fetch.
     */
    orderBy?: MetricasDiariasOrderByWithRelationInput | MetricasDiariasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MetricasDiarias.
     */
    cursor?: MetricasDiariasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetricasDiarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetricasDiarias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MetricasDiarias.
     */
    distinct?: MetricasDiariasScalarFieldEnum | MetricasDiariasScalarFieldEnum[]
  }

  /**
   * MetricasDiarias findMany
   */
  export type MetricasDiariasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * Filter, which MetricasDiarias to fetch.
     */
    where?: MetricasDiariasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetricasDiarias to fetch.
     */
    orderBy?: MetricasDiariasOrderByWithRelationInput | MetricasDiariasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MetricasDiarias.
     */
    cursor?: MetricasDiariasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetricasDiarias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetricasDiarias.
     */
    skip?: number
    distinct?: MetricasDiariasScalarFieldEnum | MetricasDiariasScalarFieldEnum[]
  }

  /**
   * MetricasDiarias create
   */
  export type MetricasDiariasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * The data needed to create a MetricasDiarias.
     */
    data: XOR<MetricasDiariasCreateInput, MetricasDiariasUncheckedCreateInput>
  }

  /**
   * MetricasDiarias createMany
   */
  export type MetricasDiariasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MetricasDiarias.
     */
    data: MetricasDiariasCreateManyInput | MetricasDiariasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MetricasDiarias createManyAndReturn
   */
  export type MetricasDiariasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * The data used to create many MetricasDiarias.
     */
    data: MetricasDiariasCreateManyInput | MetricasDiariasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MetricasDiarias update
   */
  export type MetricasDiariasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * The data needed to update a MetricasDiarias.
     */
    data: XOR<MetricasDiariasUpdateInput, MetricasDiariasUncheckedUpdateInput>
    /**
     * Choose, which MetricasDiarias to update.
     */
    where: MetricasDiariasWhereUniqueInput
  }

  /**
   * MetricasDiarias updateMany
   */
  export type MetricasDiariasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MetricasDiarias.
     */
    data: XOR<MetricasDiariasUpdateManyMutationInput, MetricasDiariasUncheckedUpdateManyInput>
    /**
     * Filter which MetricasDiarias to update
     */
    where?: MetricasDiariasWhereInput
    /**
     * Limit how many MetricasDiarias to update.
     */
    limit?: number
  }

  /**
   * MetricasDiarias updateManyAndReturn
   */
  export type MetricasDiariasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * The data used to update MetricasDiarias.
     */
    data: XOR<MetricasDiariasUpdateManyMutationInput, MetricasDiariasUncheckedUpdateManyInput>
    /**
     * Filter which MetricasDiarias to update
     */
    where?: MetricasDiariasWhereInput
    /**
     * Limit how many MetricasDiarias to update.
     */
    limit?: number
  }

  /**
   * MetricasDiarias upsert
   */
  export type MetricasDiariasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * The filter to search for the MetricasDiarias to update in case it exists.
     */
    where: MetricasDiariasWhereUniqueInput
    /**
     * In case the MetricasDiarias found by the `where` argument doesn't exist, create a new MetricasDiarias with this data.
     */
    create: XOR<MetricasDiariasCreateInput, MetricasDiariasUncheckedCreateInput>
    /**
     * In case the MetricasDiarias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MetricasDiariasUpdateInput, MetricasDiariasUncheckedUpdateInput>
  }

  /**
   * MetricasDiarias delete
   */
  export type MetricasDiariasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
    /**
     * Filter which MetricasDiarias to delete.
     */
    where: MetricasDiariasWhereUniqueInput
  }

  /**
   * MetricasDiarias deleteMany
   */
  export type MetricasDiariasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MetricasDiarias to delete
     */
    where?: MetricasDiariasWhereInput
    /**
     * Limit how many MetricasDiarias to delete.
     */
    limit?: number
  }

  /**
   * MetricasDiarias without action
   */
  export type MetricasDiariasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasDiarias
     */
    select?: MetricasDiariasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MetricasDiarias
     */
    omit?: MetricasDiariasOmit<ExtArgs> | null
  }


  /**
   * Model Favoritos
   */

  export type AggregateFavoritos = {
    _count: FavoritosCountAggregateOutputType | null
    _avg: FavoritosAvgAggregateOutputType | null
    _sum: FavoritosSumAggregateOutputType | null
    _min: FavoritosMinAggregateOutputType | null
    _max: FavoritosMaxAggregateOutputType | null
  }

  export type FavoritosAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    publicacionId: number | null
  }

  export type FavoritosSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    publicacionId: number | null
  }

  export type FavoritosMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    publicacionId: number | null
    fecha: Date | null
  }

  export type FavoritosMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    publicacionId: number | null
    fecha: Date | null
  }

  export type FavoritosCountAggregateOutputType = {
    id: number
    usuarioId: number
    publicacionId: number
    fecha: number
    _all: number
  }


  export type FavoritosAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    publicacionId?: true
  }

  export type FavoritosSumAggregateInputType = {
    id?: true
    usuarioId?: true
    publicacionId?: true
  }

  export type FavoritosMinAggregateInputType = {
    id?: true
    usuarioId?: true
    publicacionId?: true
    fecha?: true
  }

  export type FavoritosMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    publicacionId?: true
    fecha?: true
  }

  export type FavoritosCountAggregateInputType = {
    id?: true
    usuarioId?: true
    publicacionId?: true
    fecha?: true
    _all?: true
  }

  export type FavoritosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favoritos to aggregate.
     */
    where?: FavoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favoritos
    **/
    _count?: true | FavoritosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FavoritosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FavoritosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoritosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoritosMaxAggregateInputType
  }

  export type GetFavoritosAggregateType<T extends FavoritosAggregateArgs> = {
        [P in keyof T & keyof AggregateFavoritos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavoritos[P]>
      : GetScalarType<T[P], AggregateFavoritos[P]>
  }




  export type FavoritosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritosWhereInput
    orderBy?: FavoritosOrderByWithAggregationInput | FavoritosOrderByWithAggregationInput[]
    by: FavoritosScalarFieldEnum[] | FavoritosScalarFieldEnum
    having?: FavoritosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoritosCountAggregateInputType | true
    _avg?: FavoritosAvgAggregateInputType
    _sum?: FavoritosSumAggregateInputType
    _min?: FavoritosMinAggregateInputType
    _max?: FavoritosMaxAggregateInputType
  }

  export type FavoritosGroupByOutputType = {
    id: number
    usuarioId: number
    publicacionId: number
    fecha: Date
    _count: FavoritosCountAggregateOutputType | null
    _avg: FavoritosAvgAggregateOutputType | null
    _sum: FavoritosSumAggregateOutputType | null
    _min: FavoritosMinAggregateOutputType | null
    _max: FavoritosMaxAggregateOutputType | null
  }

  type GetFavoritosGroupByPayload<T extends FavoritosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoritosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoritosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoritosGroupByOutputType[P]>
            : GetScalarType<T[P], FavoritosGroupByOutputType[P]>
        }
      >
    >


  export type FavoritosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    publicacionId?: boolean
    fecha?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    publicacion?: boolean | PublicacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoritos"]>

  export type FavoritosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    publicacionId?: boolean
    fecha?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    publicacion?: boolean | PublicacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoritos"]>

  export type FavoritosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    publicacionId?: boolean
    fecha?: boolean
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    publicacion?: boolean | PublicacionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoritos"]>

  export type FavoritosSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    publicacionId?: boolean
    fecha?: boolean
  }

  export type FavoritosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuarioId" | "publicacionId" | "fecha", ExtArgs["result"]["favoritos"]>
  export type FavoritosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    publicacion?: boolean | PublicacionesDefaultArgs<ExtArgs>
  }
  export type FavoritosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    publicacion?: boolean | PublicacionesDefaultArgs<ExtArgs>
  }
  export type FavoritosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | CuentasDefaultArgs<ExtArgs>
    publicacion?: boolean | PublicacionesDefaultArgs<ExtArgs>
  }

  export type $FavoritosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favoritos"
    objects: {
      usuario: Prisma.$CuentasPayload<ExtArgs>
      publicacion: Prisma.$PublicacionesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      publicacionId: number
      fecha: Date
    }, ExtArgs["result"]["favoritos"]>
    composites: {}
  }

  type FavoritosGetPayload<S extends boolean | null | undefined | FavoritosDefaultArgs> = $Result.GetResult<Prisma.$FavoritosPayload, S>

  type FavoritosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FavoritosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FavoritosCountAggregateInputType | true
    }

  export interface FavoritosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favoritos'], meta: { name: 'Favoritos' } }
    /**
     * Find zero or one Favoritos that matches the filter.
     * @param {FavoritosFindUniqueArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoritosFindUniqueArgs>(args: SelectSubset<T, FavoritosFindUniqueArgs<ExtArgs>>): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Favoritos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FavoritosFindUniqueOrThrowArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoritosFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoritosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosFindFirstArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoritosFindFirstArgs>(args?: SelectSubset<T, FavoritosFindFirstArgs<ExtArgs>>): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Favoritos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosFindFirstOrThrowArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoritosFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoritosFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favoritos
     * const favoritos = await prisma.favoritos.findMany()
     * 
     * // Get first 10 Favoritos
     * const favoritos = await prisma.favoritos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoritosWithIdOnly = await prisma.favoritos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoritosFindManyArgs>(args?: SelectSubset<T, FavoritosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Favoritos.
     * @param {FavoritosCreateArgs} args - Arguments to create a Favoritos.
     * @example
     * // Create one Favoritos
     * const Favoritos = await prisma.favoritos.create({
     *   data: {
     *     // ... data to create a Favoritos
     *   }
     * })
     * 
     */
    create<T extends FavoritosCreateArgs>(args: SelectSubset<T, FavoritosCreateArgs<ExtArgs>>): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Favoritos.
     * @param {FavoritosCreateManyArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favoritos = await prisma.favoritos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoritosCreateManyArgs>(args?: SelectSubset<T, FavoritosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favoritos and returns the data saved in the database.
     * @param {FavoritosCreateManyAndReturnArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favoritos = await prisma.favoritos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favoritos and only return the `id`
     * const favoritosWithIdOnly = await prisma.favoritos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FavoritosCreateManyAndReturnArgs>(args?: SelectSubset<T, FavoritosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Favoritos.
     * @param {FavoritosDeleteArgs} args - Arguments to delete one Favoritos.
     * @example
     * // Delete one Favoritos
     * const Favoritos = await prisma.favoritos.delete({
     *   where: {
     *     // ... filter to delete one Favoritos
     *   }
     * })
     * 
     */
    delete<T extends FavoritosDeleteArgs>(args: SelectSubset<T, FavoritosDeleteArgs<ExtArgs>>): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Favoritos.
     * @param {FavoritosUpdateArgs} args - Arguments to update one Favoritos.
     * @example
     * // Update one Favoritos
     * const favoritos = await prisma.favoritos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoritosUpdateArgs>(args: SelectSubset<T, FavoritosUpdateArgs<ExtArgs>>): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Favoritos.
     * @param {FavoritosDeleteManyArgs} args - Arguments to filter Favoritos to delete.
     * @example
     * // Delete a few Favoritos
     * const { count } = await prisma.favoritos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoritosDeleteManyArgs>(args?: SelectSubset<T, FavoritosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favoritos
     * const favoritos = await prisma.favoritos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoritosUpdateManyArgs>(args: SelectSubset<T, FavoritosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoritos and returns the data updated in the database.
     * @param {FavoritosUpdateManyAndReturnArgs} args - Arguments to update many Favoritos.
     * @example
     * // Update many Favoritos
     * const favoritos = await prisma.favoritos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Favoritos and only return the `id`
     * const favoritosWithIdOnly = await prisma.favoritos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FavoritosUpdateManyAndReturnArgs>(args: SelectSubset<T, FavoritosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Favoritos.
     * @param {FavoritosUpsertArgs} args - Arguments to update or create a Favoritos.
     * @example
     * // Update or create a Favoritos
     * const favoritos = await prisma.favoritos.upsert({
     *   create: {
     *     // ... data to create a Favoritos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favoritos we want to update
     *   }
     * })
     */
    upsert<T extends FavoritosUpsertArgs>(args: SelectSubset<T, FavoritosUpsertArgs<ExtArgs>>): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosCountArgs} args - Arguments to filter Favoritos to count.
     * @example
     * // Count the number of Favoritos
     * const count = await prisma.favoritos.count({
     *   where: {
     *     // ... the filter for the Favoritos we want to count
     *   }
     * })
    **/
    count<T extends FavoritosCountArgs>(
      args?: Subset<T, FavoritosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoritosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoritosAggregateArgs>(args: Subset<T, FavoritosAggregateArgs>): Prisma.PrismaPromise<GetFavoritosAggregateType<T>>

    /**
     * Group by Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoritosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoritosGroupByArgs['orderBy'] }
        : { orderBy?: FavoritosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoritosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoritosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favoritos model
   */
  readonly fields: FavoritosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favoritos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoritosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends CuentasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CuentasDefaultArgs<ExtArgs>>): Prisma__CuentasClient<$Result.GetResult<Prisma.$CuentasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    publicacion<T extends PublicacionesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PublicacionesDefaultArgs<ExtArgs>>): Prisma__PublicacionesClient<$Result.GetResult<Prisma.$PublicacionesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Favoritos model
   */
  interface FavoritosFieldRefs {
    readonly id: FieldRef<"Favoritos", 'Int'>
    readonly usuarioId: FieldRef<"Favoritos", 'Int'>
    readonly publicacionId: FieldRef<"Favoritos", 'Int'>
    readonly fecha: FieldRef<"Favoritos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Favoritos findUnique
   */
  export type FavoritosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where: FavoritosWhereUniqueInput
  }

  /**
   * Favoritos findUniqueOrThrow
   */
  export type FavoritosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where: FavoritosWhereUniqueInput
  }

  /**
   * Favoritos findFirst
   */
  export type FavoritosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where?: FavoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoritos.
     */
    cursor?: FavoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoritos.
     */
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * Favoritos findFirstOrThrow
   */
  export type FavoritosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where?: FavoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoritos.
     */
    cursor?: FavoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoritos.
     */
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * Favoritos findMany
   */
  export type FavoritosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where?: FavoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favoritos.
     */
    cursor?: FavoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * Favoritos create
   */
  export type FavoritosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * The data needed to create a Favoritos.
     */
    data: XOR<FavoritosCreateInput, FavoritosUncheckedCreateInput>
  }

  /**
   * Favoritos createMany
   */
  export type FavoritosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favoritos.
     */
    data: FavoritosCreateManyInput | FavoritosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favoritos createManyAndReturn
   */
  export type FavoritosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * The data used to create many Favoritos.
     */
    data: FavoritosCreateManyInput | FavoritosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favoritos update
   */
  export type FavoritosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * The data needed to update a Favoritos.
     */
    data: XOR<FavoritosUpdateInput, FavoritosUncheckedUpdateInput>
    /**
     * Choose, which Favoritos to update.
     */
    where: FavoritosWhereUniqueInput
  }

  /**
   * Favoritos updateMany
   */
  export type FavoritosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favoritos.
     */
    data: XOR<FavoritosUpdateManyMutationInput, FavoritosUncheckedUpdateManyInput>
    /**
     * Filter which Favoritos to update
     */
    where?: FavoritosWhereInput
    /**
     * Limit how many Favoritos to update.
     */
    limit?: number
  }

  /**
   * Favoritos updateManyAndReturn
   */
  export type FavoritosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * The data used to update Favoritos.
     */
    data: XOR<FavoritosUpdateManyMutationInput, FavoritosUncheckedUpdateManyInput>
    /**
     * Filter which Favoritos to update
     */
    where?: FavoritosWhereInput
    /**
     * Limit how many Favoritos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favoritos upsert
   */
  export type FavoritosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * The filter to search for the Favoritos to update in case it exists.
     */
    where: FavoritosWhereUniqueInput
    /**
     * In case the Favoritos found by the `where` argument doesn't exist, create a new Favoritos with this data.
     */
    create: XOR<FavoritosCreateInput, FavoritosUncheckedCreateInput>
    /**
     * In case the Favoritos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoritosUpdateInput, FavoritosUncheckedUpdateInput>
  }

  /**
   * Favoritos delete
   */
  export type FavoritosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter which Favoritos to delete.
     */
    where: FavoritosWhereUniqueInput
  }

  /**
   * Favoritos deleteMany
   */
  export type FavoritosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favoritos to delete
     */
    where?: FavoritosWhereInput
    /**
     * Limit how many Favoritos to delete.
     */
    limit?: number
  }

  /**
   * Favoritos without action
   */
  export type FavoritosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Favoritos
     */
    omit?: FavoritosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CuentasScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    apellido: 'apellido',
    correo: 'correo',
    usuario: 'usuario',
    contrasena: 'contrasena',
    rolId: 'rolId',
    estadoId: 'estadoId',
    fechaRegistro: 'fechaRegistro',
    campus: 'campus',
    reputacion: 'reputacion'
  };

  export type CuentasScalarFieldEnum = (typeof CuentasScalarFieldEnum)[keyof typeof CuentasScalarFieldEnum]


  export const RolesScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type RolesScalarFieldEnum = (typeof RolesScalarFieldEnum)[keyof typeof RolesScalarFieldEnum]


  export const EstadosUsuarioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type EstadosUsuarioScalarFieldEnum = (typeof EstadosUsuarioScalarFieldEnum)[keyof typeof EstadosUsuarioScalarFieldEnum]


  export const CategoriasScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    categoriaPadreId: 'categoriaPadreId'
  };

  export type CategoriasScalarFieldEnum = (typeof CategoriasScalarFieldEnum)[keyof typeof CategoriasScalarFieldEnum]


  export const EstadosProductoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type EstadosProductoScalarFieldEnum = (typeof EstadosProductoScalarFieldEnum)[keyof typeof EstadosProductoScalarFieldEnum]


  export const ProductosScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    categoriaId: 'categoriaId',
    vendedorId: 'vendedorId',
    precioAnterior: 'precioAnterior',
    precioActual: 'precioActual',
    descripcion: 'descripcion',
    calificacion: 'calificacion',
    cantidad: 'cantidad',
    fechaAgregado: 'fechaAgregado',
    estadoId: 'estadoId'
  };

  export type ProductosScalarFieldEnum = (typeof ProductosScalarFieldEnum)[keyof typeof ProductosScalarFieldEnum]


  export const ImagenesProductoScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    urlImagen: 'urlImagen'
  };

  export type ImagenesProductoScalarFieldEnum = (typeof ImagenesProductoScalarFieldEnum)[keyof typeof ImagenesProductoScalarFieldEnum]


  export const EstadosTransaccionScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type EstadosTransaccionScalarFieldEnum = (typeof EstadosTransaccionScalarFieldEnum)[keyof typeof EstadosTransaccionScalarFieldEnum]


  export const TransaccionesScalarFieldEnum: {
    id: 'id',
    productoId: 'productoId',
    compradorId: 'compradorId',
    vendedorId: 'vendedorId',
    fecha: 'fecha',
    estadoId: 'estadoId'
  };

  export type TransaccionesScalarFieldEnum = (typeof TransaccionesScalarFieldEnum)[keyof typeof TransaccionesScalarFieldEnum]


  export const CalificacionesScalarFieldEnum: {
    id: 'id',
    transaccionId: 'transaccionId',
    calificadorId: 'calificadorId',
    calificadoId: 'calificadoId',
    puntuacion: 'puntuacion',
    comentario: 'comentario',
    fecha: 'fecha'
  };

  export type CalificacionesScalarFieldEnum = (typeof CalificacionesScalarFieldEnum)[keyof typeof CalificacionesScalarFieldEnum]


  export const CarritoScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    productoId: 'productoId',
    cantidad: 'cantidad'
  };

  export type CarritoScalarFieldEnum = (typeof CarritoScalarFieldEnum)[keyof typeof CarritoScalarFieldEnum]


  export const MensajesScalarFieldEnum: {
    id: 'id',
    remitenteId: 'remitenteId',
    destinatarioId: 'destinatarioId',
    contenido: 'contenido',
    fechaEnvio: 'fechaEnvio',
    leido: 'leido'
  };

  export type MensajesScalarFieldEnum = (typeof MensajesScalarFieldEnum)[keyof typeof MensajesScalarFieldEnum]


  export const EstadosReporteScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre'
  };

  export type EstadosReporteScalarFieldEnum = (typeof EstadosReporteScalarFieldEnum)[keyof typeof EstadosReporteScalarFieldEnum]


  export const ReportesScalarFieldEnum: {
    id: 'id',
    reportanteId: 'reportanteId',
    usuarioReportadoId: 'usuarioReportadoId',
    productoId: 'productoId',
    motivo: 'motivo',
    fecha: 'fecha',
    estadoId: 'estadoId'
  };

  export type ReportesScalarFieldEnum = (typeof ReportesScalarFieldEnum)[keyof typeof ReportesScalarFieldEnum]


  export const ActividadUsuarioScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    accion: 'accion',
    detalles: 'detalles',
    fecha: 'fecha'
  };

  export type ActividadUsuarioScalarFieldEnum = (typeof ActividadUsuarioScalarFieldEnum)[keyof typeof ActividadUsuarioScalarFieldEnum]


  export const NotificacionesScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    tipo: 'tipo',
    mensaje: 'mensaje',
    leido: 'leido',
    fecha: 'fecha'
  };

  export type NotificacionesScalarFieldEnum = (typeof NotificacionesScalarFieldEnum)[keyof typeof NotificacionesScalarFieldEnum]


  export const PublicacionesScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    cuerpo: 'cuerpo',
    usuarioId: 'usuarioId',
    estado: 'estado',
    fecha: 'fecha',
    visto: 'visto'
  };

  export type PublicacionesScalarFieldEnum = (typeof PublicacionesScalarFieldEnum)[keyof typeof PublicacionesScalarFieldEnum]


  export const ForosScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    creadorId: 'creadorId',
    fechaCreacion: 'fechaCreacion'
  };

  export type ForosScalarFieldEnum = (typeof ForosScalarFieldEnum)[keyof typeof ForosScalarFieldEnum]


  export const PublicacionesForoScalarFieldEnum: {
    id: 'id',
    foroId: 'foroId',
    autorId: 'autorId',
    titulo: 'titulo',
    contenido: 'contenido',
    fecha: 'fecha'
  };

  export type PublicacionesForoScalarFieldEnum = (typeof PublicacionesForoScalarFieldEnum)[keyof typeof PublicacionesForoScalarFieldEnum]


  export const ComentariosPublicacionScalarFieldEnum: {
    id: 'id',
    publicacionId: 'publicacionId',
    autorId: 'autorId',
    contenido: 'contenido',
    fecha: 'fecha'
  };

  export type ComentariosPublicacionScalarFieldEnum = (typeof ComentariosPublicacionScalarFieldEnum)[keyof typeof ComentariosPublicacionScalarFieldEnum]


  export const UbicacionesScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    nombreLugar: 'nombreLugar',
    descripcion: 'descripcion'
  };

  export type UbicacionesScalarFieldEnum = (typeof UbicacionesScalarFieldEnum)[keyof typeof UbicacionesScalarFieldEnum]


  export const ResumenUsuarioScalarFieldEnum: {
    usuarioId: 'usuarioId',
    totalProductos: 'totalProductos',
    totalVentas: 'totalVentas',
    totalCompras: 'totalCompras',
    promedioCalificacion: 'promedioCalificacion'
  };

  export type ResumenUsuarioScalarFieldEnum = (typeof ResumenUsuarioScalarFieldEnum)[keyof typeof ResumenUsuarioScalarFieldEnum]


  export const SeguidoresScalarFieldEnum: {
    usuarioSigueId: 'usuarioSigueId',
    usuarioSeguidoId: 'usuarioSeguidoId',
    fecha: 'fecha'
  };

  export type SeguidoresScalarFieldEnum = (typeof SeguidoresScalarFieldEnum)[keyof typeof SeguidoresScalarFieldEnum]


  export const MetricasDiariasScalarFieldEnum: {
    id: 'id',
    fechaMetricas: 'fechaMetricas',
    usuariosActivos: 'usuariosActivos',
    nuevosUsuarios: 'nuevosUsuarios',
    productosCreados: 'productosCreados',
    transaccionesCompletadas: 'transaccionesCompletadas',
    mensajesEnviados: 'mensajesEnviados'
  };

  export type MetricasDiariasScalarFieldEnum = (typeof MetricasDiariasScalarFieldEnum)[keyof typeof MetricasDiariasScalarFieldEnum]


  export const FavoritosScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    publicacionId: 'publicacionId',
    fecha: 'fecha'
  };

  export type FavoritosScalarFieldEnum = (typeof FavoritosScalarFieldEnum)[keyof typeof FavoritosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Bytes'
   */
  export type BytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes'>
    


  /**
   * Reference to a field of type 'Bytes[]'
   */
  export type ListBytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type CuentasWhereInput = {
    AND?: CuentasWhereInput | CuentasWhereInput[]
    OR?: CuentasWhereInput[]
    NOT?: CuentasWhereInput | CuentasWhereInput[]
    id?: IntFilter<"Cuentas"> | number
    nombre?: StringFilter<"Cuentas"> | string
    apellido?: StringNullableFilter<"Cuentas"> | string | null
    correo?: StringFilter<"Cuentas"> | string
    usuario?: StringFilter<"Cuentas"> | string
    contrasena?: StringFilter<"Cuentas"> | string
    rolId?: IntFilter<"Cuentas"> | number
    estadoId?: IntFilter<"Cuentas"> | number
    fechaRegistro?: DateTimeFilter<"Cuentas"> | Date | string
    campus?: StringNullableFilter<"Cuentas"> | string | null
    reputacion?: DecimalFilter<"Cuentas"> | Decimal | DecimalJsLike | number | string
    rol?: XOR<RolesScalarRelationFilter, RolesWhereInput>
    estado?: XOR<EstadosUsuarioScalarRelationFilter, EstadosUsuarioWhereInput>
    productos?: ProductosListRelationFilter
    transaccionesCompra?: TransaccionesListRelationFilter
    transaccionesVenta?: TransaccionesListRelationFilter
    calificacionesDadas?: CalificacionesListRelationFilter
    calificacionesRecibidas?: CalificacionesListRelationFilter
    carrito?: CarritoListRelationFilter
    actividades?: ActividadUsuarioListRelationFilter
    mensajesEnviados?: MensajesListRelationFilter
    mensajesRecibidos?: MensajesListRelationFilter
    reportes?: ReportesListRelationFilter
    reportesRecibidos?: ReportesListRelationFilter
    publicaciones?: PublicacionesListRelationFilter
    foros?: ForosListRelationFilter
    publicacionesForo?: PublicacionesForoListRelationFilter
    comentariosPublicacion?: ComentariosPublicacionListRelationFilter
    notificaciones?: NotificacionesListRelationFilter
    ubicaciones?: UbicacionesListRelationFilter
    resumenUsuario?: XOR<ResumenUsuarioNullableScalarRelationFilter, ResumenUsuarioWhereInput> | null
    siguiendo?: SeguidoresListRelationFilter
    seguidores?: SeguidoresListRelationFilter
    favoritos?: FavoritosListRelationFilter
  }

  export type CuentasOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrderInput | SortOrder
    correo?: SortOrder
    usuario?: SortOrder
    contrasena?: SortOrder
    rolId?: SortOrder
    estadoId?: SortOrder
    fechaRegistro?: SortOrder
    campus?: SortOrderInput | SortOrder
    reputacion?: SortOrder
    rol?: RolesOrderByWithRelationInput
    estado?: EstadosUsuarioOrderByWithRelationInput
    productos?: ProductosOrderByRelationAggregateInput
    transaccionesCompra?: TransaccionesOrderByRelationAggregateInput
    transaccionesVenta?: TransaccionesOrderByRelationAggregateInput
    calificacionesDadas?: CalificacionesOrderByRelationAggregateInput
    calificacionesRecibidas?: CalificacionesOrderByRelationAggregateInput
    carrito?: CarritoOrderByRelationAggregateInput
    actividades?: ActividadUsuarioOrderByRelationAggregateInput
    mensajesEnviados?: MensajesOrderByRelationAggregateInput
    mensajesRecibidos?: MensajesOrderByRelationAggregateInput
    reportes?: ReportesOrderByRelationAggregateInput
    reportesRecibidos?: ReportesOrderByRelationAggregateInput
    publicaciones?: PublicacionesOrderByRelationAggregateInput
    foros?: ForosOrderByRelationAggregateInput
    publicacionesForo?: PublicacionesForoOrderByRelationAggregateInput
    comentariosPublicacion?: ComentariosPublicacionOrderByRelationAggregateInput
    notificaciones?: NotificacionesOrderByRelationAggregateInput
    ubicaciones?: UbicacionesOrderByRelationAggregateInput
    resumenUsuario?: ResumenUsuarioOrderByWithRelationInput
    siguiendo?: SeguidoresOrderByRelationAggregateInput
    seguidores?: SeguidoresOrderByRelationAggregateInput
    favoritos?: FavoritosOrderByRelationAggregateInput
  }

  export type CuentasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    correo?: string
    usuario?: string
    AND?: CuentasWhereInput | CuentasWhereInput[]
    OR?: CuentasWhereInput[]
    NOT?: CuentasWhereInput | CuentasWhereInput[]
    nombre?: StringFilter<"Cuentas"> | string
    apellido?: StringNullableFilter<"Cuentas"> | string | null
    contrasena?: StringFilter<"Cuentas"> | string
    rolId?: IntFilter<"Cuentas"> | number
    estadoId?: IntFilter<"Cuentas"> | number
    fechaRegistro?: DateTimeFilter<"Cuentas"> | Date | string
    campus?: StringNullableFilter<"Cuentas"> | string | null
    reputacion?: DecimalFilter<"Cuentas"> | Decimal | DecimalJsLike | number | string
    rol?: XOR<RolesScalarRelationFilter, RolesWhereInput>
    estado?: XOR<EstadosUsuarioScalarRelationFilter, EstadosUsuarioWhereInput>
    productos?: ProductosListRelationFilter
    transaccionesCompra?: TransaccionesListRelationFilter
    transaccionesVenta?: TransaccionesListRelationFilter
    calificacionesDadas?: CalificacionesListRelationFilter
    calificacionesRecibidas?: CalificacionesListRelationFilter
    carrito?: CarritoListRelationFilter
    actividades?: ActividadUsuarioListRelationFilter
    mensajesEnviados?: MensajesListRelationFilter
    mensajesRecibidos?: MensajesListRelationFilter
    reportes?: ReportesListRelationFilter
    reportesRecibidos?: ReportesListRelationFilter
    publicaciones?: PublicacionesListRelationFilter
    foros?: ForosListRelationFilter
    publicacionesForo?: PublicacionesForoListRelationFilter
    comentariosPublicacion?: ComentariosPublicacionListRelationFilter
    notificaciones?: NotificacionesListRelationFilter
    ubicaciones?: UbicacionesListRelationFilter
    resumenUsuario?: XOR<ResumenUsuarioNullableScalarRelationFilter, ResumenUsuarioWhereInput> | null
    siguiendo?: SeguidoresListRelationFilter
    seguidores?: SeguidoresListRelationFilter
    favoritos?: FavoritosListRelationFilter
  }, "id" | "correo" | "usuario">

  export type CuentasOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrderInput | SortOrder
    correo?: SortOrder
    usuario?: SortOrder
    contrasena?: SortOrder
    rolId?: SortOrder
    estadoId?: SortOrder
    fechaRegistro?: SortOrder
    campus?: SortOrderInput | SortOrder
    reputacion?: SortOrder
    _count?: CuentasCountOrderByAggregateInput
    _avg?: CuentasAvgOrderByAggregateInput
    _max?: CuentasMaxOrderByAggregateInput
    _min?: CuentasMinOrderByAggregateInput
    _sum?: CuentasSumOrderByAggregateInput
  }

  export type CuentasScalarWhereWithAggregatesInput = {
    AND?: CuentasScalarWhereWithAggregatesInput | CuentasScalarWhereWithAggregatesInput[]
    OR?: CuentasScalarWhereWithAggregatesInput[]
    NOT?: CuentasScalarWhereWithAggregatesInput | CuentasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Cuentas"> | number
    nombre?: StringWithAggregatesFilter<"Cuentas"> | string
    apellido?: StringNullableWithAggregatesFilter<"Cuentas"> | string | null
    correo?: StringWithAggregatesFilter<"Cuentas"> | string
    usuario?: StringWithAggregatesFilter<"Cuentas"> | string
    contrasena?: StringWithAggregatesFilter<"Cuentas"> | string
    rolId?: IntWithAggregatesFilter<"Cuentas"> | number
    estadoId?: IntWithAggregatesFilter<"Cuentas"> | number
    fechaRegistro?: DateTimeWithAggregatesFilter<"Cuentas"> | Date | string
    campus?: StringNullableWithAggregatesFilter<"Cuentas"> | string | null
    reputacion?: DecimalWithAggregatesFilter<"Cuentas"> | Decimal | DecimalJsLike | number | string
  }

  export type RolesWhereInput = {
    AND?: RolesWhereInput | RolesWhereInput[]
    OR?: RolesWhereInput[]
    NOT?: RolesWhereInput | RolesWhereInput[]
    id?: IntFilter<"Roles"> | number
    nombre?: StringFilter<"Roles"> | string
    cuentas?: CuentasListRelationFilter
  }

  export type RolesOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    cuentas?: CuentasOrderByRelationAggregateInput
  }

  export type RolesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RolesWhereInput | RolesWhereInput[]
    OR?: RolesWhereInput[]
    NOT?: RolesWhereInput | RolesWhereInput[]
    nombre?: StringFilter<"Roles"> | string
    cuentas?: CuentasListRelationFilter
  }, "id">

  export type RolesOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: RolesCountOrderByAggregateInput
    _avg?: RolesAvgOrderByAggregateInput
    _max?: RolesMaxOrderByAggregateInput
    _min?: RolesMinOrderByAggregateInput
    _sum?: RolesSumOrderByAggregateInput
  }

  export type RolesScalarWhereWithAggregatesInput = {
    AND?: RolesScalarWhereWithAggregatesInput | RolesScalarWhereWithAggregatesInput[]
    OR?: RolesScalarWhereWithAggregatesInput[]
    NOT?: RolesScalarWhereWithAggregatesInput | RolesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Roles"> | number
    nombre?: StringWithAggregatesFilter<"Roles"> | string
  }

  export type EstadosUsuarioWhereInput = {
    AND?: EstadosUsuarioWhereInput | EstadosUsuarioWhereInput[]
    OR?: EstadosUsuarioWhereInput[]
    NOT?: EstadosUsuarioWhereInput | EstadosUsuarioWhereInput[]
    id?: IntFilter<"EstadosUsuario"> | number
    nombre?: StringFilter<"EstadosUsuario"> | string
    cuentas?: CuentasListRelationFilter
  }

  export type EstadosUsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    cuentas?: CuentasOrderByRelationAggregateInput
  }

  export type EstadosUsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EstadosUsuarioWhereInput | EstadosUsuarioWhereInput[]
    OR?: EstadosUsuarioWhereInput[]
    NOT?: EstadosUsuarioWhereInput | EstadosUsuarioWhereInput[]
    nombre?: StringFilter<"EstadosUsuario"> | string
    cuentas?: CuentasListRelationFilter
  }, "id">

  export type EstadosUsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: EstadosUsuarioCountOrderByAggregateInput
    _avg?: EstadosUsuarioAvgOrderByAggregateInput
    _max?: EstadosUsuarioMaxOrderByAggregateInput
    _min?: EstadosUsuarioMinOrderByAggregateInput
    _sum?: EstadosUsuarioSumOrderByAggregateInput
  }

  export type EstadosUsuarioScalarWhereWithAggregatesInput = {
    AND?: EstadosUsuarioScalarWhereWithAggregatesInput | EstadosUsuarioScalarWhereWithAggregatesInput[]
    OR?: EstadosUsuarioScalarWhereWithAggregatesInput[]
    NOT?: EstadosUsuarioScalarWhereWithAggregatesInput | EstadosUsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EstadosUsuario"> | number
    nombre?: StringWithAggregatesFilter<"EstadosUsuario"> | string
  }

  export type CategoriasWhereInput = {
    AND?: CategoriasWhereInput | CategoriasWhereInput[]
    OR?: CategoriasWhereInput[]
    NOT?: CategoriasWhereInput | CategoriasWhereInput[]
    id?: IntFilter<"Categorias"> | number
    nombre?: StringFilter<"Categorias"> | string
    categoriaPadreId?: IntNullableFilter<"Categorias"> | number | null
    categoriaPadre?: XOR<CategoriasNullableScalarRelationFilter, CategoriasWhereInput> | null
    subcategorias?: CategoriasListRelationFilter
    productos?: ProductosListRelationFilter
  }

  export type CategoriasOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoriaPadreId?: SortOrderInput | SortOrder
    categoriaPadre?: CategoriasOrderByWithRelationInput
    subcategorias?: CategoriasOrderByRelationAggregateInput
    productos?: ProductosOrderByRelationAggregateInput
  }

  export type CategoriasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CategoriasWhereInput | CategoriasWhereInput[]
    OR?: CategoriasWhereInput[]
    NOT?: CategoriasWhereInput | CategoriasWhereInput[]
    nombre?: StringFilter<"Categorias"> | string
    categoriaPadreId?: IntNullableFilter<"Categorias"> | number | null
    categoriaPadre?: XOR<CategoriasNullableScalarRelationFilter, CategoriasWhereInput> | null
    subcategorias?: CategoriasListRelationFilter
    productos?: ProductosListRelationFilter
  }, "id">

  export type CategoriasOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoriaPadreId?: SortOrderInput | SortOrder
    _count?: CategoriasCountOrderByAggregateInput
    _avg?: CategoriasAvgOrderByAggregateInput
    _max?: CategoriasMaxOrderByAggregateInput
    _min?: CategoriasMinOrderByAggregateInput
    _sum?: CategoriasSumOrderByAggregateInput
  }

  export type CategoriasScalarWhereWithAggregatesInput = {
    AND?: CategoriasScalarWhereWithAggregatesInput | CategoriasScalarWhereWithAggregatesInput[]
    OR?: CategoriasScalarWhereWithAggregatesInput[]
    NOT?: CategoriasScalarWhereWithAggregatesInput | CategoriasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Categorias"> | number
    nombre?: StringWithAggregatesFilter<"Categorias"> | string
    categoriaPadreId?: IntNullableWithAggregatesFilter<"Categorias"> | number | null
  }

  export type EstadosProductoWhereInput = {
    AND?: EstadosProductoWhereInput | EstadosProductoWhereInput[]
    OR?: EstadosProductoWhereInput[]
    NOT?: EstadosProductoWhereInput | EstadosProductoWhereInput[]
    id?: IntFilter<"EstadosProducto"> | number
    nombre?: StringFilter<"EstadosProducto"> | string
    productos?: ProductosListRelationFilter
  }

  export type EstadosProductoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    productos?: ProductosOrderByRelationAggregateInput
  }

  export type EstadosProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EstadosProductoWhereInput | EstadosProductoWhereInput[]
    OR?: EstadosProductoWhereInput[]
    NOT?: EstadosProductoWhereInput | EstadosProductoWhereInput[]
    nombre?: StringFilter<"EstadosProducto"> | string
    productos?: ProductosListRelationFilter
  }, "id">

  export type EstadosProductoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: EstadosProductoCountOrderByAggregateInput
    _avg?: EstadosProductoAvgOrderByAggregateInput
    _max?: EstadosProductoMaxOrderByAggregateInput
    _min?: EstadosProductoMinOrderByAggregateInput
    _sum?: EstadosProductoSumOrderByAggregateInput
  }

  export type EstadosProductoScalarWhereWithAggregatesInput = {
    AND?: EstadosProductoScalarWhereWithAggregatesInput | EstadosProductoScalarWhereWithAggregatesInput[]
    OR?: EstadosProductoScalarWhereWithAggregatesInput[]
    NOT?: EstadosProductoScalarWhereWithAggregatesInput | EstadosProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EstadosProducto"> | number
    nombre?: StringWithAggregatesFilter<"EstadosProducto"> | string
  }

  export type ProductosWhereInput = {
    AND?: ProductosWhereInput | ProductosWhereInput[]
    OR?: ProductosWhereInput[]
    NOT?: ProductosWhereInput | ProductosWhereInput[]
    id?: IntFilter<"Productos"> | number
    nombre?: StringFilter<"Productos"> | string
    categoriaId?: IntNullableFilter<"Productos"> | number | null
    vendedorId?: IntFilter<"Productos"> | number
    precioAnterior?: DecimalNullableFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    precioActual?: DecimalNullableFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    descripcion?: StringNullableFilter<"Productos"> | string | null
    calificacion?: DecimalNullableFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    cantidad?: IntNullableFilter<"Productos"> | number | null
    fechaAgregado?: DateTimeFilter<"Productos"> | Date | string
    estadoId?: IntFilter<"Productos"> | number
    categoria?: XOR<CategoriasNullableScalarRelationFilter, CategoriasWhereInput> | null
    vendedor?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    estado?: XOR<EstadosProductoScalarRelationFilter, EstadosProductoWhereInput>
    transacciones?: TransaccionesListRelationFilter
    carrito?: CarritoListRelationFilter
    imagenes?: ImagenesProductoListRelationFilter
    reportes?: ReportesListRelationFilter
  }

  export type ProductosOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoriaId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    precioAnterior?: SortOrderInput | SortOrder
    precioActual?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    calificacion?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    fechaAgregado?: SortOrder
    estadoId?: SortOrder
    categoria?: CategoriasOrderByWithRelationInput
    vendedor?: CuentasOrderByWithRelationInput
    estado?: EstadosProductoOrderByWithRelationInput
    transacciones?: TransaccionesOrderByRelationAggregateInput
    carrito?: CarritoOrderByRelationAggregateInput
    imagenes?: ImagenesProductoOrderByRelationAggregateInput
    reportes?: ReportesOrderByRelationAggregateInput
  }

  export type ProductosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductosWhereInput | ProductosWhereInput[]
    OR?: ProductosWhereInput[]
    NOT?: ProductosWhereInput | ProductosWhereInput[]
    nombre?: StringFilter<"Productos"> | string
    categoriaId?: IntNullableFilter<"Productos"> | number | null
    vendedorId?: IntFilter<"Productos"> | number
    precioAnterior?: DecimalNullableFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    precioActual?: DecimalNullableFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    descripcion?: StringNullableFilter<"Productos"> | string | null
    calificacion?: DecimalNullableFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    cantidad?: IntNullableFilter<"Productos"> | number | null
    fechaAgregado?: DateTimeFilter<"Productos"> | Date | string
    estadoId?: IntFilter<"Productos"> | number
    categoria?: XOR<CategoriasNullableScalarRelationFilter, CategoriasWhereInput> | null
    vendedor?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    estado?: XOR<EstadosProductoScalarRelationFilter, EstadosProductoWhereInput>
    transacciones?: TransaccionesListRelationFilter
    carrito?: CarritoListRelationFilter
    imagenes?: ImagenesProductoListRelationFilter
    reportes?: ReportesListRelationFilter
  }, "id">

  export type ProductosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoriaId?: SortOrderInput | SortOrder
    vendedorId?: SortOrder
    precioAnterior?: SortOrderInput | SortOrder
    precioActual?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    calificacion?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    fechaAgregado?: SortOrder
    estadoId?: SortOrder
    _count?: ProductosCountOrderByAggregateInput
    _avg?: ProductosAvgOrderByAggregateInput
    _max?: ProductosMaxOrderByAggregateInput
    _min?: ProductosMinOrderByAggregateInput
    _sum?: ProductosSumOrderByAggregateInput
  }

  export type ProductosScalarWhereWithAggregatesInput = {
    AND?: ProductosScalarWhereWithAggregatesInput | ProductosScalarWhereWithAggregatesInput[]
    OR?: ProductosScalarWhereWithAggregatesInput[]
    NOT?: ProductosScalarWhereWithAggregatesInput | ProductosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Productos"> | number
    nombre?: StringWithAggregatesFilter<"Productos"> | string
    categoriaId?: IntNullableWithAggregatesFilter<"Productos"> | number | null
    vendedorId?: IntWithAggregatesFilter<"Productos"> | number
    precioAnterior?: DecimalNullableWithAggregatesFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    precioActual?: DecimalNullableWithAggregatesFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    descripcion?: StringNullableWithAggregatesFilter<"Productos"> | string | null
    calificacion?: DecimalNullableWithAggregatesFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    cantidad?: IntNullableWithAggregatesFilter<"Productos"> | number | null
    fechaAgregado?: DateTimeWithAggregatesFilter<"Productos"> | Date | string
    estadoId?: IntWithAggregatesFilter<"Productos"> | number
  }

  export type ImagenesProductoWhereInput = {
    AND?: ImagenesProductoWhereInput | ImagenesProductoWhereInput[]
    OR?: ImagenesProductoWhereInput[]
    NOT?: ImagenesProductoWhereInput | ImagenesProductoWhereInput[]
    id?: IntFilter<"ImagenesProducto"> | number
    productoId?: IntFilter<"ImagenesProducto"> | number
    urlImagen?: BytesNullableFilter<"ImagenesProducto"> | Uint8Array | null
    producto?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
  }

  export type ImagenesProductoOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    urlImagen?: SortOrderInput | SortOrder
    producto?: ProductosOrderByWithRelationInput
  }

  export type ImagenesProductoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ImagenesProductoWhereInput | ImagenesProductoWhereInput[]
    OR?: ImagenesProductoWhereInput[]
    NOT?: ImagenesProductoWhereInput | ImagenesProductoWhereInput[]
    productoId?: IntFilter<"ImagenesProducto"> | number
    urlImagen?: BytesNullableFilter<"ImagenesProducto"> | Uint8Array | null
    producto?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
  }, "id">

  export type ImagenesProductoOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    urlImagen?: SortOrderInput | SortOrder
    _count?: ImagenesProductoCountOrderByAggregateInput
    _avg?: ImagenesProductoAvgOrderByAggregateInput
    _max?: ImagenesProductoMaxOrderByAggregateInput
    _min?: ImagenesProductoMinOrderByAggregateInput
    _sum?: ImagenesProductoSumOrderByAggregateInput
  }

  export type ImagenesProductoScalarWhereWithAggregatesInput = {
    AND?: ImagenesProductoScalarWhereWithAggregatesInput | ImagenesProductoScalarWhereWithAggregatesInput[]
    OR?: ImagenesProductoScalarWhereWithAggregatesInput[]
    NOT?: ImagenesProductoScalarWhereWithAggregatesInput | ImagenesProductoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ImagenesProducto"> | number
    productoId?: IntWithAggregatesFilter<"ImagenesProducto"> | number
    urlImagen?: BytesNullableWithAggregatesFilter<"ImagenesProducto"> | Uint8Array | null
  }

  export type EstadosTransaccionWhereInput = {
    AND?: EstadosTransaccionWhereInput | EstadosTransaccionWhereInput[]
    OR?: EstadosTransaccionWhereInput[]
    NOT?: EstadosTransaccionWhereInput | EstadosTransaccionWhereInput[]
    id?: IntFilter<"EstadosTransaccion"> | number
    nombre?: StringFilter<"EstadosTransaccion"> | string
    transacciones?: TransaccionesListRelationFilter
  }

  export type EstadosTransaccionOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    transacciones?: TransaccionesOrderByRelationAggregateInput
  }

  export type EstadosTransaccionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EstadosTransaccionWhereInput | EstadosTransaccionWhereInput[]
    OR?: EstadosTransaccionWhereInput[]
    NOT?: EstadosTransaccionWhereInput | EstadosTransaccionWhereInput[]
    nombre?: StringFilter<"EstadosTransaccion"> | string
    transacciones?: TransaccionesListRelationFilter
  }, "id">

  export type EstadosTransaccionOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: EstadosTransaccionCountOrderByAggregateInput
    _avg?: EstadosTransaccionAvgOrderByAggregateInput
    _max?: EstadosTransaccionMaxOrderByAggregateInput
    _min?: EstadosTransaccionMinOrderByAggregateInput
    _sum?: EstadosTransaccionSumOrderByAggregateInput
  }

  export type EstadosTransaccionScalarWhereWithAggregatesInput = {
    AND?: EstadosTransaccionScalarWhereWithAggregatesInput | EstadosTransaccionScalarWhereWithAggregatesInput[]
    OR?: EstadosTransaccionScalarWhereWithAggregatesInput[]
    NOT?: EstadosTransaccionScalarWhereWithAggregatesInput | EstadosTransaccionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EstadosTransaccion"> | number
    nombre?: StringWithAggregatesFilter<"EstadosTransaccion"> | string
  }

  export type TransaccionesWhereInput = {
    AND?: TransaccionesWhereInput | TransaccionesWhereInput[]
    OR?: TransaccionesWhereInput[]
    NOT?: TransaccionesWhereInput | TransaccionesWhereInput[]
    id?: IntFilter<"Transacciones"> | number
    productoId?: IntFilter<"Transacciones"> | number
    compradorId?: IntFilter<"Transacciones"> | number
    vendedorId?: IntFilter<"Transacciones"> | number
    fecha?: DateTimeFilter<"Transacciones"> | Date | string
    estadoId?: IntFilter<"Transacciones"> | number
    producto?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
    comprador?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    vendedor?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    estado?: XOR<EstadosTransaccionScalarRelationFilter, EstadosTransaccionWhereInput>
    calificaciones?: CalificacionesListRelationFilter
  }

  export type TransaccionesOrderByWithRelationInput = {
    id?: SortOrder
    productoId?: SortOrder
    compradorId?: SortOrder
    vendedorId?: SortOrder
    fecha?: SortOrder
    estadoId?: SortOrder
    producto?: ProductosOrderByWithRelationInput
    comprador?: CuentasOrderByWithRelationInput
    vendedor?: CuentasOrderByWithRelationInput
    estado?: EstadosTransaccionOrderByWithRelationInput
    calificaciones?: CalificacionesOrderByRelationAggregateInput
  }

  export type TransaccionesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TransaccionesWhereInput | TransaccionesWhereInput[]
    OR?: TransaccionesWhereInput[]
    NOT?: TransaccionesWhereInput | TransaccionesWhereInput[]
    productoId?: IntFilter<"Transacciones"> | number
    compradorId?: IntFilter<"Transacciones"> | number
    vendedorId?: IntFilter<"Transacciones"> | number
    fecha?: DateTimeFilter<"Transacciones"> | Date | string
    estadoId?: IntFilter<"Transacciones"> | number
    producto?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
    comprador?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    vendedor?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    estado?: XOR<EstadosTransaccionScalarRelationFilter, EstadosTransaccionWhereInput>
    calificaciones?: CalificacionesListRelationFilter
  }, "id">

  export type TransaccionesOrderByWithAggregationInput = {
    id?: SortOrder
    productoId?: SortOrder
    compradorId?: SortOrder
    vendedorId?: SortOrder
    fecha?: SortOrder
    estadoId?: SortOrder
    _count?: TransaccionesCountOrderByAggregateInput
    _avg?: TransaccionesAvgOrderByAggregateInput
    _max?: TransaccionesMaxOrderByAggregateInput
    _min?: TransaccionesMinOrderByAggregateInput
    _sum?: TransaccionesSumOrderByAggregateInput
  }

  export type TransaccionesScalarWhereWithAggregatesInput = {
    AND?: TransaccionesScalarWhereWithAggregatesInput | TransaccionesScalarWhereWithAggregatesInput[]
    OR?: TransaccionesScalarWhereWithAggregatesInput[]
    NOT?: TransaccionesScalarWhereWithAggregatesInput | TransaccionesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Transacciones"> | number
    productoId?: IntWithAggregatesFilter<"Transacciones"> | number
    compradorId?: IntWithAggregatesFilter<"Transacciones"> | number
    vendedorId?: IntWithAggregatesFilter<"Transacciones"> | number
    fecha?: DateTimeWithAggregatesFilter<"Transacciones"> | Date | string
    estadoId?: IntWithAggregatesFilter<"Transacciones"> | number
  }

  export type CalificacionesWhereInput = {
    AND?: CalificacionesWhereInput | CalificacionesWhereInput[]
    OR?: CalificacionesWhereInput[]
    NOT?: CalificacionesWhereInput | CalificacionesWhereInput[]
    id?: IntFilter<"Calificaciones"> | number
    transaccionId?: IntFilter<"Calificaciones"> | number
    calificadorId?: IntFilter<"Calificaciones"> | number
    calificadoId?: IntFilter<"Calificaciones"> | number
    puntuacion?: DecimalNullableFilter<"Calificaciones"> | Decimal | DecimalJsLike | number | string | null
    comentario?: StringNullableFilter<"Calificaciones"> | string | null
    fecha?: DateTimeFilter<"Calificaciones"> | Date | string
    transaccion?: XOR<TransaccionesScalarRelationFilter, TransaccionesWhereInput>
    calificador?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    calificado?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }

  export type CalificacionesOrderByWithRelationInput = {
    id?: SortOrder
    transaccionId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    puntuacion?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    fecha?: SortOrder
    transaccion?: TransaccionesOrderByWithRelationInput
    calificador?: CuentasOrderByWithRelationInput
    calificado?: CuentasOrderByWithRelationInput
  }

  export type CalificacionesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CalificacionesWhereInput | CalificacionesWhereInput[]
    OR?: CalificacionesWhereInput[]
    NOT?: CalificacionesWhereInput | CalificacionesWhereInput[]
    transaccionId?: IntFilter<"Calificaciones"> | number
    calificadorId?: IntFilter<"Calificaciones"> | number
    calificadoId?: IntFilter<"Calificaciones"> | number
    puntuacion?: DecimalNullableFilter<"Calificaciones"> | Decimal | DecimalJsLike | number | string | null
    comentario?: StringNullableFilter<"Calificaciones"> | string | null
    fecha?: DateTimeFilter<"Calificaciones"> | Date | string
    transaccion?: XOR<TransaccionesScalarRelationFilter, TransaccionesWhereInput>
    calificador?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    calificado?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }, "id">

  export type CalificacionesOrderByWithAggregationInput = {
    id?: SortOrder
    transaccionId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    puntuacion?: SortOrderInput | SortOrder
    comentario?: SortOrderInput | SortOrder
    fecha?: SortOrder
    _count?: CalificacionesCountOrderByAggregateInput
    _avg?: CalificacionesAvgOrderByAggregateInput
    _max?: CalificacionesMaxOrderByAggregateInput
    _min?: CalificacionesMinOrderByAggregateInput
    _sum?: CalificacionesSumOrderByAggregateInput
  }

  export type CalificacionesScalarWhereWithAggregatesInput = {
    AND?: CalificacionesScalarWhereWithAggregatesInput | CalificacionesScalarWhereWithAggregatesInput[]
    OR?: CalificacionesScalarWhereWithAggregatesInput[]
    NOT?: CalificacionesScalarWhereWithAggregatesInput | CalificacionesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Calificaciones"> | number
    transaccionId?: IntWithAggregatesFilter<"Calificaciones"> | number
    calificadorId?: IntWithAggregatesFilter<"Calificaciones"> | number
    calificadoId?: IntWithAggregatesFilter<"Calificaciones"> | number
    puntuacion?: DecimalNullableWithAggregatesFilter<"Calificaciones"> | Decimal | DecimalJsLike | number | string | null
    comentario?: StringNullableWithAggregatesFilter<"Calificaciones"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"Calificaciones"> | Date | string
  }

  export type CarritoWhereInput = {
    AND?: CarritoWhereInput | CarritoWhereInput[]
    OR?: CarritoWhereInput[]
    NOT?: CarritoWhereInput | CarritoWhereInput[]
    id?: IntFilter<"Carrito"> | number
    usuarioId?: IntFilter<"Carrito"> | number
    productoId?: IntFilter<"Carrito"> | number
    cantidad?: IntFilter<"Carrito"> | number
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    producto?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
  }

  export type CarritoOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    usuario?: CuentasOrderByWithRelationInput
    producto?: ProductosOrderByWithRelationInput
  }

  export type CarritoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CarritoWhereInput | CarritoWhereInput[]
    OR?: CarritoWhereInput[]
    NOT?: CarritoWhereInput | CarritoWhereInput[]
    usuarioId?: IntFilter<"Carrito"> | number
    productoId?: IntFilter<"Carrito"> | number
    cantidad?: IntFilter<"Carrito"> | number
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    producto?: XOR<ProductosScalarRelationFilter, ProductosWhereInput>
  }, "id">

  export type CarritoOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
    _count?: CarritoCountOrderByAggregateInput
    _avg?: CarritoAvgOrderByAggregateInput
    _max?: CarritoMaxOrderByAggregateInput
    _min?: CarritoMinOrderByAggregateInput
    _sum?: CarritoSumOrderByAggregateInput
  }

  export type CarritoScalarWhereWithAggregatesInput = {
    AND?: CarritoScalarWhereWithAggregatesInput | CarritoScalarWhereWithAggregatesInput[]
    OR?: CarritoScalarWhereWithAggregatesInput[]
    NOT?: CarritoScalarWhereWithAggregatesInput | CarritoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Carrito"> | number
    usuarioId?: IntWithAggregatesFilter<"Carrito"> | number
    productoId?: IntWithAggregatesFilter<"Carrito"> | number
    cantidad?: IntWithAggregatesFilter<"Carrito"> | number
  }

  export type MensajesWhereInput = {
    AND?: MensajesWhereInput | MensajesWhereInput[]
    OR?: MensajesWhereInput[]
    NOT?: MensajesWhereInput | MensajesWhereInput[]
    id?: IntFilter<"Mensajes"> | number
    remitenteId?: IntFilter<"Mensajes"> | number
    destinatarioId?: IntFilter<"Mensajes"> | number
    contenido?: StringNullableFilter<"Mensajes"> | string | null
    fechaEnvio?: DateTimeFilter<"Mensajes"> | Date | string
    leido?: BoolFilter<"Mensajes"> | boolean
    remitente?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    destinatario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }

  export type MensajesOrderByWithRelationInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    contenido?: SortOrderInput | SortOrder
    fechaEnvio?: SortOrder
    leido?: SortOrder
    remitente?: CuentasOrderByWithRelationInput
    destinatario?: CuentasOrderByWithRelationInput
  }

  export type MensajesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MensajesWhereInput | MensajesWhereInput[]
    OR?: MensajesWhereInput[]
    NOT?: MensajesWhereInput | MensajesWhereInput[]
    remitenteId?: IntFilter<"Mensajes"> | number
    destinatarioId?: IntFilter<"Mensajes"> | number
    contenido?: StringNullableFilter<"Mensajes"> | string | null
    fechaEnvio?: DateTimeFilter<"Mensajes"> | Date | string
    leido?: BoolFilter<"Mensajes"> | boolean
    remitente?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    destinatario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }, "id">

  export type MensajesOrderByWithAggregationInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    contenido?: SortOrderInput | SortOrder
    fechaEnvio?: SortOrder
    leido?: SortOrder
    _count?: MensajesCountOrderByAggregateInput
    _avg?: MensajesAvgOrderByAggregateInput
    _max?: MensajesMaxOrderByAggregateInput
    _min?: MensajesMinOrderByAggregateInput
    _sum?: MensajesSumOrderByAggregateInput
  }

  export type MensajesScalarWhereWithAggregatesInput = {
    AND?: MensajesScalarWhereWithAggregatesInput | MensajesScalarWhereWithAggregatesInput[]
    OR?: MensajesScalarWhereWithAggregatesInput[]
    NOT?: MensajesScalarWhereWithAggregatesInput | MensajesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mensajes"> | number
    remitenteId?: IntWithAggregatesFilter<"Mensajes"> | number
    destinatarioId?: IntWithAggregatesFilter<"Mensajes"> | number
    contenido?: StringNullableWithAggregatesFilter<"Mensajes"> | string | null
    fechaEnvio?: DateTimeWithAggregatesFilter<"Mensajes"> | Date | string
    leido?: BoolWithAggregatesFilter<"Mensajes"> | boolean
  }

  export type EstadosReporteWhereInput = {
    AND?: EstadosReporteWhereInput | EstadosReporteWhereInput[]
    OR?: EstadosReporteWhereInput[]
    NOT?: EstadosReporteWhereInput | EstadosReporteWhereInput[]
    id?: IntFilter<"EstadosReporte"> | number
    nombre?: StringFilter<"EstadosReporte"> | string
    reportes?: ReportesListRelationFilter
  }

  export type EstadosReporteOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    reportes?: ReportesOrderByRelationAggregateInput
  }

  export type EstadosReporteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EstadosReporteWhereInput | EstadosReporteWhereInput[]
    OR?: EstadosReporteWhereInput[]
    NOT?: EstadosReporteWhereInput | EstadosReporteWhereInput[]
    nombre?: StringFilter<"EstadosReporte"> | string
    reportes?: ReportesListRelationFilter
  }, "id">

  export type EstadosReporteOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    _count?: EstadosReporteCountOrderByAggregateInput
    _avg?: EstadosReporteAvgOrderByAggregateInput
    _max?: EstadosReporteMaxOrderByAggregateInput
    _min?: EstadosReporteMinOrderByAggregateInput
    _sum?: EstadosReporteSumOrderByAggregateInput
  }

  export type EstadosReporteScalarWhereWithAggregatesInput = {
    AND?: EstadosReporteScalarWhereWithAggregatesInput | EstadosReporteScalarWhereWithAggregatesInput[]
    OR?: EstadosReporteScalarWhereWithAggregatesInput[]
    NOT?: EstadosReporteScalarWhereWithAggregatesInput | EstadosReporteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EstadosReporte"> | number
    nombre?: StringWithAggregatesFilter<"EstadosReporte"> | string
  }

  export type ReportesWhereInput = {
    AND?: ReportesWhereInput | ReportesWhereInput[]
    OR?: ReportesWhereInput[]
    NOT?: ReportesWhereInput | ReportesWhereInput[]
    id?: IntFilter<"Reportes"> | number
    reportanteId?: IntFilter<"Reportes"> | number
    usuarioReportadoId?: IntNullableFilter<"Reportes"> | number | null
    productoId?: IntNullableFilter<"Reportes"> | number | null
    motivo?: StringNullableFilter<"Reportes"> | string | null
    fecha?: DateTimeFilter<"Reportes"> | Date | string
    estadoId?: IntFilter<"Reportes"> | number
    reportante?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    usuarioReportado?: XOR<CuentasNullableScalarRelationFilter, CuentasWhereInput> | null
    producto?: XOR<ProductosNullableScalarRelationFilter, ProductosWhereInput> | null
    estado?: XOR<EstadosReporteScalarRelationFilter, EstadosReporteWhereInput>
  }

  export type ReportesOrderByWithRelationInput = {
    id?: SortOrder
    reportanteId?: SortOrder
    usuarioReportadoId?: SortOrderInput | SortOrder
    productoId?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    fecha?: SortOrder
    estadoId?: SortOrder
    reportante?: CuentasOrderByWithRelationInput
    usuarioReportado?: CuentasOrderByWithRelationInput
    producto?: ProductosOrderByWithRelationInput
    estado?: EstadosReporteOrderByWithRelationInput
  }

  export type ReportesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReportesWhereInput | ReportesWhereInput[]
    OR?: ReportesWhereInput[]
    NOT?: ReportesWhereInput | ReportesWhereInput[]
    reportanteId?: IntFilter<"Reportes"> | number
    usuarioReportadoId?: IntNullableFilter<"Reportes"> | number | null
    productoId?: IntNullableFilter<"Reportes"> | number | null
    motivo?: StringNullableFilter<"Reportes"> | string | null
    fecha?: DateTimeFilter<"Reportes"> | Date | string
    estadoId?: IntFilter<"Reportes"> | number
    reportante?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    usuarioReportado?: XOR<CuentasNullableScalarRelationFilter, CuentasWhereInput> | null
    producto?: XOR<ProductosNullableScalarRelationFilter, ProductosWhereInput> | null
    estado?: XOR<EstadosReporteScalarRelationFilter, EstadosReporteWhereInput>
  }, "id">

  export type ReportesOrderByWithAggregationInput = {
    id?: SortOrder
    reportanteId?: SortOrder
    usuarioReportadoId?: SortOrderInput | SortOrder
    productoId?: SortOrderInput | SortOrder
    motivo?: SortOrderInput | SortOrder
    fecha?: SortOrder
    estadoId?: SortOrder
    _count?: ReportesCountOrderByAggregateInput
    _avg?: ReportesAvgOrderByAggregateInput
    _max?: ReportesMaxOrderByAggregateInput
    _min?: ReportesMinOrderByAggregateInput
    _sum?: ReportesSumOrderByAggregateInput
  }

  export type ReportesScalarWhereWithAggregatesInput = {
    AND?: ReportesScalarWhereWithAggregatesInput | ReportesScalarWhereWithAggregatesInput[]
    OR?: ReportesScalarWhereWithAggregatesInput[]
    NOT?: ReportesScalarWhereWithAggregatesInput | ReportesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Reportes"> | number
    reportanteId?: IntWithAggregatesFilter<"Reportes"> | number
    usuarioReportadoId?: IntNullableWithAggregatesFilter<"Reportes"> | number | null
    productoId?: IntNullableWithAggregatesFilter<"Reportes"> | number | null
    motivo?: StringNullableWithAggregatesFilter<"Reportes"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"Reportes"> | Date | string
    estadoId?: IntWithAggregatesFilter<"Reportes"> | number
  }

  export type ActividadUsuarioWhereInput = {
    AND?: ActividadUsuarioWhereInput | ActividadUsuarioWhereInput[]
    OR?: ActividadUsuarioWhereInput[]
    NOT?: ActividadUsuarioWhereInput | ActividadUsuarioWhereInput[]
    id?: IntFilter<"ActividadUsuario"> | number
    usuarioId?: IntFilter<"ActividadUsuario"> | number
    accion?: StringNullableFilter<"ActividadUsuario"> | string | null
    detalles?: StringNullableFilter<"ActividadUsuario"> | string | null
    fecha?: DateTimeFilter<"ActividadUsuario"> | Date | string
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }

  export type ActividadUsuarioOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    accion?: SortOrderInput | SortOrder
    detalles?: SortOrderInput | SortOrder
    fecha?: SortOrder
    usuario?: CuentasOrderByWithRelationInput
  }

  export type ActividadUsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ActividadUsuarioWhereInput | ActividadUsuarioWhereInput[]
    OR?: ActividadUsuarioWhereInput[]
    NOT?: ActividadUsuarioWhereInput | ActividadUsuarioWhereInput[]
    usuarioId?: IntFilter<"ActividadUsuario"> | number
    accion?: StringNullableFilter<"ActividadUsuario"> | string | null
    detalles?: StringNullableFilter<"ActividadUsuario"> | string | null
    fecha?: DateTimeFilter<"ActividadUsuario"> | Date | string
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }, "id">

  export type ActividadUsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    accion?: SortOrderInput | SortOrder
    detalles?: SortOrderInput | SortOrder
    fecha?: SortOrder
    _count?: ActividadUsuarioCountOrderByAggregateInput
    _avg?: ActividadUsuarioAvgOrderByAggregateInput
    _max?: ActividadUsuarioMaxOrderByAggregateInput
    _min?: ActividadUsuarioMinOrderByAggregateInput
    _sum?: ActividadUsuarioSumOrderByAggregateInput
  }

  export type ActividadUsuarioScalarWhereWithAggregatesInput = {
    AND?: ActividadUsuarioScalarWhereWithAggregatesInput | ActividadUsuarioScalarWhereWithAggregatesInput[]
    OR?: ActividadUsuarioScalarWhereWithAggregatesInput[]
    NOT?: ActividadUsuarioScalarWhereWithAggregatesInput | ActividadUsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ActividadUsuario"> | number
    usuarioId?: IntWithAggregatesFilter<"ActividadUsuario"> | number
    accion?: StringNullableWithAggregatesFilter<"ActividadUsuario"> | string | null
    detalles?: StringNullableWithAggregatesFilter<"ActividadUsuario"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"ActividadUsuario"> | Date | string
  }

  export type NotificacionesWhereInput = {
    AND?: NotificacionesWhereInput | NotificacionesWhereInput[]
    OR?: NotificacionesWhereInput[]
    NOT?: NotificacionesWhereInput | NotificacionesWhereInput[]
    id?: IntFilter<"Notificaciones"> | number
    usuarioId?: IntFilter<"Notificaciones"> | number
    tipo?: StringNullableFilter<"Notificaciones"> | string | null
    mensaje?: StringNullableFilter<"Notificaciones"> | string | null
    leido?: BoolFilter<"Notificaciones"> | boolean
    fecha?: DateTimeFilter<"Notificaciones"> | Date | string
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }

  export type NotificacionesOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tipo?: SortOrderInput | SortOrder
    mensaje?: SortOrderInput | SortOrder
    leido?: SortOrder
    fecha?: SortOrder
    usuario?: CuentasOrderByWithRelationInput
  }

  export type NotificacionesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: NotificacionesWhereInput | NotificacionesWhereInput[]
    OR?: NotificacionesWhereInput[]
    NOT?: NotificacionesWhereInput | NotificacionesWhereInput[]
    usuarioId?: IntFilter<"Notificaciones"> | number
    tipo?: StringNullableFilter<"Notificaciones"> | string | null
    mensaje?: StringNullableFilter<"Notificaciones"> | string | null
    leido?: BoolFilter<"Notificaciones"> | boolean
    fecha?: DateTimeFilter<"Notificaciones"> | Date | string
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }, "id">

  export type NotificacionesOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tipo?: SortOrderInput | SortOrder
    mensaje?: SortOrderInput | SortOrder
    leido?: SortOrder
    fecha?: SortOrder
    _count?: NotificacionesCountOrderByAggregateInput
    _avg?: NotificacionesAvgOrderByAggregateInput
    _max?: NotificacionesMaxOrderByAggregateInput
    _min?: NotificacionesMinOrderByAggregateInput
    _sum?: NotificacionesSumOrderByAggregateInput
  }

  export type NotificacionesScalarWhereWithAggregatesInput = {
    AND?: NotificacionesScalarWhereWithAggregatesInput | NotificacionesScalarWhereWithAggregatesInput[]
    OR?: NotificacionesScalarWhereWithAggregatesInput[]
    NOT?: NotificacionesScalarWhereWithAggregatesInput | NotificacionesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Notificaciones"> | number
    usuarioId?: IntWithAggregatesFilter<"Notificaciones"> | number
    tipo?: StringNullableWithAggregatesFilter<"Notificaciones"> | string | null
    mensaje?: StringNullableWithAggregatesFilter<"Notificaciones"> | string | null
    leido?: BoolWithAggregatesFilter<"Notificaciones"> | boolean
    fecha?: DateTimeWithAggregatesFilter<"Notificaciones"> | Date | string
  }

  export type PublicacionesWhereInput = {
    AND?: PublicacionesWhereInput | PublicacionesWhereInput[]
    OR?: PublicacionesWhereInput[]
    NOT?: PublicacionesWhereInput | PublicacionesWhereInput[]
    id?: IntFilter<"Publicaciones"> | number
    titulo?: StringNullableFilter<"Publicaciones"> | string | null
    cuerpo?: StringNullableFilter<"Publicaciones"> | string | null
    usuarioId?: IntFilter<"Publicaciones"> | number
    estado?: StringNullableFilter<"Publicaciones"> | string | null
    fecha?: DateTimeFilter<"Publicaciones"> | Date | string
    visto?: BoolFilter<"Publicaciones"> | boolean
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    favoritos?: FavoritosListRelationFilter
  }

  export type PublicacionesOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrderInput | SortOrder
    cuerpo?: SortOrderInput | SortOrder
    usuarioId?: SortOrder
    estado?: SortOrderInput | SortOrder
    fecha?: SortOrder
    visto?: SortOrder
    usuario?: CuentasOrderByWithRelationInput
    favoritos?: FavoritosOrderByRelationAggregateInput
  }

  export type PublicacionesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PublicacionesWhereInput | PublicacionesWhereInput[]
    OR?: PublicacionesWhereInput[]
    NOT?: PublicacionesWhereInput | PublicacionesWhereInput[]
    titulo?: StringNullableFilter<"Publicaciones"> | string | null
    cuerpo?: StringNullableFilter<"Publicaciones"> | string | null
    usuarioId?: IntFilter<"Publicaciones"> | number
    estado?: StringNullableFilter<"Publicaciones"> | string | null
    fecha?: DateTimeFilter<"Publicaciones"> | Date | string
    visto?: BoolFilter<"Publicaciones"> | boolean
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    favoritos?: FavoritosListRelationFilter
  }, "id">

  export type PublicacionesOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrderInput | SortOrder
    cuerpo?: SortOrderInput | SortOrder
    usuarioId?: SortOrder
    estado?: SortOrderInput | SortOrder
    fecha?: SortOrder
    visto?: SortOrder
    _count?: PublicacionesCountOrderByAggregateInput
    _avg?: PublicacionesAvgOrderByAggregateInput
    _max?: PublicacionesMaxOrderByAggregateInput
    _min?: PublicacionesMinOrderByAggregateInput
    _sum?: PublicacionesSumOrderByAggregateInput
  }

  export type PublicacionesScalarWhereWithAggregatesInput = {
    AND?: PublicacionesScalarWhereWithAggregatesInput | PublicacionesScalarWhereWithAggregatesInput[]
    OR?: PublicacionesScalarWhereWithAggregatesInput[]
    NOT?: PublicacionesScalarWhereWithAggregatesInput | PublicacionesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Publicaciones"> | number
    titulo?: StringNullableWithAggregatesFilter<"Publicaciones"> | string | null
    cuerpo?: StringNullableWithAggregatesFilter<"Publicaciones"> | string | null
    usuarioId?: IntWithAggregatesFilter<"Publicaciones"> | number
    estado?: StringNullableWithAggregatesFilter<"Publicaciones"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"Publicaciones"> | Date | string
    visto?: BoolWithAggregatesFilter<"Publicaciones"> | boolean
  }

  export type ForosWhereInput = {
    AND?: ForosWhereInput | ForosWhereInput[]
    OR?: ForosWhereInput[]
    NOT?: ForosWhereInput | ForosWhereInput[]
    id?: IntFilter<"Foros"> | number
    nombre?: StringFilter<"Foros"> | string
    descripcion?: StringNullableFilter<"Foros"> | string | null
    creadorId?: IntFilter<"Foros"> | number
    fechaCreacion?: DateTimeFilter<"Foros"> | Date | string
    creador?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    publicaciones?: PublicacionesForoListRelationFilter
  }

  export type ForosOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    creadorId?: SortOrder
    fechaCreacion?: SortOrder
    creador?: CuentasOrderByWithRelationInput
    publicaciones?: PublicacionesForoOrderByRelationAggregateInput
  }

  export type ForosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ForosWhereInput | ForosWhereInput[]
    OR?: ForosWhereInput[]
    NOT?: ForosWhereInput | ForosWhereInput[]
    nombre?: StringFilter<"Foros"> | string
    descripcion?: StringNullableFilter<"Foros"> | string | null
    creadorId?: IntFilter<"Foros"> | number
    fechaCreacion?: DateTimeFilter<"Foros"> | Date | string
    creador?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    publicaciones?: PublicacionesForoListRelationFilter
  }, "id">

  export type ForosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    creadorId?: SortOrder
    fechaCreacion?: SortOrder
    _count?: ForosCountOrderByAggregateInput
    _avg?: ForosAvgOrderByAggregateInput
    _max?: ForosMaxOrderByAggregateInput
    _min?: ForosMinOrderByAggregateInput
    _sum?: ForosSumOrderByAggregateInput
  }

  export type ForosScalarWhereWithAggregatesInput = {
    AND?: ForosScalarWhereWithAggregatesInput | ForosScalarWhereWithAggregatesInput[]
    OR?: ForosScalarWhereWithAggregatesInput[]
    NOT?: ForosScalarWhereWithAggregatesInput | ForosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Foros"> | number
    nombre?: StringWithAggregatesFilter<"Foros"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Foros"> | string | null
    creadorId?: IntWithAggregatesFilter<"Foros"> | number
    fechaCreacion?: DateTimeWithAggregatesFilter<"Foros"> | Date | string
  }

  export type PublicacionesForoWhereInput = {
    AND?: PublicacionesForoWhereInput | PublicacionesForoWhereInput[]
    OR?: PublicacionesForoWhereInput[]
    NOT?: PublicacionesForoWhereInput | PublicacionesForoWhereInput[]
    id?: IntFilter<"PublicacionesForo"> | number
    foroId?: IntFilter<"PublicacionesForo"> | number
    autorId?: IntFilter<"PublicacionesForo"> | number
    titulo?: StringNullableFilter<"PublicacionesForo"> | string | null
    contenido?: StringNullableFilter<"PublicacionesForo"> | string | null
    fecha?: DateTimeFilter<"PublicacionesForo"> | Date | string
    foro?: XOR<ForosScalarRelationFilter, ForosWhereInput>
    autor?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    comentarios?: ComentariosPublicacionListRelationFilter
  }

  export type PublicacionesForoOrderByWithRelationInput = {
    id?: SortOrder
    foroId?: SortOrder
    autorId?: SortOrder
    titulo?: SortOrderInput | SortOrder
    contenido?: SortOrderInput | SortOrder
    fecha?: SortOrder
    foro?: ForosOrderByWithRelationInput
    autor?: CuentasOrderByWithRelationInput
    comentarios?: ComentariosPublicacionOrderByRelationAggregateInput
  }

  export type PublicacionesForoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PublicacionesForoWhereInput | PublicacionesForoWhereInput[]
    OR?: PublicacionesForoWhereInput[]
    NOT?: PublicacionesForoWhereInput | PublicacionesForoWhereInput[]
    foroId?: IntFilter<"PublicacionesForo"> | number
    autorId?: IntFilter<"PublicacionesForo"> | number
    titulo?: StringNullableFilter<"PublicacionesForo"> | string | null
    contenido?: StringNullableFilter<"PublicacionesForo"> | string | null
    fecha?: DateTimeFilter<"PublicacionesForo"> | Date | string
    foro?: XOR<ForosScalarRelationFilter, ForosWhereInput>
    autor?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    comentarios?: ComentariosPublicacionListRelationFilter
  }, "id">

  export type PublicacionesForoOrderByWithAggregationInput = {
    id?: SortOrder
    foroId?: SortOrder
    autorId?: SortOrder
    titulo?: SortOrderInput | SortOrder
    contenido?: SortOrderInput | SortOrder
    fecha?: SortOrder
    _count?: PublicacionesForoCountOrderByAggregateInput
    _avg?: PublicacionesForoAvgOrderByAggregateInput
    _max?: PublicacionesForoMaxOrderByAggregateInput
    _min?: PublicacionesForoMinOrderByAggregateInput
    _sum?: PublicacionesForoSumOrderByAggregateInput
  }

  export type PublicacionesForoScalarWhereWithAggregatesInput = {
    AND?: PublicacionesForoScalarWhereWithAggregatesInput | PublicacionesForoScalarWhereWithAggregatesInput[]
    OR?: PublicacionesForoScalarWhereWithAggregatesInput[]
    NOT?: PublicacionesForoScalarWhereWithAggregatesInput | PublicacionesForoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PublicacionesForo"> | number
    foroId?: IntWithAggregatesFilter<"PublicacionesForo"> | number
    autorId?: IntWithAggregatesFilter<"PublicacionesForo"> | number
    titulo?: StringNullableWithAggregatesFilter<"PublicacionesForo"> | string | null
    contenido?: StringNullableWithAggregatesFilter<"PublicacionesForo"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"PublicacionesForo"> | Date | string
  }

  export type ComentariosPublicacionWhereInput = {
    AND?: ComentariosPublicacionWhereInput | ComentariosPublicacionWhereInput[]
    OR?: ComentariosPublicacionWhereInput[]
    NOT?: ComentariosPublicacionWhereInput | ComentariosPublicacionWhereInput[]
    id?: IntFilter<"ComentariosPublicacion"> | number
    publicacionId?: IntFilter<"ComentariosPublicacion"> | number
    autorId?: IntFilter<"ComentariosPublicacion"> | number
    contenido?: StringNullableFilter<"ComentariosPublicacion"> | string | null
    fecha?: DateTimeFilter<"ComentariosPublicacion"> | Date | string
    publicacion?: XOR<PublicacionesForoScalarRelationFilter, PublicacionesForoWhereInput>
    autor?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }

  export type ComentariosPublicacionOrderByWithRelationInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    autorId?: SortOrder
    contenido?: SortOrderInput | SortOrder
    fecha?: SortOrder
    publicacion?: PublicacionesForoOrderByWithRelationInput
    autor?: CuentasOrderByWithRelationInput
  }

  export type ComentariosPublicacionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ComentariosPublicacionWhereInput | ComentariosPublicacionWhereInput[]
    OR?: ComentariosPublicacionWhereInput[]
    NOT?: ComentariosPublicacionWhereInput | ComentariosPublicacionWhereInput[]
    publicacionId?: IntFilter<"ComentariosPublicacion"> | number
    autorId?: IntFilter<"ComentariosPublicacion"> | number
    contenido?: StringNullableFilter<"ComentariosPublicacion"> | string | null
    fecha?: DateTimeFilter<"ComentariosPublicacion"> | Date | string
    publicacion?: XOR<PublicacionesForoScalarRelationFilter, PublicacionesForoWhereInput>
    autor?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }, "id">

  export type ComentariosPublicacionOrderByWithAggregationInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    autorId?: SortOrder
    contenido?: SortOrderInput | SortOrder
    fecha?: SortOrder
    _count?: ComentariosPublicacionCountOrderByAggregateInput
    _avg?: ComentariosPublicacionAvgOrderByAggregateInput
    _max?: ComentariosPublicacionMaxOrderByAggregateInput
    _min?: ComentariosPublicacionMinOrderByAggregateInput
    _sum?: ComentariosPublicacionSumOrderByAggregateInput
  }

  export type ComentariosPublicacionScalarWhereWithAggregatesInput = {
    AND?: ComentariosPublicacionScalarWhereWithAggregatesInput | ComentariosPublicacionScalarWhereWithAggregatesInput[]
    OR?: ComentariosPublicacionScalarWhereWithAggregatesInput[]
    NOT?: ComentariosPublicacionScalarWhereWithAggregatesInput | ComentariosPublicacionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ComentariosPublicacion"> | number
    publicacionId?: IntWithAggregatesFilter<"ComentariosPublicacion"> | number
    autorId?: IntWithAggregatesFilter<"ComentariosPublicacion"> | number
    contenido?: StringNullableWithAggregatesFilter<"ComentariosPublicacion"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"ComentariosPublicacion"> | Date | string
  }

  export type UbicacionesWhereInput = {
    AND?: UbicacionesWhereInput | UbicacionesWhereInput[]
    OR?: UbicacionesWhereInput[]
    NOT?: UbicacionesWhereInput | UbicacionesWhereInput[]
    id?: IntFilter<"Ubicaciones"> | number
    usuarioId?: IntFilter<"Ubicaciones"> | number
    nombreLugar?: StringNullableFilter<"Ubicaciones"> | string | null
    descripcion?: StringNullableFilter<"Ubicaciones"> | string | null
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }

  export type UbicacionesOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    nombreLugar?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    usuario?: CuentasOrderByWithRelationInput
  }

  export type UbicacionesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UbicacionesWhereInput | UbicacionesWhereInput[]
    OR?: UbicacionesWhereInput[]
    NOT?: UbicacionesWhereInput | UbicacionesWhereInput[]
    usuarioId?: IntFilter<"Ubicaciones"> | number
    nombreLugar?: StringNullableFilter<"Ubicaciones"> | string | null
    descripcion?: StringNullableFilter<"Ubicaciones"> | string | null
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }, "id">

  export type UbicacionesOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    nombreLugar?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: UbicacionesCountOrderByAggregateInput
    _avg?: UbicacionesAvgOrderByAggregateInput
    _max?: UbicacionesMaxOrderByAggregateInput
    _min?: UbicacionesMinOrderByAggregateInput
    _sum?: UbicacionesSumOrderByAggregateInput
  }

  export type UbicacionesScalarWhereWithAggregatesInput = {
    AND?: UbicacionesScalarWhereWithAggregatesInput | UbicacionesScalarWhereWithAggregatesInput[]
    OR?: UbicacionesScalarWhereWithAggregatesInput[]
    NOT?: UbicacionesScalarWhereWithAggregatesInput | UbicacionesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Ubicaciones"> | number
    usuarioId?: IntWithAggregatesFilter<"Ubicaciones"> | number
    nombreLugar?: StringNullableWithAggregatesFilter<"Ubicaciones"> | string | null
    descripcion?: StringNullableWithAggregatesFilter<"Ubicaciones"> | string | null
  }

  export type ResumenUsuarioWhereInput = {
    AND?: ResumenUsuarioWhereInput | ResumenUsuarioWhereInput[]
    OR?: ResumenUsuarioWhereInput[]
    NOT?: ResumenUsuarioWhereInput | ResumenUsuarioWhereInput[]
    usuarioId?: IntFilter<"ResumenUsuario"> | number
    totalProductos?: IntFilter<"ResumenUsuario"> | number
    totalVentas?: IntFilter<"ResumenUsuario"> | number
    totalCompras?: IntFilter<"ResumenUsuario"> | number
    promedioCalificacion?: DecimalFilter<"ResumenUsuario"> | Decimal | DecimalJsLike | number | string
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }

  export type ResumenUsuarioOrderByWithRelationInput = {
    usuarioId?: SortOrder
    totalProductos?: SortOrder
    totalVentas?: SortOrder
    totalCompras?: SortOrder
    promedioCalificacion?: SortOrder
    usuario?: CuentasOrderByWithRelationInput
  }

  export type ResumenUsuarioWhereUniqueInput = Prisma.AtLeast<{
    usuarioId?: number
    AND?: ResumenUsuarioWhereInput | ResumenUsuarioWhereInput[]
    OR?: ResumenUsuarioWhereInput[]
    NOT?: ResumenUsuarioWhereInput | ResumenUsuarioWhereInput[]
    totalProductos?: IntFilter<"ResumenUsuario"> | number
    totalVentas?: IntFilter<"ResumenUsuario"> | number
    totalCompras?: IntFilter<"ResumenUsuario"> | number
    promedioCalificacion?: DecimalFilter<"ResumenUsuario"> | Decimal | DecimalJsLike | number | string
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }, "usuarioId">

  export type ResumenUsuarioOrderByWithAggregationInput = {
    usuarioId?: SortOrder
    totalProductos?: SortOrder
    totalVentas?: SortOrder
    totalCompras?: SortOrder
    promedioCalificacion?: SortOrder
    _count?: ResumenUsuarioCountOrderByAggregateInput
    _avg?: ResumenUsuarioAvgOrderByAggregateInput
    _max?: ResumenUsuarioMaxOrderByAggregateInput
    _min?: ResumenUsuarioMinOrderByAggregateInput
    _sum?: ResumenUsuarioSumOrderByAggregateInput
  }

  export type ResumenUsuarioScalarWhereWithAggregatesInput = {
    AND?: ResumenUsuarioScalarWhereWithAggregatesInput | ResumenUsuarioScalarWhereWithAggregatesInput[]
    OR?: ResumenUsuarioScalarWhereWithAggregatesInput[]
    NOT?: ResumenUsuarioScalarWhereWithAggregatesInput | ResumenUsuarioScalarWhereWithAggregatesInput[]
    usuarioId?: IntWithAggregatesFilter<"ResumenUsuario"> | number
    totalProductos?: IntWithAggregatesFilter<"ResumenUsuario"> | number
    totalVentas?: IntWithAggregatesFilter<"ResumenUsuario"> | number
    totalCompras?: IntWithAggregatesFilter<"ResumenUsuario"> | number
    promedioCalificacion?: DecimalWithAggregatesFilter<"ResumenUsuario"> | Decimal | DecimalJsLike | number | string
  }

  export type SeguidoresWhereInput = {
    AND?: SeguidoresWhereInput | SeguidoresWhereInput[]
    OR?: SeguidoresWhereInput[]
    NOT?: SeguidoresWhereInput | SeguidoresWhereInput[]
    usuarioSigueId?: IntFilter<"Seguidores"> | number
    usuarioSeguidoId?: IntFilter<"Seguidores"> | number
    fecha?: DateTimeFilter<"Seguidores"> | Date | string
    usuarioSigue?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    usuarioSeguido?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }

  export type SeguidoresOrderByWithRelationInput = {
    usuarioSigueId?: SortOrder
    usuarioSeguidoId?: SortOrder
    fecha?: SortOrder
    usuarioSigue?: CuentasOrderByWithRelationInput
    usuarioSeguido?: CuentasOrderByWithRelationInput
  }

  export type SeguidoresWhereUniqueInput = Prisma.AtLeast<{
    usuarioSigueId_usuarioSeguidoId?: SeguidoresUsuarioSigueIdUsuarioSeguidoIdCompoundUniqueInput
    AND?: SeguidoresWhereInput | SeguidoresWhereInput[]
    OR?: SeguidoresWhereInput[]
    NOT?: SeguidoresWhereInput | SeguidoresWhereInput[]
    usuarioSigueId?: IntFilter<"Seguidores"> | number
    usuarioSeguidoId?: IntFilter<"Seguidores"> | number
    fecha?: DateTimeFilter<"Seguidores"> | Date | string
    usuarioSigue?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    usuarioSeguido?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
  }, "usuarioSigueId_usuarioSeguidoId">

  export type SeguidoresOrderByWithAggregationInput = {
    usuarioSigueId?: SortOrder
    usuarioSeguidoId?: SortOrder
    fecha?: SortOrder
    _count?: SeguidoresCountOrderByAggregateInput
    _avg?: SeguidoresAvgOrderByAggregateInput
    _max?: SeguidoresMaxOrderByAggregateInput
    _min?: SeguidoresMinOrderByAggregateInput
    _sum?: SeguidoresSumOrderByAggregateInput
  }

  export type SeguidoresScalarWhereWithAggregatesInput = {
    AND?: SeguidoresScalarWhereWithAggregatesInput | SeguidoresScalarWhereWithAggregatesInput[]
    OR?: SeguidoresScalarWhereWithAggregatesInput[]
    NOT?: SeguidoresScalarWhereWithAggregatesInput | SeguidoresScalarWhereWithAggregatesInput[]
    usuarioSigueId?: IntWithAggregatesFilter<"Seguidores"> | number
    usuarioSeguidoId?: IntWithAggregatesFilter<"Seguidores"> | number
    fecha?: DateTimeWithAggregatesFilter<"Seguidores"> | Date | string
  }

  export type MetricasDiariasWhereInput = {
    AND?: MetricasDiariasWhereInput | MetricasDiariasWhereInput[]
    OR?: MetricasDiariasWhereInput[]
    NOT?: MetricasDiariasWhereInput | MetricasDiariasWhereInput[]
    id?: IntFilter<"MetricasDiarias"> | number
    fechaMetricas?: DateTimeFilter<"MetricasDiarias"> | Date | string
    usuariosActivos?: IntFilter<"MetricasDiarias"> | number
    nuevosUsuarios?: IntFilter<"MetricasDiarias"> | number
    productosCreados?: IntFilter<"MetricasDiarias"> | number
    transaccionesCompletadas?: IntFilter<"MetricasDiarias"> | number
    mensajesEnviados?: IntFilter<"MetricasDiarias"> | number
  }

  export type MetricasDiariasOrderByWithRelationInput = {
    id?: SortOrder
    fechaMetricas?: SortOrder
    usuariosActivos?: SortOrder
    nuevosUsuarios?: SortOrder
    productosCreados?: SortOrder
    transaccionesCompletadas?: SortOrder
    mensajesEnviados?: SortOrder
  }

  export type MetricasDiariasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MetricasDiariasWhereInput | MetricasDiariasWhereInput[]
    OR?: MetricasDiariasWhereInput[]
    NOT?: MetricasDiariasWhereInput | MetricasDiariasWhereInput[]
    fechaMetricas?: DateTimeFilter<"MetricasDiarias"> | Date | string
    usuariosActivos?: IntFilter<"MetricasDiarias"> | number
    nuevosUsuarios?: IntFilter<"MetricasDiarias"> | number
    productosCreados?: IntFilter<"MetricasDiarias"> | number
    transaccionesCompletadas?: IntFilter<"MetricasDiarias"> | number
    mensajesEnviados?: IntFilter<"MetricasDiarias"> | number
  }, "id">

  export type MetricasDiariasOrderByWithAggregationInput = {
    id?: SortOrder
    fechaMetricas?: SortOrder
    usuariosActivos?: SortOrder
    nuevosUsuarios?: SortOrder
    productosCreados?: SortOrder
    transaccionesCompletadas?: SortOrder
    mensajesEnviados?: SortOrder
    _count?: MetricasDiariasCountOrderByAggregateInput
    _avg?: MetricasDiariasAvgOrderByAggregateInput
    _max?: MetricasDiariasMaxOrderByAggregateInput
    _min?: MetricasDiariasMinOrderByAggregateInput
    _sum?: MetricasDiariasSumOrderByAggregateInput
  }

  export type MetricasDiariasScalarWhereWithAggregatesInput = {
    AND?: MetricasDiariasScalarWhereWithAggregatesInput | MetricasDiariasScalarWhereWithAggregatesInput[]
    OR?: MetricasDiariasScalarWhereWithAggregatesInput[]
    NOT?: MetricasDiariasScalarWhereWithAggregatesInput | MetricasDiariasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MetricasDiarias"> | number
    fechaMetricas?: DateTimeWithAggregatesFilter<"MetricasDiarias"> | Date | string
    usuariosActivos?: IntWithAggregatesFilter<"MetricasDiarias"> | number
    nuevosUsuarios?: IntWithAggregatesFilter<"MetricasDiarias"> | number
    productosCreados?: IntWithAggregatesFilter<"MetricasDiarias"> | number
    transaccionesCompletadas?: IntWithAggregatesFilter<"MetricasDiarias"> | number
    mensajesEnviados?: IntWithAggregatesFilter<"MetricasDiarias"> | number
  }

  export type FavoritosWhereInput = {
    AND?: FavoritosWhereInput | FavoritosWhereInput[]
    OR?: FavoritosWhereInput[]
    NOT?: FavoritosWhereInput | FavoritosWhereInput[]
    id?: IntFilter<"Favoritos"> | number
    usuarioId?: IntFilter<"Favoritos"> | number
    publicacionId?: IntFilter<"Favoritos"> | number
    fecha?: DateTimeFilter<"Favoritos"> | Date | string
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    publicacion?: XOR<PublicacionesScalarRelationFilter, PublicacionesWhereInput>
  }

  export type FavoritosOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    publicacionId?: SortOrder
    fecha?: SortOrder
    usuario?: CuentasOrderByWithRelationInput
    publicacion?: PublicacionesOrderByWithRelationInput
  }

  export type FavoritosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    usuarioId_publicacionId?: FavoritosUsuarioIdPublicacionIdCompoundUniqueInput
    AND?: FavoritosWhereInput | FavoritosWhereInput[]
    OR?: FavoritosWhereInput[]
    NOT?: FavoritosWhereInput | FavoritosWhereInput[]
    usuarioId?: IntFilter<"Favoritos"> | number
    publicacionId?: IntFilter<"Favoritos"> | number
    fecha?: DateTimeFilter<"Favoritos"> | Date | string
    usuario?: XOR<CuentasScalarRelationFilter, CuentasWhereInput>
    publicacion?: XOR<PublicacionesScalarRelationFilter, PublicacionesWhereInput>
  }, "id" | "usuarioId_publicacionId">

  export type FavoritosOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    publicacionId?: SortOrder
    fecha?: SortOrder
    _count?: FavoritosCountOrderByAggregateInput
    _avg?: FavoritosAvgOrderByAggregateInput
    _max?: FavoritosMaxOrderByAggregateInput
    _min?: FavoritosMinOrderByAggregateInput
    _sum?: FavoritosSumOrderByAggregateInput
  }

  export type FavoritosScalarWhereWithAggregatesInput = {
    AND?: FavoritosScalarWhereWithAggregatesInput | FavoritosScalarWhereWithAggregatesInput[]
    OR?: FavoritosScalarWhereWithAggregatesInput[]
    NOT?: FavoritosScalarWhereWithAggregatesInput | FavoritosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Favoritos"> | number
    usuarioId?: IntWithAggregatesFilter<"Favoritos"> | number
    publicacionId?: IntWithAggregatesFilter<"Favoritos"> | number
    fecha?: DateTimeWithAggregatesFilter<"Favoritos"> | Date | string
  }

  export type CuentasCreateInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasCreateManyInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
  }

  export type CuentasUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type CuentasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type RolesCreateInput = {
    nombre: string
    cuentas?: CuentasCreateNestedManyWithoutRolInput
  }

  export type RolesUncheckedCreateInput = {
    id?: number
    nombre: string
    cuentas?: CuentasUncheckedCreateNestedManyWithoutRolInput
  }

  export type RolesUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cuentas?: CuentasUpdateManyWithoutRolNestedInput
  }

  export type RolesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cuentas?: CuentasUncheckedUpdateManyWithoutRolNestedInput
  }

  export type RolesCreateManyInput = {
    id?: number
    nombre: string
  }

  export type RolesUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type RolesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EstadosUsuarioCreateInput = {
    nombre: string
    cuentas?: CuentasCreateNestedManyWithoutEstadoInput
  }

  export type EstadosUsuarioUncheckedCreateInput = {
    id?: number
    nombre: string
    cuentas?: CuentasUncheckedCreateNestedManyWithoutEstadoInput
  }

  export type EstadosUsuarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cuentas?: CuentasUpdateManyWithoutEstadoNestedInput
  }

  export type EstadosUsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cuentas?: CuentasUncheckedUpdateManyWithoutEstadoNestedInput
  }

  export type EstadosUsuarioCreateManyInput = {
    id?: number
    nombre: string
  }

  export type EstadosUsuarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EstadosUsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriasCreateInput = {
    nombre: string
    categoriaPadre?: CategoriasCreateNestedOneWithoutSubcategoriasInput
    subcategorias?: CategoriasCreateNestedManyWithoutCategoriaPadreInput
    productos?: ProductosCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriasUncheckedCreateInput = {
    id?: number
    nombre: string
    categoriaPadreId?: number | null
    subcategorias?: CategoriasUncheckedCreateNestedManyWithoutCategoriaPadreInput
    productos?: ProductosUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriasUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaPadre?: CategoriasUpdateOneWithoutSubcategoriasNestedInput
    subcategorias?: CategoriasUpdateManyWithoutCategoriaPadreNestedInput
    productos?: ProductosUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaPadreId?: NullableIntFieldUpdateOperationsInput | number | null
    subcategorias?: CategoriasUncheckedUpdateManyWithoutCategoriaPadreNestedInput
    productos?: ProductosUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriasCreateManyInput = {
    id?: number
    nombre: string
    categoriaPadreId?: number | null
  }

  export type CategoriasUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CategoriasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaPadreId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type EstadosProductoCreateInput = {
    nombre: string
    productos?: ProductosCreateNestedManyWithoutEstadoInput
  }

  export type EstadosProductoUncheckedCreateInput = {
    id?: number
    nombre: string
    productos?: ProductosUncheckedCreateNestedManyWithoutEstadoInput
  }

  export type EstadosProductoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    productos?: ProductosUpdateManyWithoutEstadoNestedInput
  }

  export type EstadosProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    productos?: ProductosUncheckedUpdateManyWithoutEstadoNestedInput
  }

  export type EstadosProductoCreateManyInput = {
    id?: number
    nombre: string
  }

  export type EstadosProductoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EstadosProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProductosCreateInput = {
    nombre: string
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    categoria?: CategoriasCreateNestedOneWithoutProductosInput
    vendedor: CuentasCreateNestedOneWithoutProductosInput
    estado: EstadosProductoCreateNestedOneWithoutProductosInput
    transacciones?: TransaccionesCreateNestedManyWithoutProductoInput
    carrito?: CarritoCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoCreateNestedManyWithoutProductoInput
    reportes?: ReportesCreateNestedManyWithoutProductoInput
  }

  export type ProductosUncheckedCreateInput = {
    id?: number
    nombre: string
    categoriaId?: number | null
    vendedorId: number
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    estadoId: number
    transacciones?: TransaccionesUncheckedCreateNestedManyWithoutProductoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoUncheckedCreateNestedManyWithoutProductoInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriasUpdateOneWithoutProductosNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutProductosNestedInput
    estado?: EstadosProductoUpdateOneRequiredWithoutProductosNestedInput
    transacciones?: TransaccionesUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    transacciones?: TransaccionesUncheckedUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUncheckedUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductosCreateManyInput = {
    id?: number
    nombre: string
    categoriaId?: number | null
    vendedorId: number
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    estadoId: number
  }

  export type ProductosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type ImagenesProductoCreateInput = {
    urlImagen?: Uint8Array | null
    producto: ProductosCreateNestedOneWithoutImagenesInput
  }

  export type ImagenesProductoUncheckedCreateInput = {
    id?: number
    productoId: number
    urlImagen?: Uint8Array | null
  }

  export type ImagenesProductoUpdateInput = {
    urlImagen?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
    producto?: ProductosUpdateOneRequiredWithoutImagenesNestedInput
  }

  export type ImagenesProductoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    urlImagen?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
  }

  export type ImagenesProductoCreateManyInput = {
    id?: number
    productoId: number
    urlImagen?: Uint8Array | null
  }

  export type ImagenesProductoUpdateManyMutationInput = {
    urlImagen?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
  }

  export type ImagenesProductoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    urlImagen?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
  }

  export type EstadosTransaccionCreateInput = {
    nombre: string
    transacciones?: TransaccionesCreateNestedManyWithoutEstadoInput
  }

  export type EstadosTransaccionUncheckedCreateInput = {
    id?: number
    nombre: string
    transacciones?: TransaccionesUncheckedCreateNestedManyWithoutEstadoInput
  }

  export type EstadosTransaccionUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    transacciones?: TransaccionesUpdateManyWithoutEstadoNestedInput
  }

  export type EstadosTransaccionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    transacciones?: TransaccionesUncheckedUpdateManyWithoutEstadoNestedInput
  }

  export type EstadosTransaccionCreateManyInput = {
    id?: number
    nombre: string
  }

  export type EstadosTransaccionUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EstadosTransaccionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type TransaccionesCreateInput = {
    fecha?: Date | string
    producto: ProductosCreateNestedOneWithoutTransaccionesInput
    comprador: CuentasCreateNestedOneWithoutTransaccionesCompraInput
    vendedor: CuentasCreateNestedOneWithoutTransaccionesVentaInput
    estado: EstadosTransaccionCreateNestedOneWithoutTransaccionesInput
    calificaciones?: CalificacionesCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionesUncheckedCreateInput = {
    id?: number
    productoId: number
    compradorId: number
    vendedorId: number
    fecha?: Date | string
    estadoId: number
    calificaciones?: CalificacionesUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionesUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductosUpdateOneRequiredWithoutTransaccionesNestedInput
    comprador?: CuentasUpdateOneRequiredWithoutTransaccionesCompraNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutTransaccionesVentaNestedInput
    estado?: EstadosTransaccionUpdateOneRequiredWithoutTransaccionesNestedInput
    calificaciones?: CalificacionesUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    compradorId?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    calificaciones?: CalificacionesUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionesCreateManyInput = {
    id?: number
    productoId: number
    compradorId: number
    vendedorId: number
    fecha?: Date | string
    estadoId: number
  }

  export type TransaccionesUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransaccionesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    compradorId?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionesCreateInput = {
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
    transaccion: TransaccionesCreateNestedOneWithoutCalificacionesInput
    calificador: CuentasCreateNestedOneWithoutCalificacionesDadasInput
    calificado: CuentasCreateNestedOneWithoutCalificacionesRecibidasInput
  }

  export type CalificacionesUncheckedCreateInput = {
    id?: number
    transaccionId: number
    calificadorId: number
    calificadoId: number
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
  }

  export type CalificacionesUpdateInput = {
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    transaccion?: TransaccionesUpdateOneRequiredWithoutCalificacionesNestedInput
    calificador?: CuentasUpdateOneRequiredWithoutCalificacionesDadasNestedInput
    calificado?: CuentasUpdateOneRequiredWithoutCalificacionesRecibidasNestedInput
  }

  export type CalificacionesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    calificadorId?: IntFieldUpdateOperationsInput | number
    calificadoId?: IntFieldUpdateOperationsInput | number
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionesCreateManyInput = {
    id?: number
    transaccionId: number
    calificadorId: number
    calificadoId: number
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
  }

  export type CalificacionesUpdateManyMutationInput = {
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    calificadorId?: IntFieldUpdateOperationsInput | number
    calificadoId?: IntFieldUpdateOperationsInput | number
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CarritoCreateInput = {
    cantidad: number
    usuario: CuentasCreateNestedOneWithoutCarritoInput
    producto: ProductosCreateNestedOneWithoutCarritoInput
  }

  export type CarritoUncheckedCreateInput = {
    id?: number
    usuarioId: number
    productoId: number
    cantidad: number
  }

  export type CarritoUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    usuario?: CuentasUpdateOneRequiredWithoutCarritoNestedInput
    producto?: ProductosUpdateOneRequiredWithoutCarritoNestedInput
  }

  export type CarritoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type CarritoCreateManyInput = {
    id?: number
    usuarioId: number
    productoId: number
    cantidad: number
  }

  export type CarritoUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type CarritoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type MensajesCreateInput = {
    contenido?: string | null
    fechaEnvio?: Date | string
    leido?: boolean
    remitente: CuentasCreateNestedOneWithoutMensajesEnviadosInput
    destinatario: CuentasCreateNestedOneWithoutMensajesRecibidosInput
  }

  export type MensajesUncheckedCreateInput = {
    id?: number
    remitenteId: number
    destinatarioId: number
    contenido?: string | null
    fechaEnvio?: Date | string
    leido?: boolean
  }

  export type MensajesUpdateInput = {
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    remitente?: CuentasUpdateOneRequiredWithoutMensajesEnviadosNestedInput
    destinatario?: CuentasUpdateOneRequiredWithoutMensajesRecibidosNestedInput
  }

  export type MensajesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MensajesCreateManyInput = {
    id?: number
    remitenteId: number
    destinatarioId: number
    contenido?: string | null
    fechaEnvio?: Date | string
    leido?: boolean
  }

  export type MensajesUpdateManyMutationInput = {
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MensajesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
  }

  export type EstadosReporteCreateInput = {
    nombre: string
    reportes?: ReportesCreateNestedManyWithoutEstadoInput
  }

  export type EstadosReporteUncheckedCreateInput = {
    id?: number
    nombre: string
    reportes?: ReportesUncheckedCreateNestedManyWithoutEstadoInput
  }

  export type EstadosReporteUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    reportes?: ReportesUpdateManyWithoutEstadoNestedInput
  }

  export type EstadosReporteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    reportes?: ReportesUncheckedUpdateManyWithoutEstadoNestedInput
  }

  export type EstadosReporteCreateManyInput = {
    id?: number
    nombre: string
  }

  export type EstadosReporteUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EstadosReporteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ReportesCreateInput = {
    motivo?: string | null
    fecha?: Date | string
    reportante: CuentasCreateNestedOneWithoutReportesInput
    usuarioReportado?: CuentasCreateNestedOneWithoutReportesRecibidosInput
    producto?: ProductosCreateNestedOneWithoutReportesInput
    estado: EstadosReporteCreateNestedOneWithoutReportesInput
  }

  export type ReportesUncheckedCreateInput = {
    id?: number
    reportanteId: number
    usuarioReportadoId?: number | null
    productoId?: number | null
    motivo?: string | null
    fecha?: Date | string
    estadoId: number
  }

  export type ReportesUpdateInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    reportante?: CuentasUpdateOneRequiredWithoutReportesNestedInput
    usuarioReportado?: CuentasUpdateOneWithoutReportesRecibidosNestedInput
    producto?: ProductosUpdateOneWithoutReportesNestedInput
    estado?: EstadosReporteUpdateOneRequiredWithoutReportesNestedInput
  }

  export type ReportesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    reportanteId?: IntFieldUpdateOperationsInput | number
    usuarioReportadoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type ReportesCreateManyInput = {
    id?: number
    reportanteId: number
    usuarioReportadoId?: number | null
    productoId?: number | null
    motivo?: string | null
    fecha?: Date | string
    estadoId: number
  }

  export type ReportesUpdateManyMutationInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    reportanteId?: IntFieldUpdateOperationsInput | number
    usuarioReportadoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type ActividadUsuarioCreateInput = {
    accion?: string | null
    detalles?: string | null
    fecha?: Date | string
    usuario: CuentasCreateNestedOneWithoutActividadesInput
  }

  export type ActividadUsuarioUncheckedCreateInput = {
    id?: number
    usuarioId: number
    accion?: string | null
    detalles?: string | null
    fecha?: Date | string
  }

  export type ActividadUsuarioUpdateInput = {
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: CuentasUpdateOneRequiredWithoutActividadesNestedInput
  }

  export type ActividadUsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActividadUsuarioCreateManyInput = {
    id?: number
    usuarioId: number
    accion?: string | null
    detalles?: string | null
    fecha?: Date | string
  }

  export type ActividadUsuarioUpdateManyMutationInput = {
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActividadUsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesCreateInput = {
    tipo?: string | null
    mensaje?: string | null
    leido?: boolean
    fecha?: Date | string
    usuario: CuentasCreateNestedOneWithoutNotificacionesInput
  }

  export type NotificacionesUncheckedCreateInput = {
    id?: number
    usuarioId: number
    tipo?: string | null
    mensaje?: string | null
    leido?: boolean
    fecha?: Date | string
  }

  export type NotificacionesUpdateInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    leido?: BoolFieldUpdateOperationsInput | boolean
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: CuentasUpdateOneRequiredWithoutNotificacionesNestedInput
  }

  export type NotificacionesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    leido?: BoolFieldUpdateOperationsInput | boolean
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesCreateManyInput = {
    id?: number
    usuarioId: number
    tipo?: string | null
    mensaje?: string | null
    leido?: boolean
    fecha?: Date | string
  }

  export type NotificacionesUpdateManyMutationInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    leido?: BoolFieldUpdateOperationsInput | boolean
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    leido?: BoolFieldUpdateOperationsInput | boolean
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionesCreateInput = {
    titulo?: string | null
    cuerpo?: string | null
    estado?: string | null
    fecha?: Date | string
    visto?: boolean
    usuario: CuentasCreateNestedOneWithoutPublicacionesInput
    favoritos?: FavoritosCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionesUncheckedCreateInput = {
    id?: number
    titulo?: string | null
    cuerpo?: string | null
    usuarioId: number
    estado?: string | null
    fecha?: Date | string
    visto?: boolean
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionesUpdateInput = {
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    usuario?: CuentasUpdateOneRequiredWithoutPublicacionesNestedInput
    favoritos?: FavoritosUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    favoritos?: FavoritosUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionesCreateManyInput = {
    id?: number
    titulo?: string | null
    cuerpo?: string | null
    usuarioId: number
    estado?: string | null
    fecha?: Date | string
    visto?: boolean
  }

  export type PublicacionesUpdateManyMutationInput = {
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PublicacionesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ForosCreateInput = {
    nombre: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    creador: CuentasCreateNestedOneWithoutForosInput
    publicaciones?: PublicacionesForoCreateNestedManyWithoutForoInput
  }

  export type ForosUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    creadorId: number
    fechaCreacion?: Date | string
    publicaciones?: PublicacionesForoUncheckedCreateNestedManyWithoutForoInput
  }

  export type ForosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    creador?: CuentasUpdateOneRequiredWithoutForosNestedInput
    publicaciones?: PublicacionesForoUpdateManyWithoutForoNestedInput
  }

  export type ForosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    creadorId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    publicaciones?: PublicacionesForoUncheckedUpdateManyWithoutForoNestedInput
  }

  export type ForosCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    creadorId: number
    fechaCreacion?: Date | string
  }

  export type ForosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ForosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    creadorId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionesForoCreateInput = {
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
    foro: ForosCreateNestedOneWithoutPublicacionesInput
    autor: CuentasCreateNestedOneWithoutPublicacionesForoInput
    comentarios?: ComentariosPublicacionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionesForoUncheckedCreateInput = {
    id?: number
    foroId: number
    autorId: number
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
    comentarios?: ComentariosPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionesForoUpdateInput = {
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    foro?: ForosUpdateOneRequiredWithoutPublicacionesNestedInput
    autor?: CuentasUpdateOneRequiredWithoutPublicacionesForoNestedInput
    comentarios?: ComentariosPublicacionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionesForoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    foroId?: IntFieldUpdateOperationsInput | number
    autorId?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarios?: ComentariosPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionesForoCreateManyInput = {
    id?: number
    foroId: number
    autorId: number
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
  }

  export type PublicacionesForoUpdateManyMutationInput = {
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionesForoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    foroId?: IntFieldUpdateOperationsInput | number
    autorId?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentariosPublicacionCreateInput = {
    contenido?: string | null
    fecha?: Date | string
    publicacion: PublicacionesForoCreateNestedOneWithoutComentariosInput
    autor: CuentasCreateNestedOneWithoutComentariosPublicacionInput
  }

  export type ComentariosPublicacionUncheckedCreateInput = {
    id?: number
    publicacionId: number
    autorId: number
    contenido?: string | null
    fecha?: Date | string
  }

  export type ComentariosPublicacionUpdateInput = {
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacion?: PublicacionesForoUpdateOneRequiredWithoutComentariosNestedInput
    autor?: CuentasUpdateOneRequiredWithoutComentariosPublicacionNestedInput
  }

  export type ComentariosPublicacionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    autorId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentariosPublicacionCreateManyInput = {
    id?: number
    publicacionId: number
    autorId: number
    contenido?: string | null
    fecha?: Date | string
  }

  export type ComentariosPublicacionUpdateManyMutationInput = {
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentariosPublicacionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    autorId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UbicacionesCreateInput = {
    nombreLugar?: string | null
    descripcion?: string | null
    usuario: CuentasCreateNestedOneWithoutUbicacionesInput
  }

  export type UbicacionesUncheckedCreateInput = {
    id?: number
    usuarioId: number
    nombreLugar?: string | null
    descripcion?: string | null
  }

  export type UbicacionesUpdateInput = {
    nombreLugar?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    usuario?: CuentasUpdateOneRequiredWithoutUbicacionesNestedInput
  }

  export type UbicacionesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    nombreLugar?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UbicacionesCreateManyInput = {
    id?: number
    usuarioId: number
    nombreLugar?: string | null
    descripcion?: string | null
  }

  export type UbicacionesUpdateManyMutationInput = {
    nombreLugar?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UbicacionesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    nombreLugar?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ResumenUsuarioCreateInput = {
    totalProductos?: number
    totalVentas?: number
    totalCompras?: number
    promedioCalificacion?: Decimal | DecimalJsLike | number | string
    usuario: CuentasCreateNestedOneWithoutResumenUsuarioInput
  }

  export type ResumenUsuarioUncheckedCreateInput = {
    usuarioId: number
    totalProductos?: number
    totalVentas?: number
    totalCompras?: number
    promedioCalificacion?: Decimal | DecimalJsLike | number | string
  }

  export type ResumenUsuarioUpdateInput = {
    totalProductos?: IntFieldUpdateOperationsInput | number
    totalVentas?: IntFieldUpdateOperationsInput | number
    totalCompras?: IntFieldUpdateOperationsInput | number
    promedioCalificacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    usuario?: CuentasUpdateOneRequiredWithoutResumenUsuarioNestedInput
  }

  export type ResumenUsuarioUncheckedUpdateInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    totalProductos?: IntFieldUpdateOperationsInput | number
    totalVentas?: IntFieldUpdateOperationsInput | number
    totalCompras?: IntFieldUpdateOperationsInput | number
    promedioCalificacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ResumenUsuarioCreateManyInput = {
    usuarioId: number
    totalProductos?: number
    totalVentas?: number
    totalCompras?: number
    promedioCalificacion?: Decimal | DecimalJsLike | number | string
  }

  export type ResumenUsuarioUpdateManyMutationInput = {
    totalProductos?: IntFieldUpdateOperationsInput | number
    totalVentas?: IntFieldUpdateOperationsInput | number
    totalCompras?: IntFieldUpdateOperationsInput | number
    promedioCalificacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ResumenUsuarioUncheckedUpdateManyInput = {
    usuarioId?: IntFieldUpdateOperationsInput | number
    totalProductos?: IntFieldUpdateOperationsInput | number
    totalVentas?: IntFieldUpdateOperationsInput | number
    totalCompras?: IntFieldUpdateOperationsInput | number
    promedioCalificacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type SeguidoresCreateInput = {
    fecha?: Date | string
    usuarioSigue: CuentasCreateNestedOneWithoutSiguiendoInput
    usuarioSeguido: CuentasCreateNestedOneWithoutSeguidoresInput
  }

  export type SeguidoresUncheckedCreateInput = {
    usuarioSigueId: number
    usuarioSeguidoId: number
    fecha?: Date | string
  }

  export type SeguidoresUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioSigue?: CuentasUpdateOneRequiredWithoutSiguiendoNestedInput
    usuarioSeguido?: CuentasUpdateOneRequiredWithoutSeguidoresNestedInput
  }

  export type SeguidoresUncheckedUpdateInput = {
    usuarioSigueId?: IntFieldUpdateOperationsInput | number
    usuarioSeguidoId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeguidoresCreateManyInput = {
    usuarioSigueId: number
    usuarioSeguidoId: number
    fecha?: Date | string
  }

  export type SeguidoresUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeguidoresUncheckedUpdateManyInput = {
    usuarioSigueId?: IntFieldUpdateOperationsInput | number
    usuarioSeguidoId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MetricasDiariasCreateInput = {
    fechaMetricas: Date | string
    usuariosActivos?: number
    nuevosUsuarios?: number
    productosCreados?: number
    transaccionesCompletadas?: number
    mensajesEnviados?: number
  }

  export type MetricasDiariasUncheckedCreateInput = {
    id?: number
    fechaMetricas: Date | string
    usuariosActivos?: number
    nuevosUsuarios?: number
    productosCreados?: number
    transaccionesCompletadas?: number
    mensajesEnviados?: number
  }

  export type MetricasDiariasUpdateInput = {
    fechaMetricas?: DateTimeFieldUpdateOperationsInput | Date | string
    usuariosActivos?: IntFieldUpdateOperationsInput | number
    nuevosUsuarios?: IntFieldUpdateOperationsInput | number
    productosCreados?: IntFieldUpdateOperationsInput | number
    transaccionesCompletadas?: IntFieldUpdateOperationsInput | number
    mensajesEnviados?: IntFieldUpdateOperationsInput | number
  }

  export type MetricasDiariasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaMetricas?: DateTimeFieldUpdateOperationsInput | Date | string
    usuariosActivos?: IntFieldUpdateOperationsInput | number
    nuevosUsuarios?: IntFieldUpdateOperationsInput | number
    productosCreados?: IntFieldUpdateOperationsInput | number
    transaccionesCompletadas?: IntFieldUpdateOperationsInput | number
    mensajesEnviados?: IntFieldUpdateOperationsInput | number
  }

  export type MetricasDiariasCreateManyInput = {
    id?: number
    fechaMetricas: Date | string
    usuariosActivos?: number
    nuevosUsuarios?: number
    productosCreados?: number
    transaccionesCompletadas?: number
    mensajesEnviados?: number
  }

  export type MetricasDiariasUpdateManyMutationInput = {
    fechaMetricas?: DateTimeFieldUpdateOperationsInput | Date | string
    usuariosActivos?: IntFieldUpdateOperationsInput | number
    nuevosUsuarios?: IntFieldUpdateOperationsInput | number
    productosCreados?: IntFieldUpdateOperationsInput | number
    transaccionesCompletadas?: IntFieldUpdateOperationsInput | number
    mensajesEnviados?: IntFieldUpdateOperationsInput | number
  }

  export type MetricasDiariasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fechaMetricas?: DateTimeFieldUpdateOperationsInput | Date | string
    usuariosActivos?: IntFieldUpdateOperationsInput | number
    nuevosUsuarios?: IntFieldUpdateOperationsInput | number
    productosCreados?: IntFieldUpdateOperationsInput | number
    transaccionesCompletadas?: IntFieldUpdateOperationsInput | number
    mensajesEnviados?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritosCreateInput = {
    fecha?: Date | string
    usuario: CuentasCreateNestedOneWithoutFavoritosInput
    publicacion: PublicacionesCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritosUncheckedCreateInput = {
    id?: number
    usuarioId: number
    publicacionId: number
    fecha?: Date | string
  }

  export type FavoritosUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: CuentasUpdateOneRequiredWithoutFavoritosNestedInput
    publicacion?: PublicacionesUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritosCreateManyInput = {
    id?: number
    usuarioId: number
    publicacionId: number
    fecha?: Date | string
  }

  export type FavoritosUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type RolesScalarRelationFilter = {
    is?: RolesWhereInput
    isNot?: RolesWhereInput
  }

  export type EstadosUsuarioScalarRelationFilter = {
    is?: EstadosUsuarioWhereInput
    isNot?: EstadosUsuarioWhereInput
  }

  export type ProductosListRelationFilter = {
    every?: ProductosWhereInput
    some?: ProductosWhereInput
    none?: ProductosWhereInput
  }

  export type TransaccionesListRelationFilter = {
    every?: TransaccionesWhereInput
    some?: TransaccionesWhereInput
    none?: TransaccionesWhereInput
  }

  export type CalificacionesListRelationFilter = {
    every?: CalificacionesWhereInput
    some?: CalificacionesWhereInput
    none?: CalificacionesWhereInput
  }

  export type CarritoListRelationFilter = {
    every?: CarritoWhereInput
    some?: CarritoWhereInput
    none?: CarritoWhereInput
  }

  export type ActividadUsuarioListRelationFilter = {
    every?: ActividadUsuarioWhereInput
    some?: ActividadUsuarioWhereInput
    none?: ActividadUsuarioWhereInput
  }

  export type MensajesListRelationFilter = {
    every?: MensajesWhereInput
    some?: MensajesWhereInput
    none?: MensajesWhereInput
  }

  export type ReportesListRelationFilter = {
    every?: ReportesWhereInput
    some?: ReportesWhereInput
    none?: ReportesWhereInput
  }

  export type PublicacionesListRelationFilter = {
    every?: PublicacionesWhereInput
    some?: PublicacionesWhereInput
    none?: PublicacionesWhereInput
  }

  export type ForosListRelationFilter = {
    every?: ForosWhereInput
    some?: ForosWhereInput
    none?: ForosWhereInput
  }

  export type PublicacionesForoListRelationFilter = {
    every?: PublicacionesForoWhereInput
    some?: PublicacionesForoWhereInput
    none?: PublicacionesForoWhereInput
  }

  export type ComentariosPublicacionListRelationFilter = {
    every?: ComentariosPublicacionWhereInput
    some?: ComentariosPublicacionWhereInput
    none?: ComentariosPublicacionWhereInput
  }

  export type NotificacionesListRelationFilter = {
    every?: NotificacionesWhereInput
    some?: NotificacionesWhereInput
    none?: NotificacionesWhereInput
  }

  export type UbicacionesListRelationFilter = {
    every?: UbicacionesWhereInput
    some?: UbicacionesWhereInput
    none?: UbicacionesWhereInput
  }

  export type ResumenUsuarioNullableScalarRelationFilter = {
    is?: ResumenUsuarioWhereInput | null
    isNot?: ResumenUsuarioWhereInput | null
  }

  export type SeguidoresListRelationFilter = {
    every?: SeguidoresWhereInput
    some?: SeguidoresWhereInput
    none?: SeguidoresWhereInput
  }

  export type FavoritosListRelationFilter = {
    every?: FavoritosWhereInput
    some?: FavoritosWhereInput
    none?: FavoritosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ProductosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransaccionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CalificacionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CarritoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ActividadUsuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MensajesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReportesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PublicacionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ForosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PublicacionesForoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ComentariosPublicacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificacionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UbicacionesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SeguidoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoritosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CuentasCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    correo?: SortOrder
    usuario?: SortOrder
    contrasena?: SortOrder
    rolId?: SortOrder
    estadoId?: SortOrder
    fechaRegistro?: SortOrder
    campus?: SortOrder
    reputacion?: SortOrder
  }

  export type CuentasAvgOrderByAggregateInput = {
    id?: SortOrder
    rolId?: SortOrder
    estadoId?: SortOrder
    reputacion?: SortOrder
  }

  export type CuentasMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    correo?: SortOrder
    usuario?: SortOrder
    contrasena?: SortOrder
    rolId?: SortOrder
    estadoId?: SortOrder
    fechaRegistro?: SortOrder
    campus?: SortOrder
    reputacion?: SortOrder
  }

  export type CuentasMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    correo?: SortOrder
    usuario?: SortOrder
    contrasena?: SortOrder
    rolId?: SortOrder
    estadoId?: SortOrder
    fechaRegistro?: SortOrder
    campus?: SortOrder
    reputacion?: SortOrder
  }

  export type CuentasSumOrderByAggregateInput = {
    id?: SortOrder
    rolId?: SortOrder
    estadoId?: SortOrder
    reputacion?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type CuentasListRelationFilter = {
    every?: CuentasWhereInput
    some?: CuentasWhereInput
    none?: CuentasWhereInput
  }

  export type CuentasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RolesCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type RolesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RolesMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type RolesMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type RolesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EstadosUsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosUsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EstadosUsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosUsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosUsuarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type CategoriasNullableScalarRelationFilter = {
    is?: CategoriasWhereInput | null
    isNot?: CategoriasWhereInput | null
  }

  export type CategoriasListRelationFilter = {
    every?: CategoriasWhereInput
    some?: CategoriasWhereInput
    none?: CategoriasWhereInput
  }

  export type CategoriasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriasCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoriaPadreId?: SortOrder
  }

  export type CategoriasAvgOrderByAggregateInput = {
    id?: SortOrder
    categoriaPadreId?: SortOrder
  }

  export type CategoriasMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoriaPadreId?: SortOrder
  }

  export type CategoriasMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoriaPadreId?: SortOrder
  }

  export type CategoriasSumOrderByAggregateInput = {
    id?: SortOrder
    categoriaPadreId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EstadosProductoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosProductoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EstadosProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosProductoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosProductoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type CuentasScalarRelationFilter = {
    is?: CuentasWhereInput
    isNot?: CuentasWhereInput
  }

  export type EstadosProductoScalarRelationFilter = {
    is?: EstadosProductoWhereInput
    isNot?: EstadosProductoWhereInput
  }

  export type ImagenesProductoListRelationFilter = {
    every?: ImagenesProductoWhereInput
    some?: ImagenesProductoWhereInput
    none?: ImagenesProductoWhereInput
  }

  export type ImagenesProductoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoriaId?: SortOrder
    vendedorId?: SortOrder
    precioAnterior?: SortOrder
    precioActual?: SortOrder
    descripcion?: SortOrder
    calificacion?: SortOrder
    cantidad?: SortOrder
    fechaAgregado?: SortOrder
    estadoId?: SortOrder
  }

  export type ProductosAvgOrderByAggregateInput = {
    id?: SortOrder
    categoriaId?: SortOrder
    vendedorId?: SortOrder
    precioAnterior?: SortOrder
    precioActual?: SortOrder
    calificacion?: SortOrder
    cantidad?: SortOrder
    estadoId?: SortOrder
  }

  export type ProductosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoriaId?: SortOrder
    vendedorId?: SortOrder
    precioAnterior?: SortOrder
    precioActual?: SortOrder
    descripcion?: SortOrder
    calificacion?: SortOrder
    cantidad?: SortOrder
    fechaAgregado?: SortOrder
    estadoId?: SortOrder
  }

  export type ProductosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoriaId?: SortOrder
    vendedorId?: SortOrder
    precioAnterior?: SortOrder
    precioActual?: SortOrder
    descripcion?: SortOrder
    calificacion?: SortOrder
    cantidad?: SortOrder
    fechaAgregado?: SortOrder
    estadoId?: SortOrder
  }

  export type ProductosSumOrderByAggregateInput = {
    id?: SortOrder
    categoriaId?: SortOrder
    vendedorId?: SortOrder
    precioAnterior?: SortOrder
    precioActual?: SortOrder
    calificacion?: SortOrder
    cantidad?: SortOrder
    estadoId?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type BytesNullableFilter<$PrismaModel = never> = {
    equals?: Uint8Array | BytesFieldRefInput<$PrismaModel> | null
    in?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Uint8Array | null
  }

  export type ProductosScalarRelationFilter = {
    is?: ProductosWhereInput
    isNot?: ProductosWhereInput
  }

  export type ImagenesProductoCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    urlImagen?: SortOrder
  }

  export type ImagenesProductoAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
  }

  export type ImagenesProductoMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    urlImagen?: SortOrder
  }

  export type ImagenesProductoMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    urlImagen?: SortOrder
  }

  export type ImagenesProductoSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
  }

  export type BytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Uint8Array | BytesFieldRefInput<$PrismaModel> | null
    in?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Uint8Array | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type EstadosTransaccionCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosTransaccionAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EstadosTransaccionMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosTransaccionMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosTransaccionSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EstadosTransaccionScalarRelationFilter = {
    is?: EstadosTransaccionWhereInput
    isNot?: EstadosTransaccionWhereInput
  }

  export type TransaccionesCountOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    compradorId?: SortOrder
    vendedorId?: SortOrder
    fecha?: SortOrder
    estadoId?: SortOrder
  }

  export type TransaccionesAvgOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    compradorId?: SortOrder
    vendedorId?: SortOrder
    estadoId?: SortOrder
  }

  export type TransaccionesMaxOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    compradorId?: SortOrder
    vendedorId?: SortOrder
    fecha?: SortOrder
    estadoId?: SortOrder
  }

  export type TransaccionesMinOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    compradorId?: SortOrder
    vendedorId?: SortOrder
    fecha?: SortOrder
    estadoId?: SortOrder
  }

  export type TransaccionesSumOrderByAggregateInput = {
    id?: SortOrder
    productoId?: SortOrder
    compradorId?: SortOrder
    vendedorId?: SortOrder
    estadoId?: SortOrder
  }

  export type TransaccionesScalarRelationFilter = {
    is?: TransaccionesWhereInput
    isNot?: TransaccionesWhereInput
  }

  export type CalificacionesCountOrderByAggregateInput = {
    id?: SortOrder
    transaccionId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    puntuacion?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
  }

  export type CalificacionesAvgOrderByAggregateInput = {
    id?: SortOrder
    transaccionId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    puntuacion?: SortOrder
  }

  export type CalificacionesMaxOrderByAggregateInput = {
    id?: SortOrder
    transaccionId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    puntuacion?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
  }

  export type CalificacionesMinOrderByAggregateInput = {
    id?: SortOrder
    transaccionId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    puntuacion?: SortOrder
    comentario?: SortOrder
    fecha?: SortOrder
  }

  export type CalificacionesSumOrderByAggregateInput = {
    id?: SortOrder
    transaccionId?: SortOrder
    calificadorId?: SortOrder
    calificadoId?: SortOrder
    puntuacion?: SortOrder
  }

  export type CarritoCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
  }

  export type CarritoAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
  }

  export type CarritoMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
  }

  export type CarritoMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
  }

  export type CarritoSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    productoId?: SortOrder
    cantidad?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type MensajesCountOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    contenido?: SortOrder
    fechaEnvio?: SortOrder
    leido?: SortOrder
  }

  export type MensajesAvgOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
  }

  export type MensajesMaxOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    contenido?: SortOrder
    fechaEnvio?: SortOrder
    leido?: SortOrder
  }

  export type MensajesMinOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
    contenido?: SortOrder
    fechaEnvio?: SortOrder
    leido?: SortOrder
  }

  export type MensajesSumOrderByAggregateInput = {
    id?: SortOrder
    remitenteId?: SortOrder
    destinatarioId?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EstadosReporteCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosReporteAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EstadosReporteMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosReporteMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
  }

  export type EstadosReporteSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CuentasNullableScalarRelationFilter = {
    is?: CuentasWhereInput | null
    isNot?: CuentasWhereInput | null
  }

  export type ProductosNullableScalarRelationFilter = {
    is?: ProductosWhereInput | null
    isNot?: ProductosWhereInput | null
  }

  export type EstadosReporteScalarRelationFilter = {
    is?: EstadosReporteWhereInput
    isNot?: EstadosReporteWhereInput
  }

  export type ReportesCountOrderByAggregateInput = {
    id?: SortOrder
    reportanteId?: SortOrder
    usuarioReportadoId?: SortOrder
    productoId?: SortOrder
    motivo?: SortOrder
    fecha?: SortOrder
    estadoId?: SortOrder
  }

  export type ReportesAvgOrderByAggregateInput = {
    id?: SortOrder
    reportanteId?: SortOrder
    usuarioReportadoId?: SortOrder
    productoId?: SortOrder
    estadoId?: SortOrder
  }

  export type ReportesMaxOrderByAggregateInput = {
    id?: SortOrder
    reportanteId?: SortOrder
    usuarioReportadoId?: SortOrder
    productoId?: SortOrder
    motivo?: SortOrder
    fecha?: SortOrder
    estadoId?: SortOrder
  }

  export type ReportesMinOrderByAggregateInput = {
    id?: SortOrder
    reportanteId?: SortOrder
    usuarioReportadoId?: SortOrder
    productoId?: SortOrder
    motivo?: SortOrder
    fecha?: SortOrder
    estadoId?: SortOrder
  }

  export type ReportesSumOrderByAggregateInput = {
    id?: SortOrder
    reportanteId?: SortOrder
    usuarioReportadoId?: SortOrder
    productoId?: SortOrder
    estadoId?: SortOrder
  }

  export type ActividadUsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    accion?: SortOrder
    detalles?: SortOrder
    fecha?: SortOrder
  }

  export type ActividadUsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type ActividadUsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    accion?: SortOrder
    detalles?: SortOrder
    fecha?: SortOrder
  }

  export type ActividadUsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    accion?: SortOrder
    detalles?: SortOrder
    fecha?: SortOrder
  }

  export type ActividadUsuarioSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type NotificacionesCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tipo?: SortOrder
    mensaje?: SortOrder
    leido?: SortOrder
    fecha?: SortOrder
  }

  export type NotificacionesAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type NotificacionesMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tipo?: SortOrder
    mensaje?: SortOrder
    leido?: SortOrder
    fecha?: SortOrder
  }

  export type NotificacionesMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    tipo?: SortOrder
    mensaje?: SortOrder
    leido?: SortOrder
    fecha?: SortOrder
  }

  export type NotificacionesSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type PublicacionesCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    cuerpo?: SortOrder
    usuarioId?: SortOrder
    estado?: SortOrder
    fecha?: SortOrder
    visto?: SortOrder
  }

  export type PublicacionesAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type PublicacionesMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    cuerpo?: SortOrder
    usuarioId?: SortOrder
    estado?: SortOrder
    fecha?: SortOrder
    visto?: SortOrder
  }

  export type PublicacionesMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    cuerpo?: SortOrder
    usuarioId?: SortOrder
    estado?: SortOrder
    fecha?: SortOrder
    visto?: SortOrder
  }

  export type PublicacionesSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type ForosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    creadorId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type ForosAvgOrderByAggregateInput = {
    id?: SortOrder
    creadorId?: SortOrder
  }

  export type ForosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    creadorId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type ForosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    creadorId?: SortOrder
    fechaCreacion?: SortOrder
  }

  export type ForosSumOrderByAggregateInput = {
    id?: SortOrder
    creadorId?: SortOrder
  }

  export type ForosScalarRelationFilter = {
    is?: ForosWhereInput
    isNot?: ForosWhereInput
  }

  export type PublicacionesForoCountOrderByAggregateInput = {
    id?: SortOrder
    foroId?: SortOrder
    autorId?: SortOrder
    titulo?: SortOrder
    contenido?: SortOrder
    fecha?: SortOrder
  }

  export type PublicacionesForoAvgOrderByAggregateInput = {
    id?: SortOrder
    foroId?: SortOrder
    autorId?: SortOrder
  }

  export type PublicacionesForoMaxOrderByAggregateInput = {
    id?: SortOrder
    foroId?: SortOrder
    autorId?: SortOrder
    titulo?: SortOrder
    contenido?: SortOrder
    fecha?: SortOrder
  }

  export type PublicacionesForoMinOrderByAggregateInput = {
    id?: SortOrder
    foroId?: SortOrder
    autorId?: SortOrder
    titulo?: SortOrder
    contenido?: SortOrder
    fecha?: SortOrder
  }

  export type PublicacionesForoSumOrderByAggregateInput = {
    id?: SortOrder
    foroId?: SortOrder
    autorId?: SortOrder
  }

  export type PublicacionesForoScalarRelationFilter = {
    is?: PublicacionesForoWhereInput
    isNot?: PublicacionesForoWhereInput
  }

  export type ComentariosPublicacionCountOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    autorId?: SortOrder
    contenido?: SortOrder
    fecha?: SortOrder
  }

  export type ComentariosPublicacionAvgOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    autorId?: SortOrder
  }

  export type ComentariosPublicacionMaxOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    autorId?: SortOrder
    contenido?: SortOrder
    fecha?: SortOrder
  }

  export type ComentariosPublicacionMinOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    autorId?: SortOrder
    contenido?: SortOrder
    fecha?: SortOrder
  }

  export type ComentariosPublicacionSumOrderByAggregateInput = {
    id?: SortOrder
    publicacionId?: SortOrder
    autorId?: SortOrder
  }

  export type UbicacionesCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    nombreLugar?: SortOrder
    descripcion?: SortOrder
  }

  export type UbicacionesAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type UbicacionesMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    nombreLugar?: SortOrder
    descripcion?: SortOrder
  }

  export type UbicacionesMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    nombreLugar?: SortOrder
    descripcion?: SortOrder
  }

  export type UbicacionesSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
  }

  export type ResumenUsuarioCountOrderByAggregateInput = {
    usuarioId?: SortOrder
    totalProductos?: SortOrder
    totalVentas?: SortOrder
    totalCompras?: SortOrder
    promedioCalificacion?: SortOrder
  }

  export type ResumenUsuarioAvgOrderByAggregateInput = {
    usuarioId?: SortOrder
    totalProductos?: SortOrder
    totalVentas?: SortOrder
    totalCompras?: SortOrder
    promedioCalificacion?: SortOrder
  }

  export type ResumenUsuarioMaxOrderByAggregateInput = {
    usuarioId?: SortOrder
    totalProductos?: SortOrder
    totalVentas?: SortOrder
    totalCompras?: SortOrder
    promedioCalificacion?: SortOrder
  }

  export type ResumenUsuarioMinOrderByAggregateInput = {
    usuarioId?: SortOrder
    totalProductos?: SortOrder
    totalVentas?: SortOrder
    totalCompras?: SortOrder
    promedioCalificacion?: SortOrder
  }

  export type ResumenUsuarioSumOrderByAggregateInput = {
    usuarioId?: SortOrder
    totalProductos?: SortOrder
    totalVentas?: SortOrder
    totalCompras?: SortOrder
    promedioCalificacion?: SortOrder
  }

  export type SeguidoresUsuarioSigueIdUsuarioSeguidoIdCompoundUniqueInput = {
    usuarioSigueId: number
    usuarioSeguidoId: number
  }

  export type SeguidoresCountOrderByAggregateInput = {
    usuarioSigueId?: SortOrder
    usuarioSeguidoId?: SortOrder
    fecha?: SortOrder
  }

  export type SeguidoresAvgOrderByAggregateInput = {
    usuarioSigueId?: SortOrder
    usuarioSeguidoId?: SortOrder
  }

  export type SeguidoresMaxOrderByAggregateInput = {
    usuarioSigueId?: SortOrder
    usuarioSeguidoId?: SortOrder
    fecha?: SortOrder
  }

  export type SeguidoresMinOrderByAggregateInput = {
    usuarioSigueId?: SortOrder
    usuarioSeguidoId?: SortOrder
    fecha?: SortOrder
  }

  export type SeguidoresSumOrderByAggregateInput = {
    usuarioSigueId?: SortOrder
    usuarioSeguidoId?: SortOrder
  }

  export type MetricasDiariasCountOrderByAggregateInput = {
    id?: SortOrder
    fechaMetricas?: SortOrder
    usuariosActivos?: SortOrder
    nuevosUsuarios?: SortOrder
    productosCreados?: SortOrder
    transaccionesCompletadas?: SortOrder
    mensajesEnviados?: SortOrder
  }

  export type MetricasDiariasAvgOrderByAggregateInput = {
    id?: SortOrder
    usuariosActivos?: SortOrder
    nuevosUsuarios?: SortOrder
    productosCreados?: SortOrder
    transaccionesCompletadas?: SortOrder
    mensajesEnviados?: SortOrder
  }

  export type MetricasDiariasMaxOrderByAggregateInput = {
    id?: SortOrder
    fechaMetricas?: SortOrder
    usuariosActivos?: SortOrder
    nuevosUsuarios?: SortOrder
    productosCreados?: SortOrder
    transaccionesCompletadas?: SortOrder
    mensajesEnviados?: SortOrder
  }

  export type MetricasDiariasMinOrderByAggregateInput = {
    id?: SortOrder
    fechaMetricas?: SortOrder
    usuariosActivos?: SortOrder
    nuevosUsuarios?: SortOrder
    productosCreados?: SortOrder
    transaccionesCompletadas?: SortOrder
    mensajesEnviados?: SortOrder
  }

  export type MetricasDiariasSumOrderByAggregateInput = {
    id?: SortOrder
    usuariosActivos?: SortOrder
    nuevosUsuarios?: SortOrder
    productosCreados?: SortOrder
    transaccionesCompletadas?: SortOrder
    mensajesEnviados?: SortOrder
  }

  export type PublicacionesScalarRelationFilter = {
    is?: PublicacionesWhereInput
    isNot?: PublicacionesWhereInput
  }

  export type FavoritosUsuarioIdPublicacionIdCompoundUniqueInput = {
    usuarioId: number
    publicacionId: number
  }

  export type FavoritosCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    publicacionId?: SortOrder
    fecha?: SortOrder
  }

  export type FavoritosAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    publicacionId?: SortOrder
  }

  export type FavoritosMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    publicacionId?: SortOrder
    fecha?: SortOrder
  }

  export type FavoritosMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    publicacionId?: SortOrder
    fecha?: SortOrder
  }

  export type FavoritosSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    publicacionId?: SortOrder
  }

  export type RolesCreateNestedOneWithoutCuentasInput = {
    create?: XOR<RolesCreateWithoutCuentasInput, RolesUncheckedCreateWithoutCuentasInput>
    connectOrCreate?: RolesCreateOrConnectWithoutCuentasInput
    connect?: RolesWhereUniqueInput
  }

  export type EstadosUsuarioCreateNestedOneWithoutCuentasInput = {
    create?: XOR<EstadosUsuarioCreateWithoutCuentasInput, EstadosUsuarioUncheckedCreateWithoutCuentasInput>
    connectOrCreate?: EstadosUsuarioCreateOrConnectWithoutCuentasInput
    connect?: EstadosUsuarioWhereUniqueInput
  }

  export type ProductosCreateNestedManyWithoutVendedorInput = {
    create?: XOR<ProductosCreateWithoutVendedorInput, ProductosUncheckedCreateWithoutVendedorInput> | ProductosCreateWithoutVendedorInput[] | ProductosUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutVendedorInput | ProductosCreateOrConnectWithoutVendedorInput[]
    createMany?: ProductosCreateManyVendedorInputEnvelope
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
  }

  export type TransaccionesCreateNestedManyWithoutCompradorInput = {
    create?: XOR<TransaccionesCreateWithoutCompradorInput, TransaccionesUncheckedCreateWithoutCompradorInput> | TransaccionesCreateWithoutCompradorInput[] | TransaccionesUncheckedCreateWithoutCompradorInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutCompradorInput | TransaccionesCreateOrConnectWithoutCompradorInput[]
    createMany?: TransaccionesCreateManyCompradorInputEnvelope
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
  }

  export type TransaccionesCreateNestedManyWithoutVendedorInput = {
    create?: XOR<TransaccionesCreateWithoutVendedorInput, TransaccionesUncheckedCreateWithoutVendedorInput> | TransaccionesCreateWithoutVendedorInput[] | TransaccionesUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutVendedorInput | TransaccionesCreateOrConnectWithoutVendedorInput[]
    createMany?: TransaccionesCreateManyVendedorInputEnvelope
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
  }

  export type CalificacionesCreateNestedManyWithoutCalificadorInput = {
    create?: XOR<CalificacionesCreateWithoutCalificadorInput, CalificacionesUncheckedCreateWithoutCalificadorInput> | CalificacionesCreateWithoutCalificadorInput[] | CalificacionesUncheckedCreateWithoutCalificadorInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutCalificadorInput | CalificacionesCreateOrConnectWithoutCalificadorInput[]
    createMany?: CalificacionesCreateManyCalificadorInputEnvelope
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
  }

  export type CalificacionesCreateNestedManyWithoutCalificadoInput = {
    create?: XOR<CalificacionesCreateWithoutCalificadoInput, CalificacionesUncheckedCreateWithoutCalificadoInput> | CalificacionesCreateWithoutCalificadoInput[] | CalificacionesUncheckedCreateWithoutCalificadoInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutCalificadoInput | CalificacionesCreateOrConnectWithoutCalificadoInput[]
    createMany?: CalificacionesCreateManyCalificadoInputEnvelope
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
  }

  export type CarritoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CarritoCreateWithoutUsuarioInput, CarritoUncheckedCreateWithoutUsuarioInput> | CarritoCreateWithoutUsuarioInput[] | CarritoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CarritoCreateOrConnectWithoutUsuarioInput | CarritoCreateOrConnectWithoutUsuarioInput[]
    createMany?: CarritoCreateManyUsuarioInputEnvelope
    connect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
  }

  export type ActividadUsuarioCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ActividadUsuarioCreateWithoutUsuarioInput, ActividadUsuarioUncheckedCreateWithoutUsuarioInput> | ActividadUsuarioCreateWithoutUsuarioInput[] | ActividadUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ActividadUsuarioCreateOrConnectWithoutUsuarioInput | ActividadUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: ActividadUsuarioCreateManyUsuarioInputEnvelope
    connect?: ActividadUsuarioWhereUniqueInput | ActividadUsuarioWhereUniqueInput[]
  }

  export type MensajesCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<MensajesCreateWithoutRemitenteInput, MensajesUncheckedCreateWithoutRemitenteInput> | MensajesCreateWithoutRemitenteInput[] | MensajesUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: MensajesCreateOrConnectWithoutRemitenteInput | MensajesCreateOrConnectWithoutRemitenteInput[]
    createMany?: MensajesCreateManyRemitenteInputEnvelope
    connect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
  }

  export type MensajesCreateNestedManyWithoutDestinatarioInput = {
    create?: XOR<MensajesCreateWithoutDestinatarioInput, MensajesUncheckedCreateWithoutDestinatarioInput> | MensajesCreateWithoutDestinatarioInput[] | MensajesUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: MensajesCreateOrConnectWithoutDestinatarioInput | MensajesCreateOrConnectWithoutDestinatarioInput[]
    createMany?: MensajesCreateManyDestinatarioInputEnvelope
    connect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
  }

  export type ReportesCreateNestedManyWithoutReportanteInput = {
    create?: XOR<ReportesCreateWithoutReportanteInput, ReportesUncheckedCreateWithoutReportanteInput> | ReportesCreateWithoutReportanteInput[] | ReportesUncheckedCreateWithoutReportanteInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutReportanteInput | ReportesCreateOrConnectWithoutReportanteInput[]
    createMany?: ReportesCreateManyReportanteInputEnvelope
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
  }

  export type ReportesCreateNestedManyWithoutUsuarioReportadoInput = {
    create?: XOR<ReportesCreateWithoutUsuarioReportadoInput, ReportesUncheckedCreateWithoutUsuarioReportadoInput> | ReportesCreateWithoutUsuarioReportadoInput[] | ReportesUncheckedCreateWithoutUsuarioReportadoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutUsuarioReportadoInput | ReportesCreateOrConnectWithoutUsuarioReportadoInput[]
    createMany?: ReportesCreateManyUsuarioReportadoInputEnvelope
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
  }

  export type PublicacionesCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<PublicacionesCreateWithoutUsuarioInput, PublicacionesUncheckedCreateWithoutUsuarioInput> | PublicacionesCreateWithoutUsuarioInput[] | PublicacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PublicacionesCreateOrConnectWithoutUsuarioInput | PublicacionesCreateOrConnectWithoutUsuarioInput[]
    createMany?: PublicacionesCreateManyUsuarioInputEnvelope
    connect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
  }

  export type ForosCreateNestedManyWithoutCreadorInput = {
    create?: XOR<ForosCreateWithoutCreadorInput, ForosUncheckedCreateWithoutCreadorInput> | ForosCreateWithoutCreadorInput[] | ForosUncheckedCreateWithoutCreadorInput[]
    connectOrCreate?: ForosCreateOrConnectWithoutCreadorInput | ForosCreateOrConnectWithoutCreadorInput[]
    createMany?: ForosCreateManyCreadorInputEnvelope
    connect?: ForosWhereUniqueInput | ForosWhereUniqueInput[]
  }

  export type PublicacionesForoCreateNestedManyWithoutAutorInput = {
    create?: XOR<PublicacionesForoCreateWithoutAutorInput, PublicacionesForoUncheckedCreateWithoutAutorInput> | PublicacionesForoCreateWithoutAutorInput[] | PublicacionesForoUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: PublicacionesForoCreateOrConnectWithoutAutorInput | PublicacionesForoCreateOrConnectWithoutAutorInput[]
    createMany?: PublicacionesForoCreateManyAutorInputEnvelope
    connect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
  }

  export type ComentariosPublicacionCreateNestedManyWithoutAutorInput = {
    create?: XOR<ComentariosPublicacionCreateWithoutAutorInput, ComentariosPublicacionUncheckedCreateWithoutAutorInput> | ComentariosPublicacionCreateWithoutAutorInput[] | ComentariosPublicacionUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: ComentariosPublicacionCreateOrConnectWithoutAutorInput | ComentariosPublicacionCreateOrConnectWithoutAutorInput[]
    createMany?: ComentariosPublicacionCreateManyAutorInputEnvelope
    connect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
  }

  export type NotificacionesCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacionesCreateWithoutUsuarioInput, NotificacionesUncheckedCreateWithoutUsuarioInput> | NotificacionesCreateWithoutUsuarioInput[] | NotificacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionesCreateOrConnectWithoutUsuarioInput | NotificacionesCreateOrConnectWithoutUsuarioInput[]
    createMany?: NotificacionesCreateManyUsuarioInputEnvelope
    connect?: NotificacionesWhereUniqueInput | NotificacionesWhereUniqueInput[]
  }

  export type UbicacionesCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<UbicacionesCreateWithoutUsuarioInput, UbicacionesUncheckedCreateWithoutUsuarioInput> | UbicacionesCreateWithoutUsuarioInput[] | UbicacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UbicacionesCreateOrConnectWithoutUsuarioInput | UbicacionesCreateOrConnectWithoutUsuarioInput[]
    createMany?: UbicacionesCreateManyUsuarioInputEnvelope
    connect?: UbicacionesWhereUniqueInput | UbicacionesWhereUniqueInput[]
  }

  export type ResumenUsuarioCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ResumenUsuarioCreateWithoutUsuarioInput, ResumenUsuarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ResumenUsuarioCreateOrConnectWithoutUsuarioInput
    connect?: ResumenUsuarioWhereUniqueInput
  }

  export type SeguidoresCreateNestedManyWithoutUsuarioSigueInput = {
    create?: XOR<SeguidoresCreateWithoutUsuarioSigueInput, SeguidoresUncheckedCreateWithoutUsuarioSigueInput> | SeguidoresCreateWithoutUsuarioSigueInput[] | SeguidoresUncheckedCreateWithoutUsuarioSigueInput[]
    connectOrCreate?: SeguidoresCreateOrConnectWithoutUsuarioSigueInput | SeguidoresCreateOrConnectWithoutUsuarioSigueInput[]
    createMany?: SeguidoresCreateManyUsuarioSigueInputEnvelope
    connect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
  }

  export type SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput = {
    create?: XOR<SeguidoresCreateWithoutUsuarioSeguidoInput, SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput> | SeguidoresCreateWithoutUsuarioSeguidoInput[] | SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput[]
    connectOrCreate?: SeguidoresCreateOrConnectWithoutUsuarioSeguidoInput | SeguidoresCreateOrConnectWithoutUsuarioSeguidoInput[]
    createMany?: SeguidoresCreateManyUsuarioSeguidoInputEnvelope
    connect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
  }

  export type FavoritosCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput> | FavoritosCreateWithoutUsuarioInput[] | FavoritosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutUsuarioInput | FavoritosCreateOrConnectWithoutUsuarioInput[]
    createMany?: FavoritosCreateManyUsuarioInputEnvelope
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
  }

  export type ProductosUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<ProductosCreateWithoutVendedorInput, ProductosUncheckedCreateWithoutVendedorInput> | ProductosCreateWithoutVendedorInput[] | ProductosUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutVendedorInput | ProductosCreateOrConnectWithoutVendedorInput[]
    createMany?: ProductosCreateManyVendedorInputEnvelope
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
  }

  export type TransaccionesUncheckedCreateNestedManyWithoutCompradorInput = {
    create?: XOR<TransaccionesCreateWithoutCompradorInput, TransaccionesUncheckedCreateWithoutCompradorInput> | TransaccionesCreateWithoutCompradorInput[] | TransaccionesUncheckedCreateWithoutCompradorInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutCompradorInput | TransaccionesCreateOrConnectWithoutCompradorInput[]
    createMany?: TransaccionesCreateManyCompradorInputEnvelope
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
  }

  export type TransaccionesUncheckedCreateNestedManyWithoutVendedorInput = {
    create?: XOR<TransaccionesCreateWithoutVendedorInput, TransaccionesUncheckedCreateWithoutVendedorInput> | TransaccionesCreateWithoutVendedorInput[] | TransaccionesUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutVendedorInput | TransaccionesCreateOrConnectWithoutVendedorInput[]
    createMany?: TransaccionesCreateManyVendedorInputEnvelope
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
  }

  export type CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput = {
    create?: XOR<CalificacionesCreateWithoutCalificadorInput, CalificacionesUncheckedCreateWithoutCalificadorInput> | CalificacionesCreateWithoutCalificadorInput[] | CalificacionesUncheckedCreateWithoutCalificadorInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutCalificadorInput | CalificacionesCreateOrConnectWithoutCalificadorInput[]
    createMany?: CalificacionesCreateManyCalificadorInputEnvelope
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
  }

  export type CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput = {
    create?: XOR<CalificacionesCreateWithoutCalificadoInput, CalificacionesUncheckedCreateWithoutCalificadoInput> | CalificacionesCreateWithoutCalificadoInput[] | CalificacionesUncheckedCreateWithoutCalificadoInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutCalificadoInput | CalificacionesCreateOrConnectWithoutCalificadoInput[]
    createMany?: CalificacionesCreateManyCalificadoInputEnvelope
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
  }

  export type CarritoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<CarritoCreateWithoutUsuarioInput, CarritoUncheckedCreateWithoutUsuarioInput> | CarritoCreateWithoutUsuarioInput[] | CarritoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CarritoCreateOrConnectWithoutUsuarioInput | CarritoCreateOrConnectWithoutUsuarioInput[]
    createMany?: CarritoCreateManyUsuarioInputEnvelope
    connect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
  }

  export type ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<ActividadUsuarioCreateWithoutUsuarioInput, ActividadUsuarioUncheckedCreateWithoutUsuarioInput> | ActividadUsuarioCreateWithoutUsuarioInput[] | ActividadUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ActividadUsuarioCreateOrConnectWithoutUsuarioInput | ActividadUsuarioCreateOrConnectWithoutUsuarioInput[]
    createMany?: ActividadUsuarioCreateManyUsuarioInputEnvelope
    connect?: ActividadUsuarioWhereUniqueInput | ActividadUsuarioWhereUniqueInput[]
  }

  export type MensajesUncheckedCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<MensajesCreateWithoutRemitenteInput, MensajesUncheckedCreateWithoutRemitenteInput> | MensajesCreateWithoutRemitenteInput[] | MensajesUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: MensajesCreateOrConnectWithoutRemitenteInput | MensajesCreateOrConnectWithoutRemitenteInput[]
    createMany?: MensajesCreateManyRemitenteInputEnvelope
    connect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
  }

  export type MensajesUncheckedCreateNestedManyWithoutDestinatarioInput = {
    create?: XOR<MensajesCreateWithoutDestinatarioInput, MensajesUncheckedCreateWithoutDestinatarioInput> | MensajesCreateWithoutDestinatarioInput[] | MensajesUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: MensajesCreateOrConnectWithoutDestinatarioInput | MensajesCreateOrConnectWithoutDestinatarioInput[]
    createMany?: MensajesCreateManyDestinatarioInputEnvelope
    connect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
  }

  export type ReportesUncheckedCreateNestedManyWithoutReportanteInput = {
    create?: XOR<ReportesCreateWithoutReportanteInput, ReportesUncheckedCreateWithoutReportanteInput> | ReportesCreateWithoutReportanteInput[] | ReportesUncheckedCreateWithoutReportanteInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutReportanteInput | ReportesCreateOrConnectWithoutReportanteInput[]
    createMany?: ReportesCreateManyReportanteInputEnvelope
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
  }

  export type ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput = {
    create?: XOR<ReportesCreateWithoutUsuarioReportadoInput, ReportesUncheckedCreateWithoutUsuarioReportadoInput> | ReportesCreateWithoutUsuarioReportadoInput[] | ReportesUncheckedCreateWithoutUsuarioReportadoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutUsuarioReportadoInput | ReportesCreateOrConnectWithoutUsuarioReportadoInput[]
    createMany?: ReportesCreateManyUsuarioReportadoInputEnvelope
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
  }

  export type PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<PublicacionesCreateWithoutUsuarioInput, PublicacionesUncheckedCreateWithoutUsuarioInput> | PublicacionesCreateWithoutUsuarioInput[] | PublicacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PublicacionesCreateOrConnectWithoutUsuarioInput | PublicacionesCreateOrConnectWithoutUsuarioInput[]
    createMany?: PublicacionesCreateManyUsuarioInputEnvelope
    connect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
  }

  export type ForosUncheckedCreateNestedManyWithoutCreadorInput = {
    create?: XOR<ForosCreateWithoutCreadorInput, ForosUncheckedCreateWithoutCreadorInput> | ForosCreateWithoutCreadorInput[] | ForosUncheckedCreateWithoutCreadorInput[]
    connectOrCreate?: ForosCreateOrConnectWithoutCreadorInput | ForosCreateOrConnectWithoutCreadorInput[]
    createMany?: ForosCreateManyCreadorInputEnvelope
    connect?: ForosWhereUniqueInput | ForosWhereUniqueInput[]
  }

  export type PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput = {
    create?: XOR<PublicacionesForoCreateWithoutAutorInput, PublicacionesForoUncheckedCreateWithoutAutorInput> | PublicacionesForoCreateWithoutAutorInput[] | PublicacionesForoUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: PublicacionesForoCreateOrConnectWithoutAutorInput | PublicacionesForoCreateOrConnectWithoutAutorInput[]
    createMany?: PublicacionesForoCreateManyAutorInputEnvelope
    connect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
  }

  export type ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput = {
    create?: XOR<ComentariosPublicacionCreateWithoutAutorInput, ComentariosPublicacionUncheckedCreateWithoutAutorInput> | ComentariosPublicacionCreateWithoutAutorInput[] | ComentariosPublicacionUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: ComentariosPublicacionCreateOrConnectWithoutAutorInput | ComentariosPublicacionCreateOrConnectWithoutAutorInput[]
    createMany?: ComentariosPublicacionCreateManyAutorInputEnvelope
    connect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
  }

  export type NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<NotificacionesCreateWithoutUsuarioInput, NotificacionesUncheckedCreateWithoutUsuarioInput> | NotificacionesCreateWithoutUsuarioInput[] | NotificacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionesCreateOrConnectWithoutUsuarioInput | NotificacionesCreateOrConnectWithoutUsuarioInput[]
    createMany?: NotificacionesCreateManyUsuarioInputEnvelope
    connect?: NotificacionesWhereUniqueInput | NotificacionesWhereUniqueInput[]
  }

  export type UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<UbicacionesCreateWithoutUsuarioInput, UbicacionesUncheckedCreateWithoutUsuarioInput> | UbicacionesCreateWithoutUsuarioInput[] | UbicacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UbicacionesCreateOrConnectWithoutUsuarioInput | UbicacionesCreateOrConnectWithoutUsuarioInput[]
    createMany?: UbicacionesCreateManyUsuarioInputEnvelope
    connect?: UbicacionesWhereUniqueInput | UbicacionesWhereUniqueInput[]
  }

  export type ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<ResumenUsuarioCreateWithoutUsuarioInput, ResumenUsuarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ResumenUsuarioCreateOrConnectWithoutUsuarioInput
    connect?: ResumenUsuarioWhereUniqueInput
  }

  export type SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput = {
    create?: XOR<SeguidoresCreateWithoutUsuarioSigueInput, SeguidoresUncheckedCreateWithoutUsuarioSigueInput> | SeguidoresCreateWithoutUsuarioSigueInput[] | SeguidoresUncheckedCreateWithoutUsuarioSigueInput[]
    connectOrCreate?: SeguidoresCreateOrConnectWithoutUsuarioSigueInput | SeguidoresCreateOrConnectWithoutUsuarioSigueInput[]
    createMany?: SeguidoresCreateManyUsuarioSigueInputEnvelope
    connect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
  }

  export type SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput = {
    create?: XOR<SeguidoresCreateWithoutUsuarioSeguidoInput, SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput> | SeguidoresCreateWithoutUsuarioSeguidoInput[] | SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput[]
    connectOrCreate?: SeguidoresCreateOrConnectWithoutUsuarioSeguidoInput | SeguidoresCreateOrConnectWithoutUsuarioSeguidoInput[]
    createMany?: SeguidoresCreateManyUsuarioSeguidoInputEnvelope
    connect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
  }

  export type FavoritosUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput> | FavoritosCreateWithoutUsuarioInput[] | FavoritosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutUsuarioInput | FavoritosCreateOrConnectWithoutUsuarioInput[]
    createMany?: FavoritosCreateManyUsuarioInputEnvelope
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type RolesUpdateOneRequiredWithoutCuentasNestedInput = {
    create?: XOR<RolesCreateWithoutCuentasInput, RolesUncheckedCreateWithoutCuentasInput>
    connectOrCreate?: RolesCreateOrConnectWithoutCuentasInput
    upsert?: RolesUpsertWithoutCuentasInput
    connect?: RolesWhereUniqueInput
    update?: XOR<XOR<RolesUpdateToOneWithWhereWithoutCuentasInput, RolesUpdateWithoutCuentasInput>, RolesUncheckedUpdateWithoutCuentasInput>
  }

  export type EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput = {
    create?: XOR<EstadosUsuarioCreateWithoutCuentasInput, EstadosUsuarioUncheckedCreateWithoutCuentasInput>
    connectOrCreate?: EstadosUsuarioCreateOrConnectWithoutCuentasInput
    upsert?: EstadosUsuarioUpsertWithoutCuentasInput
    connect?: EstadosUsuarioWhereUniqueInput
    update?: XOR<XOR<EstadosUsuarioUpdateToOneWithWhereWithoutCuentasInput, EstadosUsuarioUpdateWithoutCuentasInput>, EstadosUsuarioUncheckedUpdateWithoutCuentasInput>
  }

  export type ProductosUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<ProductosCreateWithoutVendedorInput, ProductosUncheckedCreateWithoutVendedorInput> | ProductosCreateWithoutVendedorInput[] | ProductosUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutVendedorInput | ProductosCreateOrConnectWithoutVendedorInput[]
    upsert?: ProductosUpsertWithWhereUniqueWithoutVendedorInput | ProductosUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: ProductosCreateManyVendedorInputEnvelope
    set?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    disconnect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    delete?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    update?: ProductosUpdateWithWhereUniqueWithoutVendedorInput | ProductosUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: ProductosUpdateManyWithWhereWithoutVendedorInput | ProductosUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
  }

  export type TransaccionesUpdateManyWithoutCompradorNestedInput = {
    create?: XOR<TransaccionesCreateWithoutCompradorInput, TransaccionesUncheckedCreateWithoutCompradorInput> | TransaccionesCreateWithoutCompradorInput[] | TransaccionesUncheckedCreateWithoutCompradorInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutCompradorInput | TransaccionesCreateOrConnectWithoutCompradorInput[]
    upsert?: TransaccionesUpsertWithWhereUniqueWithoutCompradorInput | TransaccionesUpsertWithWhereUniqueWithoutCompradorInput[]
    createMany?: TransaccionesCreateManyCompradorInputEnvelope
    set?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    disconnect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    delete?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    update?: TransaccionesUpdateWithWhereUniqueWithoutCompradorInput | TransaccionesUpdateWithWhereUniqueWithoutCompradorInput[]
    updateMany?: TransaccionesUpdateManyWithWhereWithoutCompradorInput | TransaccionesUpdateManyWithWhereWithoutCompradorInput[]
    deleteMany?: TransaccionesScalarWhereInput | TransaccionesScalarWhereInput[]
  }

  export type TransaccionesUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<TransaccionesCreateWithoutVendedorInput, TransaccionesUncheckedCreateWithoutVendedorInput> | TransaccionesCreateWithoutVendedorInput[] | TransaccionesUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutVendedorInput | TransaccionesCreateOrConnectWithoutVendedorInput[]
    upsert?: TransaccionesUpsertWithWhereUniqueWithoutVendedorInput | TransaccionesUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: TransaccionesCreateManyVendedorInputEnvelope
    set?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    disconnect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    delete?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    update?: TransaccionesUpdateWithWhereUniqueWithoutVendedorInput | TransaccionesUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: TransaccionesUpdateManyWithWhereWithoutVendedorInput | TransaccionesUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: TransaccionesScalarWhereInput | TransaccionesScalarWhereInput[]
  }

  export type CalificacionesUpdateManyWithoutCalificadorNestedInput = {
    create?: XOR<CalificacionesCreateWithoutCalificadorInput, CalificacionesUncheckedCreateWithoutCalificadorInput> | CalificacionesCreateWithoutCalificadorInput[] | CalificacionesUncheckedCreateWithoutCalificadorInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutCalificadorInput | CalificacionesCreateOrConnectWithoutCalificadorInput[]
    upsert?: CalificacionesUpsertWithWhereUniqueWithoutCalificadorInput | CalificacionesUpsertWithWhereUniqueWithoutCalificadorInput[]
    createMany?: CalificacionesCreateManyCalificadorInputEnvelope
    set?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    disconnect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    delete?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    update?: CalificacionesUpdateWithWhereUniqueWithoutCalificadorInput | CalificacionesUpdateWithWhereUniqueWithoutCalificadorInput[]
    updateMany?: CalificacionesUpdateManyWithWhereWithoutCalificadorInput | CalificacionesUpdateManyWithWhereWithoutCalificadorInput[]
    deleteMany?: CalificacionesScalarWhereInput | CalificacionesScalarWhereInput[]
  }

  export type CalificacionesUpdateManyWithoutCalificadoNestedInput = {
    create?: XOR<CalificacionesCreateWithoutCalificadoInput, CalificacionesUncheckedCreateWithoutCalificadoInput> | CalificacionesCreateWithoutCalificadoInput[] | CalificacionesUncheckedCreateWithoutCalificadoInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutCalificadoInput | CalificacionesCreateOrConnectWithoutCalificadoInput[]
    upsert?: CalificacionesUpsertWithWhereUniqueWithoutCalificadoInput | CalificacionesUpsertWithWhereUniqueWithoutCalificadoInput[]
    createMany?: CalificacionesCreateManyCalificadoInputEnvelope
    set?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    disconnect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    delete?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    update?: CalificacionesUpdateWithWhereUniqueWithoutCalificadoInput | CalificacionesUpdateWithWhereUniqueWithoutCalificadoInput[]
    updateMany?: CalificacionesUpdateManyWithWhereWithoutCalificadoInput | CalificacionesUpdateManyWithWhereWithoutCalificadoInput[]
    deleteMany?: CalificacionesScalarWhereInput | CalificacionesScalarWhereInput[]
  }

  export type CarritoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CarritoCreateWithoutUsuarioInput, CarritoUncheckedCreateWithoutUsuarioInput> | CarritoCreateWithoutUsuarioInput[] | CarritoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CarritoCreateOrConnectWithoutUsuarioInput | CarritoCreateOrConnectWithoutUsuarioInput[]
    upsert?: CarritoUpsertWithWhereUniqueWithoutUsuarioInput | CarritoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CarritoCreateManyUsuarioInputEnvelope
    set?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    disconnect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    delete?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    connect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    update?: CarritoUpdateWithWhereUniqueWithoutUsuarioInput | CarritoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CarritoUpdateManyWithWhereWithoutUsuarioInput | CarritoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CarritoScalarWhereInput | CarritoScalarWhereInput[]
  }

  export type ActividadUsuarioUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ActividadUsuarioCreateWithoutUsuarioInput, ActividadUsuarioUncheckedCreateWithoutUsuarioInput> | ActividadUsuarioCreateWithoutUsuarioInput[] | ActividadUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ActividadUsuarioCreateOrConnectWithoutUsuarioInput | ActividadUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: ActividadUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | ActividadUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ActividadUsuarioCreateManyUsuarioInputEnvelope
    set?: ActividadUsuarioWhereUniqueInput | ActividadUsuarioWhereUniqueInput[]
    disconnect?: ActividadUsuarioWhereUniqueInput | ActividadUsuarioWhereUniqueInput[]
    delete?: ActividadUsuarioWhereUniqueInput | ActividadUsuarioWhereUniqueInput[]
    connect?: ActividadUsuarioWhereUniqueInput | ActividadUsuarioWhereUniqueInput[]
    update?: ActividadUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | ActividadUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ActividadUsuarioUpdateManyWithWhereWithoutUsuarioInput | ActividadUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ActividadUsuarioScalarWhereInput | ActividadUsuarioScalarWhereInput[]
  }

  export type MensajesUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<MensajesCreateWithoutRemitenteInput, MensajesUncheckedCreateWithoutRemitenteInput> | MensajesCreateWithoutRemitenteInput[] | MensajesUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: MensajesCreateOrConnectWithoutRemitenteInput | MensajesCreateOrConnectWithoutRemitenteInput[]
    upsert?: MensajesUpsertWithWhereUniqueWithoutRemitenteInput | MensajesUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: MensajesCreateManyRemitenteInputEnvelope
    set?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    disconnect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    delete?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    connect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    update?: MensajesUpdateWithWhereUniqueWithoutRemitenteInput | MensajesUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: MensajesUpdateManyWithWhereWithoutRemitenteInput | MensajesUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: MensajesScalarWhereInput | MensajesScalarWhereInput[]
  }

  export type MensajesUpdateManyWithoutDestinatarioNestedInput = {
    create?: XOR<MensajesCreateWithoutDestinatarioInput, MensajesUncheckedCreateWithoutDestinatarioInput> | MensajesCreateWithoutDestinatarioInput[] | MensajesUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: MensajesCreateOrConnectWithoutDestinatarioInput | MensajesCreateOrConnectWithoutDestinatarioInput[]
    upsert?: MensajesUpsertWithWhereUniqueWithoutDestinatarioInput | MensajesUpsertWithWhereUniqueWithoutDestinatarioInput[]
    createMany?: MensajesCreateManyDestinatarioInputEnvelope
    set?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    disconnect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    delete?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    connect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    update?: MensajesUpdateWithWhereUniqueWithoutDestinatarioInput | MensajesUpdateWithWhereUniqueWithoutDestinatarioInput[]
    updateMany?: MensajesUpdateManyWithWhereWithoutDestinatarioInput | MensajesUpdateManyWithWhereWithoutDestinatarioInput[]
    deleteMany?: MensajesScalarWhereInput | MensajesScalarWhereInput[]
  }

  export type ReportesUpdateManyWithoutReportanteNestedInput = {
    create?: XOR<ReportesCreateWithoutReportanteInput, ReportesUncheckedCreateWithoutReportanteInput> | ReportesCreateWithoutReportanteInput[] | ReportesUncheckedCreateWithoutReportanteInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutReportanteInput | ReportesCreateOrConnectWithoutReportanteInput[]
    upsert?: ReportesUpsertWithWhereUniqueWithoutReportanteInput | ReportesUpsertWithWhereUniqueWithoutReportanteInput[]
    createMany?: ReportesCreateManyReportanteInputEnvelope
    set?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    disconnect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    delete?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    update?: ReportesUpdateWithWhereUniqueWithoutReportanteInput | ReportesUpdateWithWhereUniqueWithoutReportanteInput[]
    updateMany?: ReportesUpdateManyWithWhereWithoutReportanteInput | ReportesUpdateManyWithWhereWithoutReportanteInput[]
    deleteMany?: ReportesScalarWhereInput | ReportesScalarWhereInput[]
  }

  export type ReportesUpdateManyWithoutUsuarioReportadoNestedInput = {
    create?: XOR<ReportesCreateWithoutUsuarioReportadoInput, ReportesUncheckedCreateWithoutUsuarioReportadoInput> | ReportesCreateWithoutUsuarioReportadoInput[] | ReportesUncheckedCreateWithoutUsuarioReportadoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutUsuarioReportadoInput | ReportesCreateOrConnectWithoutUsuarioReportadoInput[]
    upsert?: ReportesUpsertWithWhereUniqueWithoutUsuarioReportadoInput | ReportesUpsertWithWhereUniqueWithoutUsuarioReportadoInput[]
    createMany?: ReportesCreateManyUsuarioReportadoInputEnvelope
    set?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    disconnect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    delete?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    update?: ReportesUpdateWithWhereUniqueWithoutUsuarioReportadoInput | ReportesUpdateWithWhereUniqueWithoutUsuarioReportadoInput[]
    updateMany?: ReportesUpdateManyWithWhereWithoutUsuarioReportadoInput | ReportesUpdateManyWithWhereWithoutUsuarioReportadoInput[]
    deleteMany?: ReportesScalarWhereInput | ReportesScalarWhereInput[]
  }

  export type PublicacionesUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<PublicacionesCreateWithoutUsuarioInput, PublicacionesUncheckedCreateWithoutUsuarioInput> | PublicacionesCreateWithoutUsuarioInput[] | PublicacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PublicacionesCreateOrConnectWithoutUsuarioInput | PublicacionesCreateOrConnectWithoutUsuarioInput[]
    upsert?: PublicacionesUpsertWithWhereUniqueWithoutUsuarioInput | PublicacionesUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: PublicacionesCreateManyUsuarioInputEnvelope
    set?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    disconnect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    delete?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    connect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    update?: PublicacionesUpdateWithWhereUniqueWithoutUsuarioInput | PublicacionesUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: PublicacionesUpdateManyWithWhereWithoutUsuarioInput | PublicacionesUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: PublicacionesScalarWhereInput | PublicacionesScalarWhereInput[]
  }

  export type ForosUpdateManyWithoutCreadorNestedInput = {
    create?: XOR<ForosCreateWithoutCreadorInput, ForosUncheckedCreateWithoutCreadorInput> | ForosCreateWithoutCreadorInput[] | ForosUncheckedCreateWithoutCreadorInput[]
    connectOrCreate?: ForosCreateOrConnectWithoutCreadorInput | ForosCreateOrConnectWithoutCreadorInput[]
    upsert?: ForosUpsertWithWhereUniqueWithoutCreadorInput | ForosUpsertWithWhereUniqueWithoutCreadorInput[]
    createMany?: ForosCreateManyCreadorInputEnvelope
    set?: ForosWhereUniqueInput | ForosWhereUniqueInput[]
    disconnect?: ForosWhereUniqueInput | ForosWhereUniqueInput[]
    delete?: ForosWhereUniqueInput | ForosWhereUniqueInput[]
    connect?: ForosWhereUniqueInput | ForosWhereUniqueInput[]
    update?: ForosUpdateWithWhereUniqueWithoutCreadorInput | ForosUpdateWithWhereUniqueWithoutCreadorInput[]
    updateMany?: ForosUpdateManyWithWhereWithoutCreadorInput | ForosUpdateManyWithWhereWithoutCreadorInput[]
    deleteMany?: ForosScalarWhereInput | ForosScalarWhereInput[]
  }

  export type PublicacionesForoUpdateManyWithoutAutorNestedInput = {
    create?: XOR<PublicacionesForoCreateWithoutAutorInput, PublicacionesForoUncheckedCreateWithoutAutorInput> | PublicacionesForoCreateWithoutAutorInput[] | PublicacionesForoUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: PublicacionesForoCreateOrConnectWithoutAutorInput | PublicacionesForoCreateOrConnectWithoutAutorInput[]
    upsert?: PublicacionesForoUpsertWithWhereUniqueWithoutAutorInput | PublicacionesForoUpsertWithWhereUniqueWithoutAutorInput[]
    createMany?: PublicacionesForoCreateManyAutorInputEnvelope
    set?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    disconnect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    delete?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    connect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    update?: PublicacionesForoUpdateWithWhereUniqueWithoutAutorInput | PublicacionesForoUpdateWithWhereUniqueWithoutAutorInput[]
    updateMany?: PublicacionesForoUpdateManyWithWhereWithoutAutorInput | PublicacionesForoUpdateManyWithWhereWithoutAutorInput[]
    deleteMany?: PublicacionesForoScalarWhereInput | PublicacionesForoScalarWhereInput[]
  }

  export type ComentariosPublicacionUpdateManyWithoutAutorNestedInput = {
    create?: XOR<ComentariosPublicacionCreateWithoutAutorInput, ComentariosPublicacionUncheckedCreateWithoutAutorInput> | ComentariosPublicacionCreateWithoutAutorInput[] | ComentariosPublicacionUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: ComentariosPublicacionCreateOrConnectWithoutAutorInput | ComentariosPublicacionCreateOrConnectWithoutAutorInput[]
    upsert?: ComentariosPublicacionUpsertWithWhereUniqueWithoutAutorInput | ComentariosPublicacionUpsertWithWhereUniqueWithoutAutorInput[]
    createMany?: ComentariosPublicacionCreateManyAutorInputEnvelope
    set?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    disconnect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    delete?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    connect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    update?: ComentariosPublicacionUpdateWithWhereUniqueWithoutAutorInput | ComentariosPublicacionUpdateWithWhereUniqueWithoutAutorInput[]
    updateMany?: ComentariosPublicacionUpdateManyWithWhereWithoutAutorInput | ComentariosPublicacionUpdateManyWithWhereWithoutAutorInput[]
    deleteMany?: ComentariosPublicacionScalarWhereInput | ComentariosPublicacionScalarWhereInput[]
  }

  export type NotificacionesUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacionesCreateWithoutUsuarioInput, NotificacionesUncheckedCreateWithoutUsuarioInput> | NotificacionesCreateWithoutUsuarioInput[] | NotificacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionesCreateOrConnectWithoutUsuarioInput | NotificacionesCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacionesUpsertWithWhereUniqueWithoutUsuarioInput | NotificacionesUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: NotificacionesCreateManyUsuarioInputEnvelope
    set?: NotificacionesWhereUniqueInput | NotificacionesWhereUniqueInput[]
    disconnect?: NotificacionesWhereUniqueInput | NotificacionesWhereUniqueInput[]
    delete?: NotificacionesWhereUniqueInput | NotificacionesWhereUniqueInput[]
    connect?: NotificacionesWhereUniqueInput | NotificacionesWhereUniqueInput[]
    update?: NotificacionesUpdateWithWhereUniqueWithoutUsuarioInput | NotificacionesUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacionesUpdateManyWithWhereWithoutUsuarioInput | NotificacionesUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacionesScalarWhereInput | NotificacionesScalarWhereInput[]
  }

  export type UbicacionesUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<UbicacionesCreateWithoutUsuarioInput, UbicacionesUncheckedCreateWithoutUsuarioInput> | UbicacionesCreateWithoutUsuarioInput[] | UbicacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UbicacionesCreateOrConnectWithoutUsuarioInput | UbicacionesCreateOrConnectWithoutUsuarioInput[]
    upsert?: UbicacionesUpsertWithWhereUniqueWithoutUsuarioInput | UbicacionesUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: UbicacionesCreateManyUsuarioInputEnvelope
    set?: UbicacionesWhereUniqueInput | UbicacionesWhereUniqueInput[]
    disconnect?: UbicacionesWhereUniqueInput | UbicacionesWhereUniqueInput[]
    delete?: UbicacionesWhereUniqueInput | UbicacionesWhereUniqueInput[]
    connect?: UbicacionesWhereUniqueInput | UbicacionesWhereUniqueInput[]
    update?: UbicacionesUpdateWithWhereUniqueWithoutUsuarioInput | UbicacionesUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: UbicacionesUpdateManyWithWhereWithoutUsuarioInput | UbicacionesUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: UbicacionesScalarWhereInput | UbicacionesScalarWhereInput[]
  }

  export type ResumenUsuarioUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ResumenUsuarioCreateWithoutUsuarioInput, ResumenUsuarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ResumenUsuarioCreateOrConnectWithoutUsuarioInput
    upsert?: ResumenUsuarioUpsertWithoutUsuarioInput
    disconnect?: ResumenUsuarioWhereInput | boolean
    delete?: ResumenUsuarioWhereInput | boolean
    connect?: ResumenUsuarioWhereUniqueInput
    update?: XOR<XOR<ResumenUsuarioUpdateToOneWithWhereWithoutUsuarioInput, ResumenUsuarioUpdateWithoutUsuarioInput>, ResumenUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type SeguidoresUpdateManyWithoutUsuarioSigueNestedInput = {
    create?: XOR<SeguidoresCreateWithoutUsuarioSigueInput, SeguidoresUncheckedCreateWithoutUsuarioSigueInput> | SeguidoresCreateWithoutUsuarioSigueInput[] | SeguidoresUncheckedCreateWithoutUsuarioSigueInput[]
    connectOrCreate?: SeguidoresCreateOrConnectWithoutUsuarioSigueInput | SeguidoresCreateOrConnectWithoutUsuarioSigueInput[]
    upsert?: SeguidoresUpsertWithWhereUniqueWithoutUsuarioSigueInput | SeguidoresUpsertWithWhereUniqueWithoutUsuarioSigueInput[]
    createMany?: SeguidoresCreateManyUsuarioSigueInputEnvelope
    set?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    disconnect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    delete?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    connect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    update?: SeguidoresUpdateWithWhereUniqueWithoutUsuarioSigueInput | SeguidoresUpdateWithWhereUniqueWithoutUsuarioSigueInput[]
    updateMany?: SeguidoresUpdateManyWithWhereWithoutUsuarioSigueInput | SeguidoresUpdateManyWithWhereWithoutUsuarioSigueInput[]
    deleteMany?: SeguidoresScalarWhereInput | SeguidoresScalarWhereInput[]
  }

  export type SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput = {
    create?: XOR<SeguidoresCreateWithoutUsuarioSeguidoInput, SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput> | SeguidoresCreateWithoutUsuarioSeguidoInput[] | SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput[]
    connectOrCreate?: SeguidoresCreateOrConnectWithoutUsuarioSeguidoInput | SeguidoresCreateOrConnectWithoutUsuarioSeguidoInput[]
    upsert?: SeguidoresUpsertWithWhereUniqueWithoutUsuarioSeguidoInput | SeguidoresUpsertWithWhereUniqueWithoutUsuarioSeguidoInput[]
    createMany?: SeguidoresCreateManyUsuarioSeguidoInputEnvelope
    set?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    disconnect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    delete?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    connect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    update?: SeguidoresUpdateWithWhereUniqueWithoutUsuarioSeguidoInput | SeguidoresUpdateWithWhereUniqueWithoutUsuarioSeguidoInput[]
    updateMany?: SeguidoresUpdateManyWithWhereWithoutUsuarioSeguidoInput | SeguidoresUpdateManyWithWhereWithoutUsuarioSeguidoInput[]
    deleteMany?: SeguidoresScalarWhereInput | SeguidoresScalarWhereInput[]
  }

  export type FavoritosUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput> | FavoritosCreateWithoutUsuarioInput[] | FavoritosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutUsuarioInput | FavoritosCreateOrConnectWithoutUsuarioInput[]
    upsert?: FavoritosUpsertWithWhereUniqueWithoutUsuarioInput | FavoritosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: FavoritosCreateManyUsuarioInputEnvelope
    set?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    disconnect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    delete?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    update?: FavoritosUpdateWithWhereUniqueWithoutUsuarioInput | FavoritosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: FavoritosUpdateManyWithWhereWithoutUsuarioInput | FavoritosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProductosUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<ProductosCreateWithoutVendedorInput, ProductosUncheckedCreateWithoutVendedorInput> | ProductosCreateWithoutVendedorInput[] | ProductosUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutVendedorInput | ProductosCreateOrConnectWithoutVendedorInput[]
    upsert?: ProductosUpsertWithWhereUniqueWithoutVendedorInput | ProductosUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: ProductosCreateManyVendedorInputEnvelope
    set?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    disconnect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    delete?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    update?: ProductosUpdateWithWhereUniqueWithoutVendedorInput | ProductosUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: ProductosUpdateManyWithWhereWithoutVendedorInput | ProductosUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
  }

  export type TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput = {
    create?: XOR<TransaccionesCreateWithoutCompradorInput, TransaccionesUncheckedCreateWithoutCompradorInput> | TransaccionesCreateWithoutCompradorInput[] | TransaccionesUncheckedCreateWithoutCompradorInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutCompradorInput | TransaccionesCreateOrConnectWithoutCompradorInput[]
    upsert?: TransaccionesUpsertWithWhereUniqueWithoutCompradorInput | TransaccionesUpsertWithWhereUniqueWithoutCompradorInput[]
    createMany?: TransaccionesCreateManyCompradorInputEnvelope
    set?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    disconnect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    delete?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    update?: TransaccionesUpdateWithWhereUniqueWithoutCompradorInput | TransaccionesUpdateWithWhereUniqueWithoutCompradorInput[]
    updateMany?: TransaccionesUpdateManyWithWhereWithoutCompradorInput | TransaccionesUpdateManyWithWhereWithoutCompradorInput[]
    deleteMany?: TransaccionesScalarWhereInput | TransaccionesScalarWhereInput[]
  }

  export type TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput = {
    create?: XOR<TransaccionesCreateWithoutVendedorInput, TransaccionesUncheckedCreateWithoutVendedorInput> | TransaccionesCreateWithoutVendedorInput[] | TransaccionesUncheckedCreateWithoutVendedorInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutVendedorInput | TransaccionesCreateOrConnectWithoutVendedorInput[]
    upsert?: TransaccionesUpsertWithWhereUniqueWithoutVendedorInput | TransaccionesUpsertWithWhereUniqueWithoutVendedorInput[]
    createMany?: TransaccionesCreateManyVendedorInputEnvelope
    set?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    disconnect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    delete?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    update?: TransaccionesUpdateWithWhereUniqueWithoutVendedorInput | TransaccionesUpdateWithWhereUniqueWithoutVendedorInput[]
    updateMany?: TransaccionesUpdateManyWithWhereWithoutVendedorInput | TransaccionesUpdateManyWithWhereWithoutVendedorInput[]
    deleteMany?: TransaccionesScalarWhereInput | TransaccionesScalarWhereInput[]
  }

  export type CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput = {
    create?: XOR<CalificacionesCreateWithoutCalificadorInput, CalificacionesUncheckedCreateWithoutCalificadorInput> | CalificacionesCreateWithoutCalificadorInput[] | CalificacionesUncheckedCreateWithoutCalificadorInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutCalificadorInput | CalificacionesCreateOrConnectWithoutCalificadorInput[]
    upsert?: CalificacionesUpsertWithWhereUniqueWithoutCalificadorInput | CalificacionesUpsertWithWhereUniqueWithoutCalificadorInput[]
    createMany?: CalificacionesCreateManyCalificadorInputEnvelope
    set?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    disconnect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    delete?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    update?: CalificacionesUpdateWithWhereUniqueWithoutCalificadorInput | CalificacionesUpdateWithWhereUniqueWithoutCalificadorInput[]
    updateMany?: CalificacionesUpdateManyWithWhereWithoutCalificadorInput | CalificacionesUpdateManyWithWhereWithoutCalificadorInput[]
    deleteMany?: CalificacionesScalarWhereInput | CalificacionesScalarWhereInput[]
  }

  export type CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput = {
    create?: XOR<CalificacionesCreateWithoutCalificadoInput, CalificacionesUncheckedCreateWithoutCalificadoInput> | CalificacionesCreateWithoutCalificadoInput[] | CalificacionesUncheckedCreateWithoutCalificadoInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutCalificadoInput | CalificacionesCreateOrConnectWithoutCalificadoInput[]
    upsert?: CalificacionesUpsertWithWhereUniqueWithoutCalificadoInput | CalificacionesUpsertWithWhereUniqueWithoutCalificadoInput[]
    createMany?: CalificacionesCreateManyCalificadoInputEnvelope
    set?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    disconnect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    delete?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    update?: CalificacionesUpdateWithWhereUniqueWithoutCalificadoInput | CalificacionesUpdateWithWhereUniqueWithoutCalificadoInput[]
    updateMany?: CalificacionesUpdateManyWithWhereWithoutCalificadoInput | CalificacionesUpdateManyWithWhereWithoutCalificadoInput[]
    deleteMany?: CalificacionesScalarWhereInput | CalificacionesScalarWhereInput[]
  }

  export type CarritoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<CarritoCreateWithoutUsuarioInput, CarritoUncheckedCreateWithoutUsuarioInput> | CarritoCreateWithoutUsuarioInput[] | CarritoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: CarritoCreateOrConnectWithoutUsuarioInput | CarritoCreateOrConnectWithoutUsuarioInput[]
    upsert?: CarritoUpsertWithWhereUniqueWithoutUsuarioInput | CarritoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: CarritoCreateManyUsuarioInputEnvelope
    set?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    disconnect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    delete?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    connect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    update?: CarritoUpdateWithWhereUniqueWithoutUsuarioInput | CarritoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: CarritoUpdateManyWithWhereWithoutUsuarioInput | CarritoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: CarritoScalarWhereInput | CarritoScalarWhereInput[]
  }

  export type ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<ActividadUsuarioCreateWithoutUsuarioInput, ActividadUsuarioUncheckedCreateWithoutUsuarioInput> | ActividadUsuarioCreateWithoutUsuarioInput[] | ActividadUsuarioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: ActividadUsuarioCreateOrConnectWithoutUsuarioInput | ActividadUsuarioCreateOrConnectWithoutUsuarioInput[]
    upsert?: ActividadUsuarioUpsertWithWhereUniqueWithoutUsuarioInput | ActividadUsuarioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: ActividadUsuarioCreateManyUsuarioInputEnvelope
    set?: ActividadUsuarioWhereUniqueInput | ActividadUsuarioWhereUniqueInput[]
    disconnect?: ActividadUsuarioWhereUniqueInput | ActividadUsuarioWhereUniqueInput[]
    delete?: ActividadUsuarioWhereUniqueInput | ActividadUsuarioWhereUniqueInput[]
    connect?: ActividadUsuarioWhereUniqueInput | ActividadUsuarioWhereUniqueInput[]
    update?: ActividadUsuarioUpdateWithWhereUniqueWithoutUsuarioInput | ActividadUsuarioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: ActividadUsuarioUpdateManyWithWhereWithoutUsuarioInput | ActividadUsuarioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: ActividadUsuarioScalarWhereInput | ActividadUsuarioScalarWhereInput[]
  }

  export type MensajesUncheckedUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<MensajesCreateWithoutRemitenteInput, MensajesUncheckedCreateWithoutRemitenteInput> | MensajesCreateWithoutRemitenteInput[] | MensajesUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: MensajesCreateOrConnectWithoutRemitenteInput | MensajesCreateOrConnectWithoutRemitenteInput[]
    upsert?: MensajesUpsertWithWhereUniqueWithoutRemitenteInput | MensajesUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: MensajesCreateManyRemitenteInputEnvelope
    set?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    disconnect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    delete?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    connect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    update?: MensajesUpdateWithWhereUniqueWithoutRemitenteInput | MensajesUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: MensajesUpdateManyWithWhereWithoutRemitenteInput | MensajesUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: MensajesScalarWhereInput | MensajesScalarWhereInput[]
  }

  export type MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput = {
    create?: XOR<MensajesCreateWithoutDestinatarioInput, MensajesUncheckedCreateWithoutDestinatarioInput> | MensajesCreateWithoutDestinatarioInput[] | MensajesUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: MensajesCreateOrConnectWithoutDestinatarioInput | MensajesCreateOrConnectWithoutDestinatarioInput[]
    upsert?: MensajesUpsertWithWhereUniqueWithoutDestinatarioInput | MensajesUpsertWithWhereUniqueWithoutDestinatarioInput[]
    createMany?: MensajesCreateManyDestinatarioInputEnvelope
    set?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    disconnect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    delete?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    connect?: MensajesWhereUniqueInput | MensajesWhereUniqueInput[]
    update?: MensajesUpdateWithWhereUniqueWithoutDestinatarioInput | MensajesUpdateWithWhereUniqueWithoutDestinatarioInput[]
    updateMany?: MensajesUpdateManyWithWhereWithoutDestinatarioInput | MensajesUpdateManyWithWhereWithoutDestinatarioInput[]
    deleteMany?: MensajesScalarWhereInput | MensajesScalarWhereInput[]
  }

  export type ReportesUncheckedUpdateManyWithoutReportanteNestedInput = {
    create?: XOR<ReportesCreateWithoutReportanteInput, ReportesUncheckedCreateWithoutReportanteInput> | ReportesCreateWithoutReportanteInput[] | ReportesUncheckedCreateWithoutReportanteInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutReportanteInput | ReportesCreateOrConnectWithoutReportanteInput[]
    upsert?: ReportesUpsertWithWhereUniqueWithoutReportanteInput | ReportesUpsertWithWhereUniqueWithoutReportanteInput[]
    createMany?: ReportesCreateManyReportanteInputEnvelope
    set?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    disconnect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    delete?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    update?: ReportesUpdateWithWhereUniqueWithoutReportanteInput | ReportesUpdateWithWhereUniqueWithoutReportanteInput[]
    updateMany?: ReportesUpdateManyWithWhereWithoutReportanteInput | ReportesUpdateManyWithWhereWithoutReportanteInput[]
    deleteMany?: ReportesScalarWhereInput | ReportesScalarWhereInput[]
  }

  export type ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput = {
    create?: XOR<ReportesCreateWithoutUsuarioReportadoInput, ReportesUncheckedCreateWithoutUsuarioReportadoInput> | ReportesCreateWithoutUsuarioReportadoInput[] | ReportesUncheckedCreateWithoutUsuarioReportadoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutUsuarioReportadoInput | ReportesCreateOrConnectWithoutUsuarioReportadoInput[]
    upsert?: ReportesUpsertWithWhereUniqueWithoutUsuarioReportadoInput | ReportesUpsertWithWhereUniqueWithoutUsuarioReportadoInput[]
    createMany?: ReportesCreateManyUsuarioReportadoInputEnvelope
    set?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    disconnect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    delete?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    update?: ReportesUpdateWithWhereUniqueWithoutUsuarioReportadoInput | ReportesUpdateWithWhereUniqueWithoutUsuarioReportadoInput[]
    updateMany?: ReportesUpdateManyWithWhereWithoutUsuarioReportadoInput | ReportesUpdateManyWithWhereWithoutUsuarioReportadoInput[]
    deleteMany?: ReportesScalarWhereInput | ReportesScalarWhereInput[]
  }

  export type PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<PublicacionesCreateWithoutUsuarioInput, PublicacionesUncheckedCreateWithoutUsuarioInput> | PublicacionesCreateWithoutUsuarioInput[] | PublicacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: PublicacionesCreateOrConnectWithoutUsuarioInput | PublicacionesCreateOrConnectWithoutUsuarioInput[]
    upsert?: PublicacionesUpsertWithWhereUniqueWithoutUsuarioInput | PublicacionesUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: PublicacionesCreateManyUsuarioInputEnvelope
    set?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    disconnect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    delete?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    connect?: PublicacionesWhereUniqueInput | PublicacionesWhereUniqueInput[]
    update?: PublicacionesUpdateWithWhereUniqueWithoutUsuarioInput | PublicacionesUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: PublicacionesUpdateManyWithWhereWithoutUsuarioInput | PublicacionesUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: PublicacionesScalarWhereInput | PublicacionesScalarWhereInput[]
  }

  export type ForosUncheckedUpdateManyWithoutCreadorNestedInput = {
    create?: XOR<ForosCreateWithoutCreadorInput, ForosUncheckedCreateWithoutCreadorInput> | ForosCreateWithoutCreadorInput[] | ForosUncheckedCreateWithoutCreadorInput[]
    connectOrCreate?: ForosCreateOrConnectWithoutCreadorInput | ForosCreateOrConnectWithoutCreadorInput[]
    upsert?: ForosUpsertWithWhereUniqueWithoutCreadorInput | ForosUpsertWithWhereUniqueWithoutCreadorInput[]
    createMany?: ForosCreateManyCreadorInputEnvelope
    set?: ForosWhereUniqueInput | ForosWhereUniqueInput[]
    disconnect?: ForosWhereUniqueInput | ForosWhereUniqueInput[]
    delete?: ForosWhereUniqueInput | ForosWhereUniqueInput[]
    connect?: ForosWhereUniqueInput | ForosWhereUniqueInput[]
    update?: ForosUpdateWithWhereUniqueWithoutCreadorInput | ForosUpdateWithWhereUniqueWithoutCreadorInput[]
    updateMany?: ForosUpdateManyWithWhereWithoutCreadorInput | ForosUpdateManyWithWhereWithoutCreadorInput[]
    deleteMany?: ForosScalarWhereInput | ForosScalarWhereInput[]
  }

  export type PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput = {
    create?: XOR<PublicacionesForoCreateWithoutAutorInput, PublicacionesForoUncheckedCreateWithoutAutorInput> | PublicacionesForoCreateWithoutAutorInput[] | PublicacionesForoUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: PublicacionesForoCreateOrConnectWithoutAutorInput | PublicacionesForoCreateOrConnectWithoutAutorInput[]
    upsert?: PublicacionesForoUpsertWithWhereUniqueWithoutAutorInput | PublicacionesForoUpsertWithWhereUniqueWithoutAutorInput[]
    createMany?: PublicacionesForoCreateManyAutorInputEnvelope
    set?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    disconnect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    delete?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    connect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    update?: PublicacionesForoUpdateWithWhereUniqueWithoutAutorInput | PublicacionesForoUpdateWithWhereUniqueWithoutAutorInput[]
    updateMany?: PublicacionesForoUpdateManyWithWhereWithoutAutorInput | PublicacionesForoUpdateManyWithWhereWithoutAutorInput[]
    deleteMany?: PublicacionesForoScalarWhereInput | PublicacionesForoScalarWhereInput[]
  }

  export type ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput = {
    create?: XOR<ComentariosPublicacionCreateWithoutAutorInput, ComentariosPublicacionUncheckedCreateWithoutAutorInput> | ComentariosPublicacionCreateWithoutAutorInput[] | ComentariosPublicacionUncheckedCreateWithoutAutorInput[]
    connectOrCreate?: ComentariosPublicacionCreateOrConnectWithoutAutorInput | ComentariosPublicacionCreateOrConnectWithoutAutorInput[]
    upsert?: ComentariosPublicacionUpsertWithWhereUniqueWithoutAutorInput | ComentariosPublicacionUpsertWithWhereUniqueWithoutAutorInput[]
    createMany?: ComentariosPublicacionCreateManyAutorInputEnvelope
    set?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    disconnect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    delete?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    connect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    update?: ComentariosPublicacionUpdateWithWhereUniqueWithoutAutorInput | ComentariosPublicacionUpdateWithWhereUniqueWithoutAutorInput[]
    updateMany?: ComentariosPublicacionUpdateManyWithWhereWithoutAutorInput | ComentariosPublicacionUpdateManyWithWhereWithoutAutorInput[]
    deleteMany?: ComentariosPublicacionScalarWhereInput | ComentariosPublicacionScalarWhereInput[]
  }

  export type NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<NotificacionesCreateWithoutUsuarioInput, NotificacionesUncheckedCreateWithoutUsuarioInput> | NotificacionesCreateWithoutUsuarioInput[] | NotificacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: NotificacionesCreateOrConnectWithoutUsuarioInput | NotificacionesCreateOrConnectWithoutUsuarioInput[]
    upsert?: NotificacionesUpsertWithWhereUniqueWithoutUsuarioInput | NotificacionesUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: NotificacionesCreateManyUsuarioInputEnvelope
    set?: NotificacionesWhereUniqueInput | NotificacionesWhereUniqueInput[]
    disconnect?: NotificacionesWhereUniqueInput | NotificacionesWhereUniqueInput[]
    delete?: NotificacionesWhereUniqueInput | NotificacionesWhereUniqueInput[]
    connect?: NotificacionesWhereUniqueInput | NotificacionesWhereUniqueInput[]
    update?: NotificacionesUpdateWithWhereUniqueWithoutUsuarioInput | NotificacionesUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: NotificacionesUpdateManyWithWhereWithoutUsuarioInput | NotificacionesUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: NotificacionesScalarWhereInput | NotificacionesScalarWhereInput[]
  }

  export type UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<UbicacionesCreateWithoutUsuarioInput, UbicacionesUncheckedCreateWithoutUsuarioInput> | UbicacionesCreateWithoutUsuarioInput[] | UbicacionesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: UbicacionesCreateOrConnectWithoutUsuarioInput | UbicacionesCreateOrConnectWithoutUsuarioInput[]
    upsert?: UbicacionesUpsertWithWhereUniqueWithoutUsuarioInput | UbicacionesUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: UbicacionesCreateManyUsuarioInputEnvelope
    set?: UbicacionesWhereUniqueInput | UbicacionesWhereUniqueInput[]
    disconnect?: UbicacionesWhereUniqueInput | UbicacionesWhereUniqueInput[]
    delete?: UbicacionesWhereUniqueInput | UbicacionesWhereUniqueInput[]
    connect?: UbicacionesWhereUniqueInput | UbicacionesWhereUniqueInput[]
    update?: UbicacionesUpdateWithWhereUniqueWithoutUsuarioInput | UbicacionesUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: UbicacionesUpdateManyWithWhereWithoutUsuarioInput | UbicacionesUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: UbicacionesScalarWhereInput | UbicacionesScalarWhereInput[]
  }

  export type ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput = {
    create?: XOR<ResumenUsuarioCreateWithoutUsuarioInput, ResumenUsuarioUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: ResumenUsuarioCreateOrConnectWithoutUsuarioInput
    upsert?: ResumenUsuarioUpsertWithoutUsuarioInput
    disconnect?: ResumenUsuarioWhereInput | boolean
    delete?: ResumenUsuarioWhereInput | boolean
    connect?: ResumenUsuarioWhereUniqueInput
    update?: XOR<XOR<ResumenUsuarioUpdateToOneWithWhereWithoutUsuarioInput, ResumenUsuarioUpdateWithoutUsuarioInput>, ResumenUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput = {
    create?: XOR<SeguidoresCreateWithoutUsuarioSigueInput, SeguidoresUncheckedCreateWithoutUsuarioSigueInput> | SeguidoresCreateWithoutUsuarioSigueInput[] | SeguidoresUncheckedCreateWithoutUsuarioSigueInput[]
    connectOrCreate?: SeguidoresCreateOrConnectWithoutUsuarioSigueInput | SeguidoresCreateOrConnectWithoutUsuarioSigueInput[]
    upsert?: SeguidoresUpsertWithWhereUniqueWithoutUsuarioSigueInput | SeguidoresUpsertWithWhereUniqueWithoutUsuarioSigueInput[]
    createMany?: SeguidoresCreateManyUsuarioSigueInputEnvelope
    set?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    disconnect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    delete?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    connect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    update?: SeguidoresUpdateWithWhereUniqueWithoutUsuarioSigueInput | SeguidoresUpdateWithWhereUniqueWithoutUsuarioSigueInput[]
    updateMany?: SeguidoresUpdateManyWithWhereWithoutUsuarioSigueInput | SeguidoresUpdateManyWithWhereWithoutUsuarioSigueInput[]
    deleteMany?: SeguidoresScalarWhereInput | SeguidoresScalarWhereInput[]
  }

  export type SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput = {
    create?: XOR<SeguidoresCreateWithoutUsuarioSeguidoInput, SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput> | SeguidoresCreateWithoutUsuarioSeguidoInput[] | SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput[]
    connectOrCreate?: SeguidoresCreateOrConnectWithoutUsuarioSeguidoInput | SeguidoresCreateOrConnectWithoutUsuarioSeguidoInput[]
    upsert?: SeguidoresUpsertWithWhereUniqueWithoutUsuarioSeguidoInput | SeguidoresUpsertWithWhereUniqueWithoutUsuarioSeguidoInput[]
    createMany?: SeguidoresCreateManyUsuarioSeguidoInputEnvelope
    set?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    disconnect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    delete?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    connect?: SeguidoresWhereUniqueInput | SeguidoresWhereUniqueInput[]
    update?: SeguidoresUpdateWithWhereUniqueWithoutUsuarioSeguidoInput | SeguidoresUpdateWithWhereUniqueWithoutUsuarioSeguidoInput[]
    updateMany?: SeguidoresUpdateManyWithWhereWithoutUsuarioSeguidoInput | SeguidoresUpdateManyWithWhereWithoutUsuarioSeguidoInput[]
    deleteMany?: SeguidoresScalarWhereInput | SeguidoresScalarWhereInput[]
  }

  export type FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput> | FavoritosCreateWithoutUsuarioInput[] | FavoritosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutUsuarioInput | FavoritosCreateOrConnectWithoutUsuarioInput[]
    upsert?: FavoritosUpsertWithWhereUniqueWithoutUsuarioInput | FavoritosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: FavoritosCreateManyUsuarioInputEnvelope
    set?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    disconnect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    delete?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    update?: FavoritosUpdateWithWhereUniqueWithoutUsuarioInput | FavoritosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: FavoritosUpdateManyWithWhereWithoutUsuarioInput | FavoritosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
  }

  export type CuentasCreateNestedManyWithoutRolInput = {
    create?: XOR<CuentasCreateWithoutRolInput, CuentasUncheckedCreateWithoutRolInput> | CuentasCreateWithoutRolInput[] | CuentasUncheckedCreateWithoutRolInput[]
    connectOrCreate?: CuentasCreateOrConnectWithoutRolInput | CuentasCreateOrConnectWithoutRolInput[]
    createMany?: CuentasCreateManyRolInputEnvelope
    connect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
  }

  export type CuentasUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<CuentasCreateWithoutRolInput, CuentasUncheckedCreateWithoutRolInput> | CuentasCreateWithoutRolInput[] | CuentasUncheckedCreateWithoutRolInput[]
    connectOrCreate?: CuentasCreateOrConnectWithoutRolInput | CuentasCreateOrConnectWithoutRolInput[]
    createMany?: CuentasCreateManyRolInputEnvelope
    connect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
  }

  export type CuentasUpdateManyWithoutRolNestedInput = {
    create?: XOR<CuentasCreateWithoutRolInput, CuentasUncheckedCreateWithoutRolInput> | CuentasCreateWithoutRolInput[] | CuentasUncheckedCreateWithoutRolInput[]
    connectOrCreate?: CuentasCreateOrConnectWithoutRolInput | CuentasCreateOrConnectWithoutRolInput[]
    upsert?: CuentasUpsertWithWhereUniqueWithoutRolInput | CuentasUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: CuentasCreateManyRolInputEnvelope
    set?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    disconnect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    delete?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    connect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    update?: CuentasUpdateWithWhereUniqueWithoutRolInput | CuentasUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: CuentasUpdateManyWithWhereWithoutRolInput | CuentasUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: CuentasScalarWhereInput | CuentasScalarWhereInput[]
  }

  export type CuentasUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<CuentasCreateWithoutRolInput, CuentasUncheckedCreateWithoutRolInput> | CuentasCreateWithoutRolInput[] | CuentasUncheckedCreateWithoutRolInput[]
    connectOrCreate?: CuentasCreateOrConnectWithoutRolInput | CuentasCreateOrConnectWithoutRolInput[]
    upsert?: CuentasUpsertWithWhereUniqueWithoutRolInput | CuentasUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: CuentasCreateManyRolInputEnvelope
    set?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    disconnect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    delete?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    connect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    update?: CuentasUpdateWithWhereUniqueWithoutRolInput | CuentasUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: CuentasUpdateManyWithWhereWithoutRolInput | CuentasUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: CuentasScalarWhereInput | CuentasScalarWhereInput[]
  }

  export type CuentasCreateNestedManyWithoutEstadoInput = {
    create?: XOR<CuentasCreateWithoutEstadoInput, CuentasUncheckedCreateWithoutEstadoInput> | CuentasCreateWithoutEstadoInput[] | CuentasUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: CuentasCreateOrConnectWithoutEstadoInput | CuentasCreateOrConnectWithoutEstadoInput[]
    createMany?: CuentasCreateManyEstadoInputEnvelope
    connect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
  }

  export type CuentasUncheckedCreateNestedManyWithoutEstadoInput = {
    create?: XOR<CuentasCreateWithoutEstadoInput, CuentasUncheckedCreateWithoutEstadoInput> | CuentasCreateWithoutEstadoInput[] | CuentasUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: CuentasCreateOrConnectWithoutEstadoInput | CuentasCreateOrConnectWithoutEstadoInput[]
    createMany?: CuentasCreateManyEstadoInputEnvelope
    connect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
  }

  export type CuentasUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<CuentasCreateWithoutEstadoInput, CuentasUncheckedCreateWithoutEstadoInput> | CuentasCreateWithoutEstadoInput[] | CuentasUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: CuentasCreateOrConnectWithoutEstadoInput | CuentasCreateOrConnectWithoutEstadoInput[]
    upsert?: CuentasUpsertWithWhereUniqueWithoutEstadoInput | CuentasUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: CuentasCreateManyEstadoInputEnvelope
    set?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    disconnect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    delete?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    connect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    update?: CuentasUpdateWithWhereUniqueWithoutEstadoInput | CuentasUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: CuentasUpdateManyWithWhereWithoutEstadoInput | CuentasUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: CuentasScalarWhereInput | CuentasScalarWhereInput[]
  }

  export type CuentasUncheckedUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<CuentasCreateWithoutEstadoInput, CuentasUncheckedCreateWithoutEstadoInput> | CuentasCreateWithoutEstadoInput[] | CuentasUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: CuentasCreateOrConnectWithoutEstadoInput | CuentasCreateOrConnectWithoutEstadoInput[]
    upsert?: CuentasUpsertWithWhereUniqueWithoutEstadoInput | CuentasUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: CuentasCreateManyEstadoInputEnvelope
    set?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    disconnect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    delete?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    connect?: CuentasWhereUniqueInput | CuentasWhereUniqueInput[]
    update?: CuentasUpdateWithWhereUniqueWithoutEstadoInput | CuentasUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: CuentasUpdateManyWithWhereWithoutEstadoInput | CuentasUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: CuentasScalarWhereInput | CuentasScalarWhereInput[]
  }

  export type CategoriasCreateNestedOneWithoutSubcategoriasInput = {
    create?: XOR<CategoriasCreateWithoutSubcategoriasInput, CategoriasUncheckedCreateWithoutSubcategoriasInput>
    connectOrCreate?: CategoriasCreateOrConnectWithoutSubcategoriasInput
    connect?: CategoriasWhereUniqueInput
  }

  export type CategoriasCreateNestedManyWithoutCategoriaPadreInput = {
    create?: XOR<CategoriasCreateWithoutCategoriaPadreInput, CategoriasUncheckedCreateWithoutCategoriaPadreInput> | CategoriasCreateWithoutCategoriaPadreInput[] | CategoriasUncheckedCreateWithoutCategoriaPadreInput[]
    connectOrCreate?: CategoriasCreateOrConnectWithoutCategoriaPadreInput | CategoriasCreateOrConnectWithoutCategoriaPadreInput[]
    createMany?: CategoriasCreateManyCategoriaPadreInputEnvelope
    connect?: CategoriasWhereUniqueInput | CategoriasWhereUniqueInput[]
  }

  export type ProductosCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<ProductosCreateWithoutCategoriaInput, ProductosUncheckedCreateWithoutCategoriaInput> | ProductosCreateWithoutCategoriaInput[] | ProductosUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutCategoriaInput | ProductosCreateOrConnectWithoutCategoriaInput[]
    createMany?: ProductosCreateManyCategoriaInputEnvelope
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
  }

  export type CategoriasUncheckedCreateNestedManyWithoutCategoriaPadreInput = {
    create?: XOR<CategoriasCreateWithoutCategoriaPadreInput, CategoriasUncheckedCreateWithoutCategoriaPadreInput> | CategoriasCreateWithoutCategoriaPadreInput[] | CategoriasUncheckedCreateWithoutCategoriaPadreInput[]
    connectOrCreate?: CategoriasCreateOrConnectWithoutCategoriaPadreInput | CategoriasCreateOrConnectWithoutCategoriaPadreInput[]
    createMany?: CategoriasCreateManyCategoriaPadreInputEnvelope
    connect?: CategoriasWhereUniqueInput | CategoriasWhereUniqueInput[]
  }

  export type ProductosUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<ProductosCreateWithoutCategoriaInput, ProductosUncheckedCreateWithoutCategoriaInput> | ProductosCreateWithoutCategoriaInput[] | ProductosUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutCategoriaInput | ProductosCreateOrConnectWithoutCategoriaInput[]
    createMany?: ProductosCreateManyCategoriaInputEnvelope
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
  }

  export type CategoriasUpdateOneWithoutSubcategoriasNestedInput = {
    create?: XOR<CategoriasCreateWithoutSubcategoriasInput, CategoriasUncheckedCreateWithoutSubcategoriasInput>
    connectOrCreate?: CategoriasCreateOrConnectWithoutSubcategoriasInput
    upsert?: CategoriasUpsertWithoutSubcategoriasInput
    disconnect?: CategoriasWhereInput | boolean
    delete?: CategoriasWhereInput | boolean
    connect?: CategoriasWhereUniqueInput
    update?: XOR<XOR<CategoriasUpdateToOneWithWhereWithoutSubcategoriasInput, CategoriasUpdateWithoutSubcategoriasInput>, CategoriasUncheckedUpdateWithoutSubcategoriasInput>
  }

  export type CategoriasUpdateManyWithoutCategoriaPadreNestedInput = {
    create?: XOR<CategoriasCreateWithoutCategoriaPadreInput, CategoriasUncheckedCreateWithoutCategoriaPadreInput> | CategoriasCreateWithoutCategoriaPadreInput[] | CategoriasUncheckedCreateWithoutCategoriaPadreInput[]
    connectOrCreate?: CategoriasCreateOrConnectWithoutCategoriaPadreInput | CategoriasCreateOrConnectWithoutCategoriaPadreInput[]
    upsert?: CategoriasUpsertWithWhereUniqueWithoutCategoriaPadreInput | CategoriasUpsertWithWhereUniqueWithoutCategoriaPadreInput[]
    createMany?: CategoriasCreateManyCategoriaPadreInputEnvelope
    set?: CategoriasWhereUniqueInput | CategoriasWhereUniqueInput[]
    disconnect?: CategoriasWhereUniqueInput | CategoriasWhereUniqueInput[]
    delete?: CategoriasWhereUniqueInput | CategoriasWhereUniqueInput[]
    connect?: CategoriasWhereUniqueInput | CategoriasWhereUniqueInput[]
    update?: CategoriasUpdateWithWhereUniqueWithoutCategoriaPadreInput | CategoriasUpdateWithWhereUniqueWithoutCategoriaPadreInput[]
    updateMany?: CategoriasUpdateManyWithWhereWithoutCategoriaPadreInput | CategoriasUpdateManyWithWhereWithoutCategoriaPadreInput[]
    deleteMany?: CategoriasScalarWhereInput | CategoriasScalarWhereInput[]
  }

  export type ProductosUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<ProductosCreateWithoutCategoriaInput, ProductosUncheckedCreateWithoutCategoriaInput> | ProductosCreateWithoutCategoriaInput[] | ProductosUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutCategoriaInput | ProductosCreateOrConnectWithoutCategoriaInput[]
    upsert?: ProductosUpsertWithWhereUniqueWithoutCategoriaInput | ProductosUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: ProductosCreateManyCategoriaInputEnvelope
    set?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    disconnect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    delete?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    update?: ProductosUpdateWithWhereUniqueWithoutCategoriaInput | ProductosUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: ProductosUpdateManyWithWhereWithoutCategoriaInput | ProductosUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CategoriasUncheckedUpdateManyWithoutCategoriaPadreNestedInput = {
    create?: XOR<CategoriasCreateWithoutCategoriaPadreInput, CategoriasUncheckedCreateWithoutCategoriaPadreInput> | CategoriasCreateWithoutCategoriaPadreInput[] | CategoriasUncheckedCreateWithoutCategoriaPadreInput[]
    connectOrCreate?: CategoriasCreateOrConnectWithoutCategoriaPadreInput | CategoriasCreateOrConnectWithoutCategoriaPadreInput[]
    upsert?: CategoriasUpsertWithWhereUniqueWithoutCategoriaPadreInput | CategoriasUpsertWithWhereUniqueWithoutCategoriaPadreInput[]
    createMany?: CategoriasCreateManyCategoriaPadreInputEnvelope
    set?: CategoriasWhereUniqueInput | CategoriasWhereUniqueInput[]
    disconnect?: CategoriasWhereUniqueInput | CategoriasWhereUniqueInput[]
    delete?: CategoriasWhereUniqueInput | CategoriasWhereUniqueInput[]
    connect?: CategoriasWhereUniqueInput | CategoriasWhereUniqueInput[]
    update?: CategoriasUpdateWithWhereUniqueWithoutCategoriaPadreInput | CategoriasUpdateWithWhereUniqueWithoutCategoriaPadreInput[]
    updateMany?: CategoriasUpdateManyWithWhereWithoutCategoriaPadreInput | CategoriasUpdateManyWithWhereWithoutCategoriaPadreInput[]
    deleteMany?: CategoriasScalarWhereInput | CategoriasScalarWhereInput[]
  }

  export type ProductosUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<ProductosCreateWithoutCategoriaInput, ProductosUncheckedCreateWithoutCategoriaInput> | ProductosCreateWithoutCategoriaInput[] | ProductosUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutCategoriaInput | ProductosCreateOrConnectWithoutCategoriaInput[]
    upsert?: ProductosUpsertWithWhereUniqueWithoutCategoriaInput | ProductosUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: ProductosCreateManyCategoriaInputEnvelope
    set?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    disconnect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    delete?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    update?: ProductosUpdateWithWhereUniqueWithoutCategoriaInput | ProductosUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: ProductosUpdateManyWithWhereWithoutCategoriaInput | ProductosUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
  }

  export type ProductosCreateNestedManyWithoutEstadoInput = {
    create?: XOR<ProductosCreateWithoutEstadoInput, ProductosUncheckedCreateWithoutEstadoInput> | ProductosCreateWithoutEstadoInput[] | ProductosUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutEstadoInput | ProductosCreateOrConnectWithoutEstadoInput[]
    createMany?: ProductosCreateManyEstadoInputEnvelope
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
  }

  export type ProductosUncheckedCreateNestedManyWithoutEstadoInput = {
    create?: XOR<ProductosCreateWithoutEstadoInput, ProductosUncheckedCreateWithoutEstadoInput> | ProductosCreateWithoutEstadoInput[] | ProductosUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutEstadoInput | ProductosCreateOrConnectWithoutEstadoInput[]
    createMany?: ProductosCreateManyEstadoInputEnvelope
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
  }

  export type ProductosUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<ProductosCreateWithoutEstadoInput, ProductosUncheckedCreateWithoutEstadoInput> | ProductosCreateWithoutEstadoInput[] | ProductosUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutEstadoInput | ProductosCreateOrConnectWithoutEstadoInput[]
    upsert?: ProductosUpsertWithWhereUniqueWithoutEstadoInput | ProductosUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: ProductosCreateManyEstadoInputEnvelope
    set?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    disconnect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    delete?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    update?: ProductosUpdateWithWhereUniqueWithoutEstadoInput | ProductosUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: ProductosUpdateManyWithWhereWithoutEstadoInput | ProductosUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
  }

  export type ProductosUncheckedUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<ProductosCreateWithoutEstadoInput, ProductosUncheckedCreateWithoutEstadoInput> | ProductosCreateWithoutEstadoInput[] | ProductosUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: ProductosCreateOrConnectWithoutEstadoInput | ProductosCreateOrConnectWithoutEstadoInput[]
    upsert?: ProductosUpsertWithWhereUniqueWithoutEstadoInput | ProductosUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: ProductosCreateManyEstadoInputEnvelope
    set?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    disconnect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    delete?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    connect?: ProductosWhereUniqueInput | ProductosWhereUniqueInput[]
    update?: ProductosUpdateWithWhereUniqueWithoutEstadoInput | ProductosUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: ProductosUpdateManyWithWhereWithoutEstadoInput | ProductosUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
  }

  export type CategoriasCreateNestedOneWithoutProductosInput = {
    create?: XOR<CategoriasCreateWithoutProductosInput, CategoriasUncheckedCreateWithoutProductosInput>
    connectOrCreate?: CategoriasCreateOrConnectWithoutProductosInput
    connect?: CategoriasWhereUniqueInput
  }

  export type CuentasCreateNestedOneWithoutProductosInput = {
    create?: XOR<CuentasCreateWithoutProductosInput, CuentasUncheckedCreateWithoutProductosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutProductosInput
    connect?: CuentasWhereUniqueInput
  }

  export type EstadosProductoCreateNestedOneWithoutProductosInput = {
    create?: XOR<EstadosProductoCreateWithoutProductosInput, EstadosProductoUncheckedCreateWithoutProductosInput>
    connectOrCreate?: EstadosProductoCreateOrConnectWithoutProductosInput
    connect?: EstadosProductoWhereUniqueInput
  }

  export type TransaccionesCreateNestedManyWithoutProductoInput = {
    create?: XOR<TransaccionesCreateWithoutProductoInput, TransaccionesUncheckedCreateWithoutProductoInput> | TransaccionesCreateWithoutProductoInput[] | TransaccionesUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutProductoInput | TransaccionesCreateOrConnectWithoutProductoInput[]
    createMany?: TransaccionesCreateManyProductoInputEnvelope
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
  }

  export type CarritoCreateNestedManyWithoutProductoInput = {
    create?: XOR<CarritoCreateWithoutProductoInput, CarritoUncheckedCreateWithoutProductoInput> | CarritoCreateWithoutProductoInput[] | CarritoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: CarritoCreateOrConnectWithoutProductoInput | CarritoCreateOrConnectWithoutProductoInput[]
    createMany?: CarritoCreateManyProductoInputEnvelope
    connect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
  }

  export type ImagenesProductoCreateNestedManyWithoutProductoInput = {
    create?: XOR<ImagenesProductoCreateWithoutProductoInput, ImagenesProductoUncheckedCreateWithoutProductoInput> | ImagenesProductoCreateWithoutProductoInput[] | ImagenesProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ImagenesProductoCreateOrConnectWithoutProductoInput | ImagenesProductoCreateOrConnectWithoutProductoInput[]
    createMany?: ImagenesProductoCreateManyProductoInputEnvelope
    connect?: ImagenesProductoWhereUniqueInput | ImagenesProductoWhereUniqueInput[]
  }

  export type ReportesCreateNestedManyWithoutProductoInput = {
    create?: XOR<ReportesCreateWithoutProductoInput, ReportesUncheckedCreateWithoutProductoInput> | ReportesCreateWithoutProductoInput[] | ReportesUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutProductoInput | ReportesCreateOrConnectWithoutProductoInput[]
    createMany?: ReportesCreateManyProductoInputEnvelope
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
  }

  export type TransaccionesUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<TransaccionesCreateWithoutProductoInput, TransaccionesUncheckedCreateWithoutProductoInput> | TransaccionesCreateWithoutProductoInput[] | TransaccionesUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutProductoInput | TransaccionesCreateOrConnectWithoutProductoInput[]
    createMany?: TransaccionesCreateManyProductoInputEnvelope
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
  }

  export type CarritoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<CarritoCreateWithoutProductoInput, CarritoUncheckedCreateWithoutProductoInput> | CarritoCreateWithoutProductoInput[] | CarritoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: CarritoCreateOrConnectWithoutProductoInput | CarritoCreateOrConnectWithoutProductoInput[]
    createMany?: CarritoCreateManyProductoInputEnvelope
    connect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
  }

  export type ImagenesProductoUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<ImagenesProductoCreateWithoutProductoInput, ImagenesProductoUncheckedCreateWithoutProductoInput> | ImagenesProductoCreateWithoutProductoInput[] | ImagenesProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ImagenesProductoCreateOrConnectWithoutProductoInput | ImagenesProductoCreateOrConnectWithoutProductoInput[]
    createMany?: ImagenesProductoCreateManyProductoInputEnvelope
    connect?: ImagenesProductoWhereUniqueInput | ImagenesProductoWhereUniqueInput[]
  }

  export type ReportesUncheckedCreateNestedManyWithoutProductoInput = {
    create?: XOR<ReportesCreateWithoutProductoInput, ReportesUncheckedCreateWithoutProductoInput> | ReportesCreateWithoutProductoInput[] | ReportesUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutProductoInput | ReportesCreateOrConnectWithoutProductoInput[]
    createMany?: ReportesCreateManyProductoInputEnvelope
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type CategoriasUpdateOneWithoutProductosNestedInput = {
    create?: XOR<CategoriasCreateWithoutProductosInput, CategoriasUncheckedCreateWithoutProductosInput>
    connectOrCreate?: CategoriasCreateOrConnectWithoutProductosInput
    upsert?: CategoriasUpsertWithoutProductosInput
    disconnect?: CategoriasWhereInput | boolean
    delete?: CategoriasWhereInput | boolean
    connect?: CategoriasWhereUniqueInput
    update?: XOR<XOR<CategoriasUpdateToOneWithWhereWithoutProductosInput, CategoriasUpdateWithoutProductosInput>, CategoriasUncheckedUpdateWithoutProductosInput>
  }

  export type CuentasUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<CuentasCreateWithoutProductosInput, CuentasUncheckedCreateWithoutProductosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutProductosInput
    upsert?: CuentasUpsertWithoutProductosInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutProductosInput, CuentasUpdateWithoutProductosInput>, CuentasUncheckedUpdateWithoutProductosInput>
  }

  export type EstadosProductoUpdateOneRequiredWithoutProductosNestedInput = {
    create?: XOR<EstadosProductoCreateWithoutProductosInput, EstadosProductoUncheckedCreateWithoutProductosInput>
    connectOrCreate?: EstadosProductoCreateOrConnectWithoutProductosInput
    upsert?: EstadosProductoUpsertWithoutProductosInput
    connect?: EstadosProductoWhereUniqueInput
    update?: XOR<XOR<EstadosProductoUpdateToOneWithWhereWithoutProductosInput, EstadosProductoUpdateWithoutProductosInput>, EstadosProductoUncheckedUpdateWithoutProductosInput>
  }

  export type TransaccionesUpdateManyWithoutProductoNestedInput = {
    create?: XOR<TransaccionesCreateWithoutProductoInput, TransaccionesUncheckedCreateWithoutProductoInput> | TransaccionesCreateWithoutProductoInput[] | TransaccionesUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutProductoInput | TransaccionesCreateOrConnectWithoutProductoInput[]
    upsert?: TransaccionesUpsertWithWhereUniqueWithoutProductoInput | TransaccionesUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: TransaccionesCreateManyProductoInputEnvelope
    set?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    disconnect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    delete?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    update?: TransaccionesUpdateWithWhereUniqueWithoutProductoInput | TransaccionesUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: TransaccionesUpdateManyWithWhereWithoutProductoInput | TransaccionesUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: TransaccionesScalarWhereInput | TransaccionesScalarWhereInput[]
  }

  export type CarritoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<CarritoCreateWithoutProductoInput, CarritoUncheckedCreateWithoutProductoInput> | CarritoCreateWithoutProductoInput[] | CarritoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: CarritoCreateOrConnectWithoutProductoInput | CarritoCreateOrConnectWithoutProductoInput[]
    upsert?: CarritoUpsertWithWhereUniqueWithoutProductoInput | CarritoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: CarritoCreateManyProductoInputEnvelope
    set?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    disconnect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    delete?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    connect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    update?: CarritoUpdateWithWhereUniqueWithoutProductoInput | CarritoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: CarritoUpdateManyWithWhereWithoutProductoInput | CarritoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: CarritoScalarWhereInput | CarritoScalarWhereInput[]
  }

  export type ImagenesProductoUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ImagenesProductoCreateWithoutProductoInput, ImagenesProductoUncheckedCreateWithoutProductoInput> | ImagenesProductoCreateWithoutProductoInput[] | ImagenesProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ImagenesProductoCreateOrConnectWithoutProductoInput | ImagenesProductoCreateOrConnectWithoutProductoInput[]
    upsert?: ImagenesProductoUpsertWithWhereUniqueWithoutProductoInput | ImagenesProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ImagenesProductoCreateManyProductoInputEnvelope
    set?: ImagenesProductoWhereUniqueInput | ImagenesProductoWhereUniqueInput[]
    disconnect?: ImagenesProductoWhereUniqueInput | ImagenesProductoWhereUniqueInput[]
    delete?: ImagenesProductoWhereUniqueInput | ImagenesProductoWhereUniqueInput[]
    connect?: ImagenesProductoWhereUniqueInput | ImagenesProductoWhereUniqueInput[]
    update?: ImagenesProductoUpdateWithWhereUniqueWithoutProductoInput | ImagenesProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ImagenesProductoUpdateManyWithWhereWithoutProductoInput | ImagenesProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ImagenesProductoScalarWhereInput | ImagenesProductoScalarWhereInput[]
  }

  export type ReportesUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ReportesCreateWithoutProductoInput, ReportesUncheckedCreateWithoutProductoInput> | ReportesCreateWithoutProductoInput[] | ReportesUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutProductoInput | ReportesCreateOrConnectWithoutProductoInput[]
    upsert?: ReportesUpsertWithWhereUniqueWithoutProductoInput | ReportesUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ReportesCreateManyProductoInputEnvelope
    set?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    disconnect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    delete?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    update?: ReportesUpdateWithWhereUniqueWithoutProductoInput | ReportesUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ReportesUpdateManyWithWhereWithoutProductoInput | ReportesUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ReportesScalarWhereInput | ReportesScalarWhereInput[]
  }

  export type TransaccionesUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<TransaccionesCreateWithoutProductoInput, TransaccionesUncheckedCreateWithoutProductoInput> | TransaccionesCreateWithoutProductoInput[] | TransaccionesUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutProductoInput | TransaccionesCreateOrConnectWithoutProductoInput[]
    upsert?: TransaccionesUpsertWithWhereUniqueWithoutProductoInput | TransaccionesUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: TransaccionesCreateManyProductoInputEnvelope
    set?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    disconnect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    delete?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    update?: TransaccionesUpdateWithWhereUniqueWithoutProductoInput | TransaccionesUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: TransaccionesUpdateManyWithWhereWithoutProductoInput | TransaccionesUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: TransaccionesScalarWhereInput | TransaccionesScalarWhereInput[]
  }

  export type CarritoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<CarritoCreateWithoutProductoInput, CarritoUncheckedCreateWithoutProductoInput> | CarritoCreateWithoutProductoInput[] | CarritoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: CarritoCreateOrConnectWithoutProductoInput | CarritoCreateOrConnectWithoutProductoInput[]
    upsert?: CarritoUpsertWithWhereUniqueWithoutProductoInput | CarritoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: CarritoCreateManyProductoInputEnvelope
    set?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    disconnect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    delete?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    connect?: CarritoWhereUniqueInput | CarritoWhereUniqueInput[]
    update?: CarritoUpdateWithWhereUniqueWithoutProductoInput | CarritoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: CarritoUpdateManyWithWhereWithoutProductoInput | CarritoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: CarritoScalarWhereInput | CarritoScalarWhereInput[]
  }

  export type ImagenesProductoUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ImagenesProductoCreateWithoutProductoInput, ImagenesProductoUncheckedCreateWithoutProductoInput> | ImagenesProductoCreateWithoutProductoInput[] | ImagenesProductoUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ImagenesProductoCreateOrConnectWithoutProductoInput | ImagenesProductoCreateOrConnectWithoutProductoInput[]
    upsert?: ImagenesProductoUpsertWithWhereUniqueWithoutProductoInput | ImagenesProductoUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ImagenesProductoCreateManyProductoInputEnvelope
    set?: ImagenesProductoWhereUniqueInput | ImagenesProductoWhereUniqueInput[]
    disconnect?: ImagenesProductoWhereUniqueInput | ImagenesProductoWhereUniqueInput[]
    delete?: ImagenesProductoWhereUniqueInput | ImagenesProductoWhereUniqueInput[]
    connect?: ImagenesProductoWhereUniqueInput | ImagenesProductoWhereUniqueInput[]
    update?: ImagenesProductoUpdateWithWhereUniqueWithoutProductoInput | ImagenesProductoUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ImagenesProductoUpdateManyWithWhereWithoutProductoInput | ImagenesProductoUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ImagenesProductoScalarWhereInput | ImagenesProductoScalarWhereInput[]
  }

  export type ReportesUncheckedUpdateManyWithoutProductoNestedInput = {
    create?: XOR<ReportesCreateWithoutProductoInput, ReportesUncheckedCreateWithoutProductoInput> | ReportesCreateWithoutProductoInput[] | ReportesUncheckedCreateWithoutProductoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutProductoInput | ReportesCreateOrConnectWithoutProductoInput[]
    upsert?: ReportesUpsertWithWhereUniqueWithoutProductoInput | ReportesUpsertWithWhereUniqueWithoutProductoInput[]
    createMany?: ReportesCreateManyProductoInputEnvelope
    set?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    disconnect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    delete?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    update?: ReportesUpdateWithWhereUniqueWithoutProductoInput | ReportesUpdateWithWhereUniqueWithoutProductoInput[]
    updateMany?: ReportesUpdateManyWithWhereWithoutProductoInput | ReportesUpdateManyWithWhereWithoutProductoInput[]
    deleteMany?: ReportesScalarWhereInput | ReportesScalarWhereInput[]
  }

  export type ProductosCreateNestedOneWithoutImagenesInput = {
    create?: XOR<ProductosCreateWithoutImagenesInput, ProductosUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutImagenesInput
    connect?: ProductosWhereUniqueInput
  }

  export type NullableBytesFieldUpdateOperationsInput = {
    set?: Uint8Array | null
  }

  export type ProductosUpdateOneRequiredWithoutImagenesNestedInput = {
    create?: XOR<ProductosCreateWithoutImagenesInput, ProductosUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutImagenesInput
    upsert?: ProductosUpsertWithoutImagenesInput
    connect?: ProductosWhereUniqueInput
    update?: XOR<XOR<ProductosUpdateToOneWithWhereWithoutImagenesInput, ProductosUpdateWithoutImagenesInput>, ProductosUncheckedUpdateWithoutImagenesInput>
  }

  export type TransaccionesCreateNestedManyWithoutEstadoInput = {
    create?: XOR<TransaccionesCreateWithoutEstadoInput, TransaccionesUncheckedCreateWithoutEstadoInput> | TransaccionesCreateWithoutEstadoInput[] | TransaccionesUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutEstadoInput | TransaccionesCreateOrConnectWithoutEstadoInput[]
    createMany?: TransaccionesCreateManyEstadoInputEnvelope
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
  }

  export type TransaccionesUncheckedCreateNestedManyWithoutEstadoInput = {
    create?: XOR<TransaccionesCreateWithoutEstadoInput, TransaccionesUncheckedCreateWithoutEstadoInput> | TransaccionesCreateWithoutEstadoInput[] | TransaccionesUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutEstadoInput | TransaccionesCreateOrConnectWithoutEstadoInput[]
    createMany?: TransaccionesCreateManyEstadoInputEnvelope
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
  }

  export type TransaccionesUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<TransaccionesCreateWithoutEstadoInput, TransaccionesUncheckedCreateWithoutEstadoInput> | TransaccionesCreateWithoutEstadoInput[] | TransaccionesUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutEstadoInput | TransaccionesCreateOrConnectWithoutEstadoInput[]
    upsert?: TransaccionesUpsertWithWhereUniqueWithoutEstadoInput | TransaccionesUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: TransaccionesCreateManyEstadoInputEnvelope
    set?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    disconnect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    delete?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    update?: TransaccionesUpdateWithWhereUniqueWithoutEstadoInput | TransaccionesUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: TransaccionesUpdateManyWithWhereWithoutEstadoInput | TransaccionesUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: TransaccionesScalarWhereInput | TransaccionesScalarWhereInput[]
  }

  export type TransaccionesUncheckedUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<TransaccionesCreateWithoutEstadoInput, TransaccionesUncheckedCreateWithoutEstadoInput> | TransaccionesCreateWithoutEstadoInput[] | TransaccionesUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: TransaccionesCreateOrConnectWithoutEstadoInput | TransaccionesCreateOrConnectWithoutEstadoInput[]
    upsert?: TransaccionesUpsertWithWhereUniqueWithoutEstadoInput | TransaccionesUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: TransaccionesCreateManyEstadoInputEnvelope
    set?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    disconnect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    delete?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    connect?: TransaccionesWhereUniqueInput | TransaccionesWhereUniqueInput[]
    update?: TransaccionesUpdateWithWhereUniqueWithoutEstadoInput | TransaccionesUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: TransaccionesUpdateManyWithWhereWithoutEstadoInput | TransaccionesUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: TransaccionesScalarWhereInput | TransaccionesScalarWhereInput[]
  }

  export type ProductosCreateNestedOneWithoutTransaccionesInput = {
    create?: XOR<ProductosCreateWithoutTransaccionesInput, ProductosUncheckedCreateWithoutTransaccionesInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutTransaccionesInput
    connect?: ProductosWhereUniqueInput
  }

  export type CuentasCreateNestedOneWithoutTransaccionesCompraInput = {
    create?: XOR<CuentasCreateWithoutTransaccionesCompraInput, CuentasUncheckedCreateWithoutTransaccionesCompraInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutTransaccionesCompraInput
    connect?: CuentasWhereUniqueInput
  }

  export type CuentasCreateNestedOneWithoutTransaccionesVentaInput = {
    create?: XOR<CuentasCreateWithoutTransaccionesVentaInput, CuentasUncheckedCreateWithoutTransaccionesVentaInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutTransaccionesVentaInput
    connect?: CuentasWhereUniqueInput
  }

  export type EstadosTransaccionCreateNestedOneWithoutTransaccionesInput = {
    create?: XOR<EstadosTransaccionCreateWithoutTransaccionesInput, EstadosTransaccionUncheckedCreateWithoutTransaccionesInput>
    connectOrCreate?: EstadosTransaccionCreateOrConnectWithoutTransaccionesInput
    connect?: EstadosTransaccionWhereUniqueInput
  }

  export type CalificacionesCreateNestedManyWithoutTransaccionInput = {
    create?: XOR<CalificacionesCreateWithoutTransaccionInput, CalificacionesUncheckedCreateWithoutTransaccionInput> | CalificacionesCreateWithoutTransaccionInput[] | CalificacionesUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutTransaccionInput | CalificacionesCreateOrConnectWithoutTransaccionInput[]
    createMany?: CalificacionesCreateManyTransaccionInputEnvelope
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
  }

  export type CalificacionesUncheckedCreateNestedManyWithoutTransaccionInput = {
    create?: XOR<CalificacionesCreateWithoutTransaccionInput, CalificacionesUncheckedCreateWithoutTransaccionInput> | CalificacionesCreateWithoutTransaccionInput[] | CalificacionesUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutTransaccionInput | CalificacionesCreateOrConnectWithoutTransaccionInput[]
    createMany?: CalificacionesCreateManyTransaccionInputEnvelope
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
  }

  export type ProductosUpdateOneRequiredWithoutTransaccionesNestedInput = {
    create?: XOR<ProductosCreateWithoutTransaccionesInput, ProductosUncheckedCreateWithoutTransaccionesInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutTransaccionesInput
    upsert?: ProductosUpsertWithoutTransaccionesInput
    connect?: ProductosWhereUniqueInput
    update?: XOR<XOR<ProductosUpdateToOneWithWhereWithoutTransaccionesInput, ProductosUpdateWithoutTransaccionesInput>, ProductosUncheckedUpdateWithoutTransaccionesInput>
  }

  export type CuentasUpdateOneRequiredWithoutTransaccionesCompraNestedInput = {
    create?: XOR<CuentasCreateWithoutTransaccionesCompraInput, CuentasUncheckedCreateWithoutTransaccionesCompraInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutTransaccionesCompraInput
    upsert?: CuentasUpsertWithoutTransaccionesCompraInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutTransaccionesCompraInput, CuentasUpdateWithoutTransaccionesCompraInput>, CuentasUncheckedUpdateWithoutTransaccionesCompraInput>
  }

  export type CuentasUpdateOneRequiredWithoutTransaccionesVentaNestedInput = {
    create?: XOR<CuentasCreateWithoutTransaccionesVentaInput, CuentasUncheckedCreateWithoutTransaccionesVentaInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutTransaccionesVentaInput
    upsert?: CuentasUpsertWithoutTransaccionesVentaInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutTransaccionesVentaInput, CuentasUpdateWithoutTransaccionesVentaInput>, CuentasUncheckedUpdateWithoutTransaccionesVentaInput>
  }

  export type EstadosTransaccionUpdateOneRequiredWithoutTransaccionesNestedInput = {
    create?: XOR<EstadosTransaccionCreateWithoutTransaccionesInput, EstadosTransaccionUncheckedCreateWithoutTransaccionesInput>
    connectOrCreate?: EstadosTransaccionCreateOrConnectWithoutTransaccionesInput
    upsert?: EstadosTransaccionUpsertWithoutTransaccionesInput
    connect?: EstadosTransaccionWhereUniqueInput
    update?: XOR<XOR<EstadosTransaccionUpdateToOneWithWhereWithoutTransaccionesInput, EstadosTransaccionUpdateWithoutTransaccionesInput>, EstadosTransaccionUncheckedUpdateWithoutTransaccionesInput>
  }

  export type CalificacionesUpdateManyWithoutTransaccionNestedInput = {
    create?: XOR<CalificacionesCreateWithoutTransaccionInput, CalificacionesUncheckedCreateWithoutTransaccionInput> | CalificacionesCreateWithoutTransaccionInput[] | CalificacionesUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutTransaccionInput | CalificacionesCreateOrConnectWithoutTransaccionInput[]
    upsert?: CalificacionesUpsertWithWhereUniqueWithoutTransaccionInput | CalificacionesUpsertWithWhereUniqueWithoutTransaccionInput[]
    createMany?: CalificacionesCreateManyTransaccionInputEnvelope
    set?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    disconnect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    delete?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    update?: CalificacionesUpdateWithWhereUniqueWithoutTransaccionInput | CalificacionesUpdateWithWhereUniqueWithoutTransaccionInput[]
    updateMany?: CalificacionesUpdateManyWithWhereWithoutTransaccionInput | CalificacionesUpdateManyWithWhereWithoutTransaccionInput[]
    deleteMany?: CalificacionesScalarWhereInput | CalificacionesScalarWhereInput[]
  }

  export type CalificacionesUncheckedUpdateManyWithoutTransaccionNestedInput = {
    create?: XOR<CalificacionesCreateWithoutTransaccionInput, CalificacionesUncheckedCreateWithoutTransaccionInput> | CalificacionesCreateWithoutTransaccionInput[] | CalificacionesUncheckedCreateWithoutTransaccionInput[]
    connectOrCreate?: CalificacionesCreateOrConnectWithoutTransaccionInput | CalificacionesCreateOrConnectWithoutTransaccionInput[]
    upsert?: CalificacionesUpsertWithWhereUniqueWithoutTransaccionInput | CalificacionesUpsertWithWhereUniqueWithoutTransaccionInput[]
    createMany?: CalificacionesCreateManyTransaccionInputEnvelope
    set?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    disconnect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    delete?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    connect?: CalificacionesWhereUniqueInput | CalificacionesWhereUniqueInput[]
    update?: CalificacionesUpdateWithWhereUniqueWithoutTransaccionInput | CalificacionesUpdateWithWhereUniqueWithoutTransaccionInput[]
    updateMany?: CalificacionesUpdateManyWithWhereWithoutTransaccionInput | CalificacionesUpdateManyWithWhereWithoutTransaccionInput[]
    deleteMany?: CalificacionesScalarWhereInput | CalificacionesScalarWhereInput[]
  }

  export type TransaccionesCreateNestedOneWithoutCalificacionesInput = {
    create?: XOR<TransaccionesCreateWithoutCalificacionesInput, TransaccionesUncheckedCreateWithoutCalificacionesInput>
    connectOrCreate?: TransaccionesCreateOrConnectWithoutCalificacionesInput
    connect?: TransaccionesWhereUniqueInput
  }

  export type CuentasCreateNestedOneWithoutCalificacionesDadasInput = {
    create?: XOR<CuentasCreateWithoutCalificacionesDadasInput, CuentasUncheckedCreateWithoutCalificacionesDadasInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutCalificacionesDadasInput
    connect?: CuentasWhereUniqueInput
  }

  export type CuentasCreateNestedOneWithoutCalificacionesRecibidasInput = {
    create?: XOR<CuentasCreateWithoutCalificacionesRecibidasInput, CuentasUncheckedCreateWithoutCalificacionesRecibidasInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutCalificacionesRecibidasInput
    connect?: CuentasWhereUniqueInput
  }

  export type TransaccionesUpdateOneRequiredWithoutCalificacionesNestedInput = {
    create?: XOR<TransaccionesCreateWithoutCalificacionesInput, TransaccionesUncheckedCreateWithoutCalificacionesInput>
    connectOrCreate?: TransaccionesCreateOrConnectWithoutCalificacionesInput
    upsert?: TransaccionesUpsertWithoutCalificacionesInput
    connect?: TransaccionesWhereUniqueInput
    update?: XOR<XOR<TransaccionesUpdateToOneWithWhereWithoutCalificacionesInput, TransaccionesUpdateWithoutCalificacionesInput>, TransaccionesUncheckedUpdateWithoutCalificacionesInput>
  }

  export type CuentasUpdateOneRequiredWithoutCalificacionesDadasNestedInput = {
    create?: XOR<CuentasCreateWithoutCalificacionesDadasInput, CuentasUncheckedCreateWithoutCalificacionesDadasInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutCalificacionesDadasInput
    upsert?: CuentasUpsertWithoutCalificacionesDadasInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutCalificacionesDadasInput, CuentasUpdateWithoutCalificacionesDadasInput>, CuentasUncheckedUpdateWithoutCalificacionesDadasInput>
  }

  export type CuentasUpdateOneRequiredWithoutCalificacionesRecibidasNestedInput = {
    create?: XOR<CuentasCreateWithoutCalificacionesRecibidasInput, CuentasUncheckedCreateWithoutCalificacionesRecibidasInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutCalificacionesRecibidasInput
    upsert?: CuentasUpsertWithoutCalificacionesRecibidasInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutCalificacionesRecibidasInput, CuentasUpdateWithoutCalificacionesRecibidasInput>, CuentasUncheckedUpdateWithoutCalificacionesRecibidasInput>
  }

  export type CuentasCreateNestedOneWithoutCarritoInput = {
    create?: XOR<CuentasCreateWithoutCarritoInput, CuentasUncheckedCreateWithoutCarritoInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutCarritoInput
    connect?: CuentasWhereUniqueInput
  }

  export type ProductosCreateNestedOneWithoutCarritoInput = {
    create?: XOR<ProductosCreateWithoutCarritoInput, ProductosUncheckedCreateWithoutCarritoInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutCarritoInput
    connect?: ProductosWhereUniqueInput
  }

  export type CuentasUpdateOneRequiredWithoutCarritoNestedInput = {
    create?: XOR<CuentasCreateWithoutCarritoInput, CuentasUncheckedCreateWithoutCarritoInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutCarritoInput
    upsert?: CuentasUpsertWithoutCarritoInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutCarritoInput, CuentasUpdateWithoutCarritoInput>, CuentasUncheckedUpdateWithoutCarritoInput>
  }

  export type ProductosUpdateOneRequiredWithoutCarritoNestedInput = {
    create?: XOR<ProductosCreateWithoutCarritoInput, ProductosUncheckedCreateWithoutCarritoInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutCarritoInput
    upsert?: ProductosUpsertWithoutCarritoInput
    connect?: ProductosWhereUniqueInput
    update?: XOR<XOR<ProductosUpdateToOneWithWhereWithoutCarritoInput, ProductosUpdateWithoutCarritoInput>, ProductosUncheckedUpdateWithoutCarritoInput>
  }

  export type CuentasCreateNestedOneWithoutMensajesEnviadosInput = {
    create?: XOR<CuentasCreateWithoutMensajesEnviadosInput, CuentasUncheckedCreateWithoutMensajesEnviadosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutMensajesEnviadosInput
    connect?: CuentasWhereUniqueInput
  }

  export type CuentasCreateNestedOneWithoutMensajesRecibidosInput = {
    create?: XOR<CuentasCreateWithoutMensajesRecibidosInput, CuentasUncheckedCreateWithoutMensajesRecibidosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutMensajesRecibidosInput
    connect?: CuentasWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type CuentasUpdateOneRequiredWithoutMensajesEnviadosNestedInput = {
    create?: XOR<CuentasCreateWithoutMensajesEnviadosInput, CuentasUncheckedCreateWithoutMensajesEnviadosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutMensajesEnviadosInput
    upsert?: CuentasUpsertWithoutMensajesEnviadosInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutMensajesEnviadosInput, CuentasUpdateWithoutMensajesEnviadosInput>, CuentasUncheckedUpdateWithoutMensajesEnviadosInput>
  }

  export type CuentasUpdateOneRequiredWithoutMensajesRecibidosNestedInput = {
    create?: XOR<CuentasCreateWithoutMensajesRecibidosInput, CuentasUncheckedCreateWithoutMensajesRecibidosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutMensajesRecibidosInput
    upsert?: CuentasUpsertWithoutMensajesRecibidosInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutMensajesRecibidosInput, CuentasUpdateWithoutMensajesRecibidosInput>, CuentasUncheckedUpdateWithoutMensajesRecibidosInput>
  }

  export type ReportesCreateNestedManyWithoutEstadoInput = {
    create?: XOR<ReportesCreateWithoutEstadoInput, ReportesUncheckedCreateWithoutEstadoInput> | ReportesCreateWithoutEstadoInput[] | ReportesUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutEstadoInput | ReportesCreateOrConnectWithoutEstadoInput[]
    createMany?: ReportesCreateManyEstadoInputEnvelope
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
  }

  export type ReportesUncheckedCreateNestedManyWithoutEstadoInput = {
    create?: XOR<ReportesCreateWithoutEstadoInput, ReportesUncheckedCreateWithoutEstadoInput> | ReportesCreateWithoutEstadoInput[] | ReportesUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutEstadoInput | ReportesCreateOrConnectWithoutEstadoInput[]
    createMany?: ReportesCreateManyEstadoInputEnvelope
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
  }

  export type ReportesUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<ReportesCreateWithoutEstadoInput, ReportesUncheckedCreateWithoutEstadoInput> | ReportesCreateWithoutEstadoInput[] | ReportesUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutEstadoInput | ReportesCreateOrConnectWithoutEstadoInput[]
    upsert?: ReportesUpsertWithWhereUniqueWithoutEstadoInput | ReportesUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: ReportesCreateManyEstadoInputEnvelope
    set?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    disconnect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    delete?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    update?: ReportesUpdateWithWhereUniqueWithoutEstadoInput | ReportesUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: ReportesUpdateManyWithWhereWithoutEstadoInput | ReportesUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: ReportesScalarWhereInput | ReportesScalarWhereInput[]
  }

  export type ReportesUncheckedUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<ReportesCreateWithoutEstadoInput, ReportesUncheckedCreateWithoutEstadoInput> | ReportesCreateWithoutEstadoInput[] | ReportesUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: ReportesCreateOrConnectWithoutEstadoInput | ReportesCreateOrConnectWithoutEstadoInput[]
    upsert?: ReportesUpsertWithWhereUniqueWithoutEstadoInput | ReportesUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: ReportesCreateManyEstadoInputEnvelope
    set?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    disconnect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    delete?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    connect?: ReportesWhereUniqueInput | ReportesWhereUniqueInput[]
    update?: ReportesUpdateWithWhereUniqueWithoutEstadoInput | ReportesUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: ReportesUpdateManyWithWhereWithoutEstadoInput | ReportesUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: ReportesScalarWhereInput | ReportesScalarWhereInput[]
  }

  export type CuentasCreateNestedOneWithoutReportesInput = {
    create?: XOR<CuentasCreateWithoutReportesInput, CuentasUncheckedCreateWithoutReportesInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutReportesInput
    connect?: CuentasWhereUniqueInput
  }

  export type CuentasCreateNestedOneWithoutReportesRecibidosInput = {
    create?: XOR<CuentasCreateWithoutReportesRecibidosInput, CuentasUncheckedCreateWithoutReportesRecibidosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutReportesRecibidosInput
    connect?: CuentasWhereUniqueInput
  }

  export type ProductosCreateNestedOneWithoutReportesInput = {
    create?: XOR<ProductosCreateWithoutReportesInput, ProductosUncheckedCreateWithoutReportesInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutReportesInput
    connect?: ProductosWhereUniqueInput
  }

  export type EstadosReporteCreateNestedOneWithoutReportesInput = {
    create?: XOR<EstadosReporteCreateWithoutReportesInput, EstadosReporteUncheckedCreateWithoutReportesInput>
    connectOrCreate?: EstadosReporteCreateOrConnectWithoutReportesInput
    connect?: EstadosReporteWhereUniqueInput
  }

  export type CuentasUpdateOneRequiredWithoutReportesNestedInput = {
    create?: XOR<CuentasCreateWithoutReportesInput, CuentasUncheckedCreateWithoutReportesInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutReportesInput
    upsert?: CuentasUpsertWithoutReportesInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutReportesInput, CuentasUpdateWithoutReportesInput>, CuentasUncheckedUpdateWithoutReportesInput>
  }

  export type CuentasUpdateOneWithoutReportesRecibidosNestedInput = {
    create?: XOR<CuentasCreateWithoutReportesRecibidosInput, CuentasUncheckedCreateWithoutReportesRecibidosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutReportesRecibidosInput
    upsert?: CuentasUpsertWithoutReportesRecibidosInput
    disconnect?: CuentasWhereInput | boolean
    delete?: CuentasWhereInput | boolean
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutReportesRecibidosInput, CuentasUpdateWithoutReportesRecibidosInput>, CuentasUncheckedUpdateWithoutReportesRecibidosInput>
  }

  export type ProductosUpdateOneWithoutReportesNestedInput = {
    create?: XOR<ProductosCreateWithoutReportesInput, ProductosUncheckedCreateWithoutReportesInput>
    connectOrCreate?: ProductosCreateOrConnectWithoutReportesInput
    upsert?: ProductosUpsertWithoutReportesInput
    disconnect?: ProductosWhereInput | boolean
    delete?: ProductosWhereInput | boolean
    connect?: ProductosWhereUniqueInput
    update?: XOR<XOR<ProductosUpdateToOneWithWhereWithoutReportesInput, ProductosUpdateWithoutReportesInput>, ProductosUncheckedUpdateWithoutReportesInput>
  }

  export type EstadosReporteUpdateOneRequiredWithoutReportesNestedInput = {
    create?: XOR<EstadosReporteCreateWithoutReportesInput, EstadosReporteUncheckedCreateWithoutReportesInput>
    connectOrCreate?: EstadosReporteCreateOrConnectWithoutReportesInput
    upsert?: EstadosReporteUpsertWithoutReportesInput
    connect?: EstadosReporteWhereUniqueInput
    update?: XOR<XOR<EstadosReporteUpdateToOneWithWhereWithoutReportesInput, EstadosReporteUpdateWithoutReportesInput>, EstadosReporteUncheckedUpdateWithoutReportesInput>
  }

  export type CuentasCreateNestedOneWithoutActividadesInput = {
    create?: XOR<CuentasCreateWithoutActividadesInput, CuentasUncheckedCreateWithoutActividadesInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutActividadesInput
    connect?: CuentasWhereUniqueInput
  }

  export type CuentasUpdateOneRequiredWithoutActividadesNestedInput = {
    create?: XOR<CuentasCreateWithoutActividadesInput, CuentasUncheckedCreateWithoutActividadesInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutActividadesInput
    upsert?: CuentasUpsertWithoutActividadesInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutActividadesInput, CuentasUpdateWithoutActividadesInput>, CuentasUncheckedUpdateWithoutActividadesInput>
  }

  export type CuentasCreateNestedOneWithoutNotificacionesInput = {
    create?: XOR<CuentasCreateWithoutNotificacionesInput, CuentasUncheckedCreateWithoutNotificacionesInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutNotificacionesInput
    connect?: CuentasWhereUniqueInput
  }

  export type CuentasUpdateOneRequiredWithoutNotificacionesNestedInput = {
    create?: XOR<CuentasCreateWithoutNotificacionesInput, CuentasUncheckedCreateWithoutNotificacionesInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutNotificacionesInput
    upsert?: CuentasUpsertWithoutNotificacionesInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutNotificacionesInput, CuentasUpdateWithoutNotificacionesInput>, CuentasUncheckedUpdateWithoutNotificacionesInput>
  }

  export type CuentasCreateNestedOneWithoutPublicacionesInput = {
    create?: XOR<CuentasCreateWithoutPublicacionesInput, CuentasUncheckedCreateWithoutPublicacionesInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutPublicacionesInput
    connect?: CuentasWhereUniqueInput
  }

  export type FavoritosCreateNestedManyWithoutPublicacionInput = {
    create?: XOR<FavoritosCreateWithoutPublicacionInput, FavoritosUncheckedCreateWithoutPublicacionInput> | FavoritosCreateWithoutPublicacionInput[] | FavoritosUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutPublicacionInput | FavoritosCreateOrConnectWithoutPublicacionInput[]
    createMany?: FavoritosCreateManyPublicacionInputEnvelope
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
  }

  export type FavoritosUncheckedCreateNestedManyWithoutPublicacionInput = {
    create?: XOR<FavoritosCreateWithoutPublicacionInput, FavoritosUncheckedCreateWithoutPublicacionInput> | FavoritosCreateWithoutPublicacionInput[] | FavoritosUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutPublicacionInput | FavoritosCreateOrConnectWithoutPublicacionInput[]
    createMany?: FavoritosCreateManyPublicacionInputEnvelope
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
  }

  export type CuentasUpdateOneRequiredWithoutPublicacionesNestedInput = {
    create?: XOR<CuentasCreateWithoutPublicacionesInput, CuentasUncheckedCreateWithoutPublicacionesInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutPublicacionesInput
    upsert?: CuentasUpsertWithoutPublicacionesInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutPublicacionesInput, CuentasUpdateWithoutPublicacionesInput>, CuentasUncheckedUpdateWithoutPublicacionesInput>
  }

  export type FavoritosUpdateManyWithoutPublicacionNestedInput = {
    create?: XOR<FavoritosCreateWithoutPublicacionInput, FavoritosUncheckedCreateWithoutPublicacionInput> | FavoritosCreateWithoutPublicacionInput[] | FavoritosUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutPublicacionInput | FavoritosCreateOrConnectWithoutPublicacionInput[]
    upsert?: FavoritosUpsertWithWhereUniqueWithoutPublicacionInput | FavoritosUpsertWithWhereUniqueWithoutPublicacionInput[]
    createMany?: FavoritosCreateManyPublicacionInputEnvelope
    set?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    disconnect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    delete?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    update?: FavoritosUpdateWithWhereUniqueWithoutPublicacionInput | FavoritosUpdateWithWhereUniqueWithoutPublicacionInput[]
    updateMany?: FavoritosUpdateManyWithWhereWithoutPublicacionInput | FavoritosUpdateManyWithWhereWithoutPublicacionInput[]
    deleteMany?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
  }

  export type FavoritosUncheckedUpdateManyWithoutPublicacionNestedInput = {
    create?: XOR<FavoritosCreateWithoutPublicacionInput, FavoritosUncheckedCreateWithoutPublicacionInput> | FavoritosCreateWithoutPublicacionInput[] | FavoritosUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutPublicacionInput | FavoritosCreateOrConnectWithoutPublicacionInput[]
    upsert?: FavoritosUpsertWithWhereUniqueWithoutPublicacionInput | FavoritosUpsertWithWhereUniqueWithoutPublicacionInput[]
    createMany?: FavoritosCreateManyPublicacionInputEnvelope
    set?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    disconnect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    delete?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    update?: FavoritosUpdateWithWhereUniqueWithoutPublicacionInput | FavoritosUpdateWithWhereUniqueWithoutPublicacionInput[]
    updateMany?: FavoritosUpdateManyWithWhereWithoutPublicacionInput | FavoritosUpdateManyWithWhereWithoutPublicacionInput[]
    deleteMany?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
  }

  export type CuentasCreateNestedOneWithoutForosInput = {
    create?: XOR<CuentasCreateWithoutForosInput, CuentasUncheckedCreateWithoutForosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutForosInput
    connect?: CuentasWhereUniqueInput
  }

  export type PublicacionesForoCreateNestedManyWithoutForoInput = {
    create?: XOR<PublicacionesForoCreateWithoutForoInput, PublicacionesForoUncheckedCreateWithoutForoInput> | PublicacionesForoCreateWithoutForoInput[] | PublicacionesForoUncheckedCreateWithoutForoInput[]
    connectOrCreate?: PublicacionesForoCreateOrConnectWithoutForoInput | PublicacionesForoCreateOrConnectWithoutForoInput[]
    createMany?: PublicacionesForoCreateManyForoInputEnvelope
    connect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
  }

  export type PublicacionesForoUncheckedCreateNestedManyWithoutForoInput = {
    create?: XOR<PublicacionesForoCreateWithoutForoInput, PublicacionesForoUncheckedCreateWithoutForoInput> | PublicacionesForoCreateWithoutForoInput[] | PublicacionesForoUncheckedCreateWithoutForoInput[]
    connectOrCreate?: PublicacionesForoCreateOrConnectWithoutForoInput | PublicacionesForoCreateOrConnectWithoutForoInput[]
    createMany?: PublicacionesForoCreateManyForoInputEnvelope
    connect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
  }

  export type CuentasUpdateOneRequiredWithoutForosNestedInput = {
    create?: XOR<CuentasCreateWithoutForosInput, CuentasUncheckedCreateWithoutForosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutForosInput
    upsert?: CuentasUpsertWithoutForosInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutForosInput, CuentasUpdateWithoutForosInput>, CuentasUncheckedUpdateWithoutForosInput>
  }

  export type PublicacionesForoUpdateManyWithoutForoNestedInput = {
    create?: XOR<PublicacionesForoCreateWithoutForoInput, PublicacionesForoUncheckedCreateWithoutForoInput> | PublicacionesForoCreateWithoutForoInput[] | PublicacionesForoUncheckedCreateWithoutForoInput[]
    connectOrCreate?: PublicacionesForoCreateOrConnectWithoutForoInput | PublicacionesForoCreateOrConnectWithoutForoInput[]
    upsert?: PublicacionesForoUpsertWithWhereUniqueWithoutForoInput | PublicacionesForoUpsertWithWhereUniqueWithoutForoInput[]
    createMany?: PublicacionesForoCreateManyForoInputEnvelope
    set?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    disconnect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    delete?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    connect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    update?: PublicacionesForoUpdateWithWhereUniqueWithoutForoInput | PublicacionesForoUpdateWithWhereUniqueWithoutForoInput[]
    updateMany?: PublicacionesForoUpdateManyWithWhereWithoutForoInput | PublicacionesForoUpdateManyWithWhereWithoutForoInput[]
    deleteMany?: PublicacionesForoScalarWhereInput | PublicacionesForoScalarWhereInput[]
  }

  export type PublicacionesForoUncheckedUpdateManyWithoutForoNestedInput = {
    create?: XOR<PublicacionesForoCreateWithoutForoInput, PublicacionesForoUncheckedCreateWithoutForoInput> | PublicacionesForoCreateWithoutForoInput[] | PublicacionesForoUncheckedCreateWithoutForoInput[]
    connectOrCreate?: PublicacionesForoCreateOrConnectWithoutForoInput | PublicacionesForoCreateOrConnectWithoutForoInput[]
    upsert?: PublicacionesForoUpsertWithWhereUniqueWithoutForoInput | PublicacionesForoUpsertWithWhereUniqueWithoutForoInput[]
    createMany?: PublicacionesForoCreateManyForoInputEnvelope
    set?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    disconnect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    delete?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    connect?: PublicacionesForoWhereUniqueInput | PublicacionesForoWhereUniqueInput[]
    update?: PublicacionesForoUpdateWithWhereUniqueWithoutForoInput | PublicacionesForoUpdateWithWhereUniqueWithoutForoInput[]
    updateMany?: PublicacionesForoUpdateManyWithWhereWithoutForoInput | PublicacionesForoUpdateManyWithWhereWithoutForoInput[]
    deleteMany?: PublicacionesForoScalarWhereInput | PublicacionesForoScalarWhereInput[]
  }

  export type ForosCreateNestedOneWithoutPublicacionesInput = {
    create?: XOR<ForosCreateWithoutPublicacionesInput, ForosUncheckedCreateWithoutPublicacionesInput>
    connectOrCreate?: ForosCreateOrConnectWithoutPublicacionesInput
    connect?: ForosWhereUniqueInput
  }

  export type CuentasCreateNestedOneWithoutPublicacionesForoInput = {
    create?: XOR<CuentasCreateWithoutPublicacionesForoInput, CuentasUncheckedCreateWithoutPublicacionesForoInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutPublicacionesForoInput
    connect?: CuentasWhereUniqueInput
  }

  export type ComentariosPublicacionCreateNestedManyWithoutPublicacionInput = {
    create?: XOR<ComentariosPublicacionCreateWithoutPublicacionInput, ComentariosPublicacionUncheckedCreateWithoutPublicacionInput> | ComentariosPublicacionCreateWithoutPublicacionInput[] | ComentariosPublicacionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: ComentariosPublicacionCreateOrConnectWithoutPublicacionInput | ComentariosPublicacionCreateOrConnectWithoutPublicacionInput[]
    createMany?: ComentariosPublicacionCreateManyPublicacionInputEnvelope
    connect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
  }

  export type ComentariosPublicacionUncheckedCreateNestedManyWithoutPublicacionInput = {
    create?: XOR<ComentariosPublicacionCreateWithoutPublicacionInput, ComentariosPublicacionUncheckedCreateWithoutPublicacionInput> | ComentariosPublicacionCreateWithoutPublicacionInput[] | ComentariosPublicacionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: ComentariosPublicacionCreateOrConnectWithoutPublicacionInput | ComentariosPublicacionCreateOrConnectWithoutPublicacionInput[]
    createMany?: ComentariosPublicacionCreateManyPublicacionInputEnvelope
    connect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
  }

  export type ForosUpdateOneRequiredWithoutPublicacionesNestedInput = {
    create?: XOR<ForosCreateWithoutPublicacionesInput, ForosUncheckedCreateWithoutPublicacionesInput>
    connectOrCreate?: ForosCreateOrConnectWithoutPublicacionesInput
    upsert?: ForosUpsertWithoutPublicacionesInput
    connect?: ForosWhereUniqueInput
    update?: XOR<XOR<ForosUpdateToOneWithWhereWithoutPublicacionesInput, ForosUpdateWithoutPublicacionesInput>, ForosUncheckedUpdateWithoutPublicacionesInput>
  }

  export type CuentasUpdateOneRequiredWithoutPublicacionesForoNestedInput = {
    create?: XOR<CuentasCreateWithoutPublicacionesForoInput, CuentasUncheckedCreateWithoutPublicacionesForoInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutPublicacionesForoInput
    upsert?: CuentasUpsertWithoutPublicacionesForoInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutPublicacionesForoInput, CuentasUpdateWithoutPublicacionesForoInput>, CuentasUncheckedUpdateWithoutPublicacionesForoInput>
  }

  export type ComentariosPublicacionUpdateManyWithoutPublicacionNestedInput = {
    create?: XOR<ComentariosPublicacionCreateWithoutPublicacionInput, ComentariosPublicacionUncheckedCreateWithoutPublicacionInput> | ComentariosPublicacionCreateWithoutPublicacionInput[] | ComentariosPublicacionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: ComentariosPublicacionCreateOrConnectWithoutPublicacionInput | ComentariosPublicacionCreateOrConnectWithoutPublicacionInput[]
    upsert?: ComentariosPublicacionUpsertWithWhereUniqueWithoutPublicacionInput | ComentariosPublicacionUpsertWithWhereUniqueWithoutPublicacionInput[]
    createMany?: ComentariosPublicacionCreateManyPublicacionInputEnvelope
    set?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    disconnect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    delete?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    connect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    update?: ComentariosPublicacionUpdateWithWhereUniqueWithoutPublicacionInput | ComentariosPublicacionUpdateWithWhereUniqueWithoutPublicacionInput[]
    updateMany?: ComentariosPublicacionUpdateManyWithWhereWithoutPublicacionInput | ComentariosPublicacionUpdateManyWithWhereWithoutPublicacionInput[]
    deleteMany?: ComentariosPublicacionScalarWhereInput | ComentariosPublicacionScalarWhereInput[]
  }

  export type ComentariosPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput = {
    create?: XOR<ComentariosPublicacionCreateWithoutPublicacionInput, ComentariosPublicacionUncheckedCreateWithoutPublicacionInput> | ComentariosPublicacionCreateWithoutPublicacionInput[] | ComentariosPublicacionUncheckedCreateWithoutPublicacionInput[]
    connectOrCreate?: ComentariosPublicacionCreateOrConnectWithoutPublicacionInput | ComentariosPublicacionCreateOrConnectWithoutPublicacionInput[]
    upsert?: ComentariosPublicacionUpsertWithWhereUniqueWithoutPublicacionInput | ComentariosPublicacionUpsertWithWhereUniqueWithoutPublicacionInput[]
    createMany?: ComentariosPublicacionCreateManyPublicacionInputEnvelope
    set?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    disconnect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    delete?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    connect?: ComentariosPublicacionWhereUniqueInput | ComentariosPublicacionWhereUniqueInput[]
    update?: ComentariosPublicacionUpdateWithWhereUniqueWithoutPublicacionInput | ComentariosPublicacionUpdateWithWhereUniqueWithoutPublicacionInput[]
    updateMany?: ComentariosPublicacionUpdateManyWithWhereWithoutPublicacionInput | ComentariosPublicacionUpdateManyWithWhereWithoutPublicacionInput[]
    deleteMany?: ComentariosPublicacionScalarWhereInput | ComentariosPublicacionScalarWhereInput[]
  }

  export type PublicacionesForoCreateNestedOneWithoutComentariosInput = {
    create?: XOR<PublicacionesForoCreateWithoutComentariosInput, PublicacionesForoUncheckedCreateWithoutComentariosInput>
    connectOrCreate?: PublicacionesForoCreateOrConnectWithoutComentariosInput
    connect?: PublicacionesForoWhereUniqueInput
  }

  export type CuentasCreateNestedOneWithoutComentariosPublicacionInput = {
    create?: XOR<CuentasCreateWithoutComentariosPublicacionInput, CuentasUncheckedCreateWithoutComentariosPublicacionInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutComentariosPublicacionInput
    connect?: CuentasWhereUniqueInput
  }

  export type PublicacionesForoUpdateOneRequiredWithoutComentariosNestedInput = {
    create?: XOR<PublicacionesForoCreateWithoutComentariosInput, PublicacionesForoUncheckedCreateWithoutComentariosInput>
    connectOrCreate?: PublicacionesForoCreateOrConnectWithoutComentariosInput
    upsert?: PublicacionesForoUpsertWithoutComentariosInput
    connect?: PublicacionesForoWhereUniqueInput
    update?: XOR<XOR<PublicacionesForoUpdateToOneWithWhereWithoutComentariosInput, PublicacionesForoUpdateWithoutComentariosInput>, PublicacionesForoUncheckedUpdateWithoutComentariosInput>
  }

  export type CuentasUpdateOneRequiredWithoutComentariosPublicacionNestedInput = {
    create?: XOR<CuentasCreateWithoutComentariosPublicacionInput, CuentasUncheckedCreateWithoutComentariosPublicacionInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutComentariosPublicacionInput
    upsert?: CuentasUpsertWithoutComentariosPublicacionInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutComentariosPublicacionInput, CuentasUpdateWithoutComentariosPublicacionInput>, CuentasUncheckedUpdateWithoutComentariosPublicacionInput>
  }

  export type CuentasCreateNestedOneWithoutUbicacionesInput = {
    create?: XOR<CuentasCreateWithoutUbicacionesInput, CuentasUncheckedCreateWithoutUbicacionesInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutUbicacionesInput
    connect?: CuentasWhereUniqueInput
  }

  export type CuentasUpdateOneRequiredWithoutUbicacionesNestedInput = {
    create?: XOR<CuentasCreateWithoutUbicacionesInput, CuentasUncheckedCreateWithoutUbicacionesInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutUbicacionesInput
    upsert?: CuentasUpsertWithoutUbicacionesInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutUbicacionesInput, CuentasUpdateWithoutUbicacionesInput>, CuentasUncheckedUpdateWithoutUbicacionesInput>
  }

  export type CuentasCreateNestedOneWithoutResumenUsuarioInput = {
    create?: XOR<CuentasCreateWithoutResumenUsuarioInput, CuentasUncheckedCreateWithoutResumenUsuarioInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutResumenUsuarioInput
    connect?: CuentasWhereUniqueInput
  }

  export type CuentasUpdateOneRequiredWithoutResumenUsuarioNestedInput = {
    create?: XOR<CuentasCreateWithoutResumenUsuarioInput, CuentasUncheckedCreateWithoutResumenUsuarioInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutResumenUsuarioInput
    upsert?: CuentasUpsertWithoutResumenUsuarioInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutResumenUsuarioInput, CuentasUpdateWithoutResumenUsuarioInput>, CuentasUncheckedUpdateWithoutResumenUsuarioInput>
  }

  export type CuentasCreateNestedOneWithoutSiguiendoInput = {
    create?: XOR<CuentasCreateWithoutSiguiendoInput, CuentasUncheckedCreateWithoutSiguiendoInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutSiguiendoInput
    connect?: CuentasWhereUniqueInput
  }

  export type CuentasCreateNestedOneWithoutSeguidoresInput = {
    create?: XOR<CuentasCreateWithoutSeguidoresInput, CuentasUncheckedCreateWithoutSeguidoresInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutSeguidoresInput
    connect?: CuentasWhereUniqueInput
  }

  export type CuentasUpdateOneRequiredWithoutSiguiendoNestedInput = {
    create?: XOR<CuentasCreateWithoutSiguiendoInput, CuentasUncheckedCreateWithoutSiguiendoInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutSiguiendoInput
    upsert?: CuentasUpsertWithoutSiguiendoInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutSiguiendoInput, CuentasUpdateWithoutSiguiendoInput>, CuentasUncheckedUpdateWithoutSiguiendoInput>
  }

  export type CuentasUpdateOneRequiredWithoutSeguidoresNestedInput = {
    create?: XOR<CuentasCreateWithoutSeguidoresInput, CuentasUncheckedCreateWithoutSeguidoresInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutSeguidoresInput
    upsert?: CuentasUpsertWithoutSeguidoresInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutSeguidoresInput, CuentasUpdateWithoutSeguidoresInput>, CuentasUncheckedUpdateWithoutSeguidoresInput>
  }

  export type CuentasCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<CuentasCreateWithoutFavoritosInput, CuentasUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutFavoritosInput
    connect?: CuentasWhereUniqueInput
  }

  export type PublicacionesCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<PublicacionesCreateWithoutFavoritosInput, PublicacionesUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: PublicacionesCreateOrConnectWithoutFavoritosInput
    connect?: PublicacionesWhereUniqueInput
  }

  export type CuentasUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<CuentasCreateWithoutFavoritosInput, CuentasUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: CuentasCreateOrConnectWithoutFavoritosInput
    upsert?: CuentasUpsertWithoutFavoritosInput
    connect?: CuentasWhereUniqueInput
    update?: XOR<XOR<CuentasUpdateToOneWithWhereWithoutFavoritosInput, CuentasUpdateWithoutFavoritosInput>, CuentasUncheckedUpdateWithoutFavoritosInput>
  }

  export type PublicacionesUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<PublicacionesCreateWithoutFavoritosInput, PublicacionesUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: PublicacionesCreateOrConnectWithoutFavoritosInput
    upsert?: PublicacionesUpsertWithoutFavoritosInput
    connect?: PublicacionesWhereUniqueInput
    update?: XOR<XOR<PublicacionesUpdateToOneWithWhereWithoutFavoritosInput, PublicacionesUpdateWithoutFavoritosInput>, PublicacionesUncheckedUpdateWithoutFavoritosInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBytesNullableFilter<$PrismaModel = never> = {
    equals?: Uint8Array | BytesFieldRefInput<$PrismaModel> | null
    in?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Uint8Array | null
  }

  export type NestedBytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Uint8Array | BytesFieldRefInput<$PrismaModel> | null
    in?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    notIn?: Uint8Array[] | ListBytesFieldRefInput<$PrismaModel> | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Uint8Array | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type RolesCreateWithoutCuentasInput = {
    nombre: string
  }

  export type RolesUncheckedCreateWithoutCuentasInput = {
    id?: number
    nombre: string
  }

  export type RolesCreateOrConnectWithoutCuentasInput = {
    where: RolesWhereUniqueInput
    create: XOR<RolesCreateWithoutCuentasInput, RolesUncheckedCreateWithoutCuentasInput>
  }

  export type EstadosUsuarioCreateWithoutCuentasInput = {
    nombre: string
  }

  export type EstadosUsuarioUncheckedCreateWithoutCuentasInput = {
    id?: number
    nombre: string
  }

  export type EstadosUsuarioCreateOrConnectWithoutCuentasInput = {
    where: EstadosUsuarioWhereUniqueInput
    create: XOR<EstadosUsuarioCreateWithoutCuentasInput, EstadosUsuarioUncheckedCreateWithoutCuentasInput>
  }

  export type ProductosCreateWithoutVendedorInput = {
    nombre: string
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    categoria?: CategoriasCreateNestedOneWithoutProductosInput
    estado: EstadosProductoCreateNestedOneWithoutProductosInput
    transacciones?: TransaccionesCreateNestedManyWithoutProductoInput
    carrito?: CarritoCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoCreateNestedManyWithoutProductoInput
    reportes?: ReportesCreateNestedManyWithoutProductoInput
  }

  export type ProductosUncheckedCreateWithoutVendedorInput = {
    id?: number
    nombre: string
    categoriaId?: number | null
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    estadoId: number
    transacciones?: TransaccionesUncheckedCreateNestedManyWithoutProductoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoUncheckedCreateNestedManyWithoutProductoInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductosCreateOrConnectWithoutVendedorInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutVendedorInput, ProductosUncheckedCreateWithoutVendedorInput>
  }

  export type ProductosCreateManyVendedorInputEnvelope = {
    data: ProductosCreateManyVendedorInput | ProductosCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type TransaccionesCreateWithoutCompradorInput = {
    fecha?: Date | string
    producto: ProductosCreateNestedOneWithoutTransaccionesInput
    vendedor: CuentasCreateNestedOneWithoutTransaccionesVentaInput
    estado: EstadosTransaccionCreateNestedOneWithoutTransaccionesInput
    calificaciones?: CalificacionesCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionesUncheckedCreateWithoutCompradorInput = {
    id?: number
    productoId: number
    vendedorId: number
    fecha?: Date | string
    estadoId: number
    calificaciones?: CalificacionesUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionesCreateOrConnectWithoutCompradorInput = {
    where: TransaccionesWhereUniqueInput
    create: XOR<TransaccionesCreateWithoutCompradorInput, TransaccionesUncheckedCreateWithoutCompradorInput>
  }

  export type TransaccionesCreateManyCompradorInputEnvelope = {
    data: TransaccionesCreateManyCompradorInput | TransaccionesCreateManyCompradorInput[]
    skipDuplicates?: boolean
  }

  export type TransaccionesCreateWithoutVendedorInput = {
    fecha?: Date | string
    producto: ProductosCreateNestedOneWithoutTransaccionesInput
    comprador: CuentasCreateNestedOneWithoutTransaccionesCompraInput
    estado: EstadosTransaccionCreateNestedOneWithoutTransaccionesInput
    calificaciones?: CalificacionesCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionesUncheckedCreateWithoutVendedorInput = {
    id?: number
    productoId: number
    compradorId: number
    fecha?: Date | string
    estadoId: number
    calificaciones?: CalificacionesUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionesCreateOrConnectWithoutVendedorInput = {
    where: TransaccionesWhereUniqueInput
    create: XOR<TransaccionesCreateWithoutVendedorInput, TransaccionesUncheckedCreateWithoutVendedorInput>
  }

  export type TransaccionesCreateManyVendedorInputEnvelope = {
    data: TransaccionesCreateManyVendedorInput | TransaccionesCreateManyVendedorInput[]
    skipDuplicates?: boolean
  }

  export type CalificacionesCreateWithoutCalificadorInput = {
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
    transaccion: TransaccionesCreateNestedOneWithoutCalificacionesInput
    calificado: CuentasCreateNestedOneWithoutCalificacionesRecibidasInput
  }

  export type CalificacionesUncheckedCreateWithoutCalificadorInput = {
    id?: number
    transaccionId: number
    calificadoId: number
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
  }

  export type CalificacionesCreateOrConnectWithoutCalificadorInput = {
    where: CalificacionesWhereUniqueInput
    create: XOR<CalificacionesCreateWithoutCalificadorInput, CalificacionesUncheckedCreateWithoutCalificadorInput>
  }

  export type CalificacionesCreateManyCalificadorInputEnvelope = {
    data: CalificacionesCreateManyCalificadorInput | CalificacionesCreateManyCalificadorInput[]
    skipDuplicates?: boolean
  }

  export type CalificacionesCreateWithoutCalificadoInput = {
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
    transaccion: TransaccionesCreateNestedOneWithoutCalificacionesInput
    calificador: CuentasCreateNestedOneWithoutCalificacionesDadasInput
  }

  export type CalificacionesUncheckedCreateWithoutCalificadoInput = {
    id?: number
    transaccionId: number
    calificadorId: number
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
  }

  export type CalificacionesCreateOrConnectWithoutCalificadoInput = {
    where: CalificacionesWhereUniqueInput
    create: XOR<CalificacionesCreateWithoutCalificadoInput, CalificacionesUncheckedCreateWithoutCalificadoInput>
  }

  export type CalificacionesCreateManyCalificadoInputEnvelope = {
    data: CalificacionesCreateManyCalificadoInput | CalificacionesCreateManyCalificadoInput[]
    skipDuplicates?: boolean
  }

  export type CarritoCreateWithoutUsuarioInput = {
    cantidad: number
    producto: ProductosCreateNestedOneWithoutCarritoInput
  }

  export type CarritoUncheckedCreateWithoutUsuarioInput = {
    id?: number
    productoId: number
    cantidad: number
  }

  export type CarritoCreateOrConnectWithoutUsuarioInput = {
    where: CarritoWhereUniqueInput
    create: XOR<CarritoCreateWithoutUsuarioInput, CarritoUncheckedCreateWithoutUsuarioInput>
  }

  export type CarritoCreateManyUsuarioInputEnvelope = {
    data: CarritoCreateManyUsuarioInput | CarritoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ActividadUsuarioCreateWithoutUsuarioInput = {
    accion?: string | null
    detalles?: string | null
    fecha?: Date | string
  }

  export type ActividadUsuarioUncheckedCreateWithoutUsuarioInput = {
    id?: number
    accion?: string | null
    detalles?: string | null
    fecha?: Date | string
  }

  export type ActividadUsuarioCreateOrConnectWithoutUsuarioInput = {
    where: ActividadUsuarioWhereUniqueInput
    create: XOR<ActividadUsuarioCreateWithoutUsuarioInput, ActividadUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type ActividadUsuarioCreateManyUsuarioInputEnvelope = {
    data: ActividadUsuarioCreateManyUsuarioInput | ActividadUsuarioCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type MensajesCreateWithoutRemitenteInput = {
    contenido?: string | null
    fechaEnvio?: Date | string
    leido?: boolean
    destinatario: CuentasCreateNestedOneWithoutMensajesRecibidosInput
  }

  export type MensajesUncheckedCreateWithoutRemitenteInput = {
    id?: number
    destinatarioId: number
    contenido?: string | null
    fechaEnvio?: Date | string
    leido?: boolean
  }

  export type MensajesCreateOrConnectWithoutRemitenteInput = {
    where: MensajesWhereUniqueInput
    create: XOR<MensajesCreateWithoutRemitenteInput, MensajesUncheckedCreateWithoutRemitenteInput>
  }

  export type MensajesCreateManyRemitenteInputEnvelope = {
    data: MensajesCreateManyRemitenteInput | MensajesCreateManyRemitenteInput[]
    skipDuplicates?: boolean
  }

  export type MensajesCreateWithoutDestinatarioInput = {
    contenido?: string | null
    fechaEnvio?: Date | string
    leido?: boolean
    remitente: CuentasCreateNestedOneWithoutMensajesEnviadosInput
  }

  export type MensajesUncheckedCreateWithoutDestinatarioInput = {
    id?: number
    remitenteId: number
    contenido?: string | null
    fechaEnvio?: Date | string
    leido?: boolean
  }

  export type MensajesCreateOrConnectWithoutDestinatarioInput = {
    where: MensajesWhereUniqueInput
    create: XOR<MensajesCreateWithoutDestinatarioInput, MensajesUncheckedCreateWithoutDestinatarioInput>
  }

  export type MensajesCreateManyDestinatarioInputEnvelope = {
    data: MensajesCreateManyDestinatarioInput | MensajesCreateManyDestinatarioInput[]
    skipDuplicates?: boolean
  }

  export type ReportesCreateWithoutReportanteInput = {
    motivo?: string | null
    fecha?: Date | string
    usuarioReportado?: CuentasCreateNestedOneWithoutReportesRecibidosInput
    producto?: ProductosCreateNestedOneWithoutReportesInput
    estado: EstadosReporteCreateNestedOneWithoutReportesInput
  }

  export type ReportesUncheckedCreateWithoutReportanteInput = {
    id?: number
    usuarioReportadoId?: number | null
    productoId?: number | null
    motivo?: string | null
    fecha?: Date | string
    estadoId: number
  }

  export type ReportesCreateOrConnectWithoutReportanteInput = {
    where: ReportesWhereUniqueInput
    create: XOR<ReportesCreateWithoutReportanteInput, ReportesUncheckedCreateWithoutReportanteInput>
  }

  export type ReportesCreateManyReportanteInputEnvelope = {
    data: ReportesCreateManyReportanteInput | ReportesCreateManyReportanteInput[]
    skipDuplicates?: boolean
  }

  export type ReportesCreateWithoutUsuarioReportadoInput = {
    motivo?: string | null
    fecha?: Date | string
    reportante: CuentasCreateNestedOneWithoutReportesInput
    producto?: ProductosCreateNestedOneWithoutReportesInput
    estado: EstadosReporteCreateNestedOneWithoutReportesInput
  }

  export type ReportesUncheckedCreateWithoutUsuarioReportadoInput = {
    id?: number
    reportanteId: number
    productoId?: number | null
    motivo?: string | null
    fecha?: Date | string
    estadoId: number
  }

  export type ReportesCreateOrConnectWithoutUsuarioReportadoInput = {
    where: ReportesWhereUniqueInput
    create: XOR<ReportesCreateWithoutUsuarioReportadoInput, ReportesUncheckedCreateWithoutUsuarioReportadoInput>
  }

  export type ReportesCreateManyUsuarioReportadoInputEnvelope = {
    data: ReportesCreateManyUsuarioReportadoInput | ReportesCreateManyUsuarioReportadoInput[]
    skipDuplicates?: boolean
  }

  export type PublicacionesCreateWithoutUsuarioInput = {
    titulo?: string | null
    cuerpo?: string | null
    estado?: string | null
    fecha?: Date | string
    visto?: boolean
    favoritos?: FavoritosCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionesUncheckedCreateWithoutUsuarioInput = {
    id?: number
    titulo?: string | null
    cuerpo?: string | null
    estado?: string | null
    fecha?: Date | string
    visto?: boolean
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionesCreateOrConnectWithoutUsuarioInput = {
    where: PublicacionesWhereUniqueInput
    create: XOR<PublicacionesCreateWithoutUsuarioInput, PublicacionesUncheckedCreateWithoutUsuarioInput>
  }

  export type PublicacionesCreateManyUsuarioInputEnvelope = {
    data: PublicacionesCreateManyUsuarioInput | PublicacionesCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ForosCreateWithoutCreadorInput = {
    nombre: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    publicaciones?: PublicacionesForoCreateNestedManyWithoutForoInput
  }

  export type ForosUncheckedCreateWithoutCreadorInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    publicaciones?: PublicacionesForoUncheckedCreateNestedManyWithoutForoInput
  }

  export type ForosCreateOrConnectWithoutCreadorInput = {
    where: ForosWhereUniqueInput
    create: XOR<ForosCreateWithoutCreadorInput, ForosUncheckedCreateWithoutCreadorInput>
  }

  export type ForosCreateManyCreadorInputEnvelope = {
    data: ForosCreateManyCreadorInput | ForosCreateManyCreadorInput[]
    skipDuplicates?: boolean
  }

  export type PublicacionesForoCreateWithoutAutorInput = {
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
    foro: ForosCreateNestedOneWithoutPublicacionesInput
    comentarios?: ComentariosPublicacionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionesForoUncheckedCreateWithoutAutorInput = {
    id?: number
    foroId: number
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
    comentarios?: ComentariosPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionesForoCreateOrConnectWithoutAutorInput = {
    where: PublicacionesForoWhereUniqueInput
    create: XOR<PublicacionesForoCreateWithoutAutorInput, PublicacionesForoUncheckedCreateWithoutAutorInput>
  }

  export type PublicacionesForoCreateManyAutorInputEnvelope = {
    data: PublicacionesForoCreateManyAutorInput | PublicacionesForoCreateManyAutorInput[]
    skipDuplicates?: boolean
  }

  export type ComentariosPublicacionCreateWithoutAutorInput = {
    contenido?: string | null
    fecha?: Date | string
    publicacion: PublicacionesForoCreateNestedOneWithoutComentariosInput
  }

  export type ComentariosPublicacionUncheckedCreateWithoutAutorInput = {
    id?: number
    publicacionId: number
    contenido?: string | null
    fecha?: Date | string
  }

  export type ComentariosPublicacionCreateOrConnectWithoutAutorInput = {
    where: ComentariosPublicacionWhereUniqueInput
    create: XOR<ComentariosPublicacionCreateWithoutAutorInput, ComentariosPublicacionUncheckedCreateWithoutAutorInput>
  }

  export type ComentariosPublicacionCreateManyAutorInputEnvelope = {
    data: ComentariosPublicacionCreateManyAutorInput | ComentariosPublicacionCreateManyAutorInput[]
    skipDuplicates?: boolean
  }

  export type NotificacionesCreateWithoutUsuarioInput = {
    tipo?: string | null
    mensaje?: string | null
    leido?: boolean
    fecha?: Date | string
  }

  export type NotificacionesUncheckedCreateWithoutUsuarioInput = {
    id?: number
    tipo?: string | null
    mensaje?: string | null
    leido?: boolean
    fecha?: Date | string
  }

  export type NotificacionesCreateOrConnectWithoutUsuarioInput = {
    where: NotificacionesWhereUniqueInput
    create: XOR<NotificacionesCreateWithoutUsuarioInput, NotificacionesUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacionesCreateManyUsuarioInputEnvelope = {
    data: NotificacionesCreateManyUsuarioInput | NotificacionesCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type UbicacionesCreateWithoutUsuarioInput = {
    nombreLugar?: string | null
    descripcion?: string | null
  }

  export type UbicacionesUncheckedCreateWithoutUsuarioInput = {
    id?: number
    nombreLugar?: string | null
    descripcion?: string | null
  }

  export type UbicacionesCreateOrConnectWithoutUsuarioInput = {
    where: UbicacionesWhereUniqueInput
    create: XOR<UbicacionesCreateWithoutUsuarioInput, UbicacionesUncheckedCreateWithoutUsuarioInput>
  }

  export type UbicacionesCreateManyUsuarioInputEnvelope = {
    data: UbicacionesCreateManyUsuarioInput | UbicacionesCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type ResumenUsuarioCreateWithoutUsuarioInput = {
    totalProductos?: number
    totalVentas?: number
    totalCompras?: number
    promedioCalificacion?: Decimal | DecimalJsLike | number | string
  }

  export type ResumenUsuarioUncheckedCreateWithoutUsuarioInput = {
    totalProductos?: number
    totalVentas?: number
    totalCompras?: number
    promedioCalificacion?: Decimal | DecimalJsLike | number | string
  }

  export type ResumenUsuarioCreateOrConnectWithoutUsuarioInput = {
    where: ResumenUsuarioWhereUniqueInput
    create: XOR<ResumenUsuarioCreateWithoutUsuarioInput, ResumenUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type SeguidoresCreateWithoutUsuarioSigueInput = {
    fecha?: Date | string
    usuarioSeguido: CuentasCreateNestedOneWithoutSeguidoresInput
  }

  export type SeguidoresUncheckedCreateWithoutUsuarioSigueInput = {
    usuarioSeguidoId: number
    fecha?: Date | string
  }

  export type SeguidoresCreateOrConnectWithoutUsuarioSigueInput = {
    where: SeguidoresWhereUniqueInput
    create: XOR<SeguidoresCreateWithoutUsuarioSigueInput, SeguidoresUncheckedCreateWithoutUsuarioSigueInput>
  }

  export type SeguidoresCreateManyUsuarioSigueInputEnvelope = {
    data: SeguidoresCreateManyUsuarioSigueInput | SeguidoresCreateManyUsuarioSigueInput[]
    skipDuplicates?: boolean
  }

  export type SeguidoresCreateWithoutUsuarioSeguidoInput = {
    fecha?: Date | string
    usuarioSigue: CuentasCreateNestedOneWithoutSiguiendoInput
  }

  export type SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput = {
    usuarioSigueId: number
    fecha?: Date | string
  }

  export type SeguidoresCreateOrConnectWithoutUsuarioSeguidoInput = {
    where: SeguidoresWhereUniqueInput
    create: XOR<SeguidoresCreateWithoutUsuarioSeguidoInput, SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput>
  }

  export type SeguidoresCreateManyUsuarioSeguidoInputEnvelope = {
    data: SeguidoresCreateManyUsuarioSeguidoInput | SeguidoresCreateManyUsuarioSeguidoInput[]
    skipDuplicates?: boolean
  }

  export type FavoritosCreateWithoutUsuarioInput = {
    fecha?: Date | string
    publicacion: PublicacionesCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritosUncheckedCreateWithoutUsuarioInput = {
    id?: number
    publicacionId: number
    fecha?: Date | string
  }

  export type FavoritosCreateOrConnectWithoutUsuarioInput = {
    where: FavoritosWhereUniqueInput
    create: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput>
  }

  export type FavoritosCreateManyUsuarioInputEnvelope = {
    data: FavoritosCreateManyUsuarioInput | FavoritosCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type RolesUpsertWithoutCuentasInput = {
    update: XOR<RolesUpdateWithoutCuentasInput, RolesUncheckedUpdateWithoutCuentasInput>
    create: XOR<RolesCreateWithoutCuentasInput, RolesUncheckedCreateWithoutCuentasInput>
    where?: RolesWhereInput
  }

  export type RolesUpdateToOneWithWhereWithoutCuentasInput = {
    where?: RolesWhereInput
    data: XOR<RolesUpdateWithoutCuentasInput, RolesUncheckedUpdateWithoutCuentasInput>
  }

  export type RolesUpdateWithoutCuentasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type RolesUncheckedUpdateWithoutCuentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EstadosUsuarioUpsertWithoutCuentasInput = {
    update: XOR<EstadosUsuarioUpdateWithoutCuentasInput, EstadosUsuarioUncheckedUpdateWithoutCuentasInput>
    create: XOR<EstadosUsuarioCreateWithoutCuentasInput, EstadosUsuarioUncheckedCreateWithoutCuentasInput>
    where?: EstadosUsuarioWhereInput
  }

  export type EstadosUsuarioUpdateToOneWithWhereWithoutCuentasInput = {
    where?: EstadosUsuarioWhereInput
    data: XOR<EstadosUsuarioUpdateWithoutCuentasInput, EstadosUsuarioUncheckedUpdateWithoutCuentasInput>
  }

  export type EstadosUsuarioUpdateWithoutCuentasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EstadosUsuarioUncheckedUpdateWithoutCuentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProductosUpsertWithWhereUniqueWithoutVendedorInput = {
    where: ProductosWhereUniqueInput
    update: XOR<ProductosUpdateWithoutVendedorInput, ProductosUncheckedUpdateWithoutVendedorInput>
    create: XOR<ProductosCreateWithoutVendedorInput, ProductosUncheckedCreateWithoutVendedorInput>
  }

  export type ProductosUpdateWithWhereUniqueWithoutVendedorInput = {
    where: ProductosWhereUniqueInput
    data: XOR<ProductosUpdateWithoutVendedorInput, ProductosUncheckedUpdateWithoutVendedorInput>
  }

  export type ProductosUpdateManyWithWhereWithoutVendedorInput = {
    where: ProductosScalarWhereInput
    data: XOR<ProductosUpdateManyMutationInput, ProductosUncheckedUpdateManyWithoutVendedorInput>
  }

  export type ProductosScalarWhereInput = {
    AND?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
    OR?: ProductosScalarWhereInput[]
    NOT?: ProductosScalarWhereInput | ProductosScalarWhereInput[]
    id?: IntFilter<"Productos"> | number
    nombre?: StringFilter<"Productos"> | string
    categoriaId?: IntNullableFilter<"Productos"> | number | null
    vendedorId?: IntFilter<"Productos"> | number
    precioAnterior?: DecimalNullableFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    precioActual?: DecimalNullableFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    descripcion?: StringNullableFilter<"Productos"> | string | null
    calificacion?: DecimalNullableFilter<"Productos"> | Decimal | DecimalJsLike | number | string | null
    cantidad?: IntNullableFilter<"Productos"> | number | null
    fechaAgregado?: DateTimeFilter<"Productos"> | Date | string
    estadoId?: IntFilter<"Productos"> | number
  }

  export type TransaccionesUpsertWithWhereUniqueWithoutCompradorInput = {
    where: TransaccionesWhereUniqueInput
    update: XOR<TransaccionesUpdateWithoutCompradorInput, TransaccionesUncheckedUpdateWithoutCompradorInput>
    create: XOR<TransaccionesCreateWithoutCompradorInput, TransaccionesUncheckedCreateWithoutCompradorInput>
  }

  export type TransaccionesUpdateWithWhereUniqueWithoutCompradorInput = {
    where: TransaccionesWhereUniqueInput
    data: XOR<TransaccionesUpdateWithoutCompradorInput, TransaccionesUncheckedUpdateWithoutCompradorInput>
  }

  export type TransaccionesUpdateManyWithWhereWithoutCompradorInput = {
    where: TransaccionesScalarWhereInput
    data: XOR<TransaccionesUpdateManyMutationInput, TransaccionesUncheckedUpdateManyWithoutCompradorInput>
  }

  export type TransaccionesScalarWhereInput = {
    AND?: TransaccionesScalarWhereInput | TransaccionesScalarWhereInput[]
    OR?: TransaccionesScalarWhereInput[]
    NOT?: TransaccionesScalarWhereInput | TransaccionesScalarWhereInput[]
    id?: IntFilter<"Transacciones"> | number
    productoId?: IntFilter<"Transacciones"> | number
    compradorId?: IntFilter<"Transacciones"> | number
    vendedorId?: IntFilter<"Transacciones"> | number
    fecha?: DateTimeFilter<"Transacciones"> | Date | string
    estadoId?: IntFilter<"Transacciones"> | number
  }

  export type TransaccionesUpsertWithWhereUniqueWithoutVendedorInput = {
    where: TransaccionesWhereUniqueInput
    update: XOR<TransaccionesUpdateWithoutVendedorInput, TransaccionesUncheckedUpdateWithoutVendedorInput>
    create: XOR<TransaccionesCreateWithoutVendedorInput, TransaccionesUncheckedCreateWithoutVendedorInput>
  }

  export type TransaccionesUpdateWithWhereUniqueWithoutVendedorInput = {
    where: TransaccionesWhereUniqueInput
    data: XOR<TransaccionesUpdateWithoutVendedorInput, TransaccionesUncheckedUpdateWithoutVendedorInput>
  }

  export type TransaccionesUpdateManyWithWhereWithoutVendedorInput = {
    where: TransaccionesScalarWhereInput
    data: XOR<TransaccionesUpdateManyMutationInput, TransaccionesUncheckedUpdateManyWithoutVendedorInput>
  }

  export type CalificacionesUpsertWithWhereUniqueWithoutCalificadorInput = {
    where: CalificacionesWhereUniqueInput
    update: XOR<CalificacionesUpdateWithoutCalificadorInput, CalificacionesUncheckedUpdateWithoutCalificadorInput>
    create: XOR<CalificacionesCreateWithoutCalificadorInput, CalificacionesUncheckedCreateWithoutCalificadorInput>
  }

  export type CalificacionesUpdateWithWhereUniqueWithoutCalificadorInput = {
    where: CalificacionesWhereUniqueInput
    data: XOR<CalificacionesUpdateWithoutCalificadorInput, CalificacionesUncheckedUpdateWithoutCalificadorInput>
  }

  export type CalificacionesUpdateManyWithWhereWithoutCalificadorInput = {
    where: CalificacionesScalarWhereInput
    data: XOR<CalificacionesUpdateManyMutationInput, CalificacionesUncheckedUpdateManyWithoutCalificadorInput>
  }

  export type CalificacionesScalarWhereInput = {
    AND?: CalificacionesScalarWhereInput | CalificacionesScalarWhereInput[]
    OR?: CalificacionesScalarWhereInput[]
    NOT?: CalificacionesScalarWhereInput | CalificacionesScalarWhereInput[]
    id?: IntFilter<"Calificaciones"> | number
    transaccionId?: IntFilter<"Calificaciones"> | number
    calificadorId?: IntFilter<"Calificaciones"> | number
    calificadoId?: IntFilter<"Calificaciones"> | number
    puntuacion?: DecimalNullableFilter<"Calificaciones"> | Decimal | DecimalJsLike | number | string | null
    comentario?: StringNullableFilter<"Calificaciones"> | string | null
    fecha?: DateTimeFilter<"Calificaciones"> | Date | string
  }

  export type CalificacionesUpsertWithWhereUniqueWithoutCalificadoInput = {
    where: CalificacionesWhereUniqueInput
    update: XOR<CalificacionesUpdateWithoutCalificadoInput, CalificacionesUncheckedUpdateWithoutCalificadoInput>
    create: XOR<CalificacionesCreateWithoutCalificadoInput, CalificacionesUncheckedCreateWithoutCalificadoInput>
  }

  export type CalificacionesUpdateWithWhereUniqueWithoutCalificadoInput = {
    where: CalificacionesWhereUniqueInput
    data: XOR<CalificacionesUpdateWithoutCalificadoInput, CalificacionesUncheckedUpdateWithoutCalificadoInput>
  }

  export type CalificacionesUpdateManyWithWhereWithoutCalificadoInput = {
    where: CalificacionesScalarWhereInput
    data: XOR<CalificacionesUpdateManyMutationInput, CalificacionesUncheckedUpdateManyWithoutCalificadoInput>
  }

  export type CarritoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: CarritoWhereUniqueInput
    update: XOR<CarritoUpdateWithoutUsuarioInput, CarritoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<CarritoCreateWithoutUsuarioInput, CarritoUncheckedCreateWithoutUsuarioInput>
  }

  export type CarritoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: CarritoWhereUniqueInput
    data: XOR<CarritoUpdateWithoutUsuarioInput, CarritoUncheckedUpdateWithoutUsuarioInput>
  }

  export type CarritoUpdateManyWithWhereWithoutUsuarioInput = {
    where: CarritoScalarWhereInput
    data: XOR<CarritoUpdateManyMutationInput, CarritoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type CarritoScalarWhereInput = {
    AND?: CarritoScalarWhereInput | CarritoScalarWhereInput[]
    OR?: CarritoScalarWhereInput[]
    NOT?: CarritoScalarWhereInput | CarritoScalarWhereInput[]
    id?: IntFilter<"Carrito"> | number
    usuarioId?: IntFilter<"Carrito"> | number
    productoId?: IntFilter<"Carrito"> | number
    cantidad?: IntFilter<"Carrito"> | number
  }

  export type ActividadUsuarioUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: ActividadUsuarioWhereUniqueInput
    update: XOR<ActividadUsuarioUpdateWithoutUsuarioInput, ActividadUsuarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ActividadUsuarioCreateWithoutUsuarioInput, ActividadUsuarioUncheckedCreateWithoutUsuarioInput>
  }

  export type ActividadUsuarioUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: ActividadUsuarioWhereUniqueInput
    data: XOR<ActividadUsuarioUpdateWithoutUsuarioInput, ActividadUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type ActividadUsuarioUpdateManyWithWhereWithoutUsuarioInput = {
    where: ActividadUsuarioScalarWhereInput
    data: XOR<ActividadUsuarioUpdateManyMutationInput, ActividadUsuarioUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type ActividadUsuarioScalarWhereInput = {
    AND?: ActividadUsuarioScalarWhereInput | ActividadUsuarioScalarWhereInput[]
    OR?: ActividadUsuarioScalarWhereInput[]
    NOT?: ActividadUsuarioScalarWhereInput | ActividadUsuarioScalarWhereInput[]
    id?: IntFilter<"ActividadUsuario"> | number
    usuarioId?: IntFilter<"ActividadUsuario"> | number
    accion?: StringNullableFilter<"ActividadUsuario"> | string | null
    detalles?: StringNullableFilter<"ActividadUsuario"> | string | null
    fecha?: DateTimeFilter<"ActividadUsuario"> | Date | string
  }

  export type MensajesUpsertWithWhereUniqueWithoutRemitenteInput = {
    where: MensajesWhereUniqueInput
    update: XOR<MensajesUpdateWithoutRemitenteInput, MensajesUncheckedUpdateWithoutRemitenteInput>
    create: XOR<MensajesCreateWithoutRemitenteInput, MensajesUncheckedCreateWithoutRemitenteInput>
  }

  export type MensajesUpdateWithWhereUniqueWithoutRemitenteInput = {
    where: MensajesWhereUniqueInput
    data: XOR<MensajesUpdateWithoutRemitenteInput, MensajesUncheckedUpdateWithoutRemitenteInput>
  }

  export type MensajesUpdateManyWithWhereWithoutRemitenteInput = {
    where: MensajesScalarWhereInput
    data: XOR<MensajesUpdateManyMutationInput, MensajesUncheckedUpdateManyWithoutRemitenteInput>
  }

  export type MensajesScalarWhereInput = {
    AND?: MensajesScalarWhereInput | MensajesScalarWhereInput[]
    OR?: MensajesScalarWhereInput[]
    NOT?: MensajesScalarWhereInput | MensajesScalarWhereInput[]
    id?: IntFilter<"Mensajes"> | number
    remitenteId?: IntFilter<"Mensajes"> | number
    destinatarioId?: IntFilter<"Mensajes"> | number
    contenido?: StringNullableFilter<"Mensajes"> | string | null
    fechaEnvio?: DateTimeFilter<"Mensajes"> | Date | string
    leido?: BoolFilter<"Mensajes"> | boolean
  }

  export type MensajesUpsertWithWhereUniqueWithoutDestinatarioInput = {
    where: MensajesWhereUniqueInput
    update: XOR<MensajesUpdateWithoutDestinatarioInput, MensajesUncheckedUpdateWithoutDestinatarioInput>
    create: XOR<MensajesCreateWithoutDestinatarioInput, MensajesUncheckedCreateWithoutDestinatarioInput>
  }

  export type MensajesUpdateWithWhereUniqueWithoutDestinatarioInput = {
    where: MensajesWhereUniqueInput
    data: XOR<MensajesUpdateWithoutDestinatarioInput, MensajesUncheckedUpdateWithoutDestinatarioInput>
  }

  export type MensajesUpdateManyWithWhereWithoutDestinatarioInput = {
    where: MensajesScalarWhereInput
    data: XOR<MensajesUpdateManyMutationInput, MensajesUncheckedUpdateManyWithoutDestinatarioInput>
  }

  export type ReportesUpsertWithWhereUniqueWithoutReportanteInput = {
    where: ReportesWhereUniqueInput
    update: XOR<ReportesUpdateWithoutReportanteInput, ReportesUncheckedUpdateWithoutReportanteInput>
    create: XOR<ReportesCreateWithoutReportanteInput, ReportesUncheckedCreateWithoutReportanteInput>
  }

  export type ReportesUpdateWithWhereUniqueWithoutReportanteInput = {
    where: ReportesWhereUniqueInput
    data: XOR<ReportesUpdateWithoutReportanteInput, ReportesUncheckedUpdateWithoutReportanteInput>
  }

  export type ReportesUpdateManyWithWhereWithoutReportanteInput = {
    where: ReportesScalarWhereInput
    data: XOR<ReportesUpdateManyMutationInput, ReportesUncheckedUpdateManyWithoutReportanteInput>
  }

  export type ReportesScalarWhereInput = {
    AND?: ReportesScalarWhereInput | ReportesScalarWhereInput[]
    OR?: ReportesScalarWhereInput[]
    NOT?: ReportesScalarWhereInput | ReportesScalarWhereInput[]
    id?: IntFilter<"Reportes"> | number
    reportanteId?: IntFilter<"Reportes"> | number
    usuarioReportadoId?: IntNullableFilter<"Reportes"> | number | null
    productoId?: IntNullableFilter<"Reportes"> | number | null
    motivo?: StringNullableFilter<"Reportes"> | string | null
    fecha?: DateTimeFilter<"Reportes"> | Date | string
    estadoId?: IntFilter<"Reportes"> | number
  }

  export type ReportesUpsertWithWhereUniqueWithoutUsuarioReportadoInput = {
    where: ReportesWhereUniqueInput
    update: XOR<ReportesUpdateWithoutUsuarioReportadoInput, ReportesUncheckedUpdateWithoutUsuarioReportadoInput>
    create: XOR<ReportesCreateWithoutUsuarioReportadoInput, ReportesUncheckedCreateWithoutUsuarioReportadoInput>
  }

  export type ReportesUpdateWithWhereUniqueWithoutUsuarioReportadoInput = {
    where: ReportesWhereUniqueInput
    data: XOR<ReportesUpdateWithoutUsuarioReportadoInput, ReportesUncheckedUpdateWithoutUsuarioReportadoInput>
  }

  export type ReportesUpdateManyWithWhereWithoutUsuarioReportadoInput = {
    where: ReportesScalarWhereInput
    data: XOR<ReportesUpdateManyMutationInput, ReportesUncheckedUpdateManyWithoutUsuarioReportadoInput>
  }

  export type PublicacionesUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: PublicacionesWhereUniqueInput
    update: XOR<PublicacionesUpdateWithoutUsuarioInput, PublicacionesUncheckedUpdateWithoutUsuarioInput>
    create: XOR<PublicacionesCreateWithoutUsuarioInput, PublicacionesUncheckedCreateWithoutUsuarioInput>
  }

  export type PublicacionesUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: PublicacionesWhereUniqueInput
    data: XOR<PublicacionesUpdateWithoutUsuarioInput, PublicacionesUncheckedUpdateWithoutUsuarioInput>
  }

  export type PublicacionesUpdateManyWithWhereWithoutUsuarioInput = {
    where: PublicacionesScalarWhereInput
    data: XOR<PublicacionesUpdateManyMutationInput, PublicacionesUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type PublicacionesScalarWhereInput = {
    AND?: PublicacionesScalarWhereInput | PublicacionesScalarWhereInput[]
    OR?: PublicacionesScalarWhereInput[]
    NOT?: PublicacionesScalarWhereInput | PublicacionesScalarWhereInput[]
    id?: IntFilter<"Publicaciones"> | number
    titulo?: StringNullableFilter<"Publicaciones"> | string | null
    cuerpo?: StringNullableFilter<"Publicaciones"> | string | null
    usuarioId?: IntFilter<"Publicaciones"> | number
    estado?: StringNullableFilter<"Publicaciones"> | string | null
    fecha?: DateTimeFilter<"Publicaciones"> | Date | string
    visto?: BoolFilter<"Publicaciones"> | boolean
  }

  export type ForosUpsertWithWhereUniqueWithoutCreadorInput = {
    where: ForosWhereUniqueInput
    update: XOR<ForosUpdateWithoutCreadorInput, ForosUncheckedUpdateWithoutCreadorInput>
    create: XOR<ForosCreateWithoutCreadorInput, ForosUncheckedCreateWithoutCreadorInput>
  }

  export type ForosUpdateWithWhereUniqueWithoutCreadorInput = {
    where: ForosWhereUniqueInput
    data: XOR<ForosUpdateWithoutCreadorInput, ForosUncheckedUpdateWithoutCreadorInput>
  }

  export type ForosUpdateManyWithWhereWithoutCreadorInput = {
    where: ForosScalarWhereInput
    data: XOR<ForosUpdateManyMutationInput, ForosUncheckedUpdateManyWithoutCreadorInput>
  }

  export type ForosScalarWhereInput = {
    AND?: ForosScalarWhereInput | ForosScalarWhereInput[]
    OR?: ForosScalarWhereInput[]
    NOT?: ForosScalarWhereInput | ForosScalarWhereInput[]
    id?: IntFilter<"Foros"> | number
    nombre?: StringFilter<"Foros"> | string
    descripcion?: StringNullableFilter<"Foros"> | string | null
    creadorId?: IntFilter<"Foros"> | number
    fechaCreacion?: DateTimeFilter<"Foros"> | Date | string
  }

  export type PublicacionesForoUpsertWithWhereUniqueWithoutAutorInput = {
    where: PublicacionesForoWhereUniqueInput
    update: XOR<PublicacionesForoUpdateWithoutAutorInput, PublicacionesForoUncheckedUpdateWithoutAutorInput>
    create: XOR<PublicacionesForoCreateWithoutAutorInput, PublicacionesForoUncheckedCreateWithoutAutorInput>
  }

  export type PublicacionesForoUpdateWithWhereUniqueWithoutAutorInput = {
    where: PublicacionesForoWhereUniqueInput
    data: XOR<PublicacionesForoUpdateWithoutAutorInput, PublicacionesForoUncheckedUpdateWithoutAutorInput>
  }

  export type PublicacionesForoUpdateManyWithWhereWithoutAutorInput = {
    where: PublicacionesForoScalarWhereInput
    data: XOR<PublicacionesForoUpdateManyMutationInput, PublicacionesForoUncheckedUpdateManyWithoutAutorInput>
  }

  export type PublicacionesForoScalarWhereInput = {
    AND?: PublicacionesForoScalarWhereInput | PublicacionesForoScalarWhereInput[]
    OR?: PublicacionesForoScalarWhereInput[]
    NOT?: PublicacionesForoScalarWhereInput | PublicacionesForoScalarWhereInput[]
    id?: IntFilter<"PublicacionesForo"> | number
    foroId?: IntFilter<"PublicacionesForo"> | number
    autorId?: IntFilter<"PublicacionesForo"> | number
    titulo?: StringNullableFilter<"PublicacionesForo"> | string | null
    contenido?: StringNullableFilter<"PublicacionesForo"> | string | null
    fecha?: DateTimeFilter<"PublicacionesForo"> | Date | string
  }

  export type ComentariosPublicacionUpsertWithWhereUniqueWithoutAutorInput = {
    where: ComentariosPublicacionWhereUniqueInput
    update: XOR<ComentariosPublicacionUpdateWithoutAutorInput, ComentariosPublicacionUncheckedUpdateWithoutAutorInput>
    create: XOR<ComentariosPublicacionCreateWithoutAutorInput, ComentariosPublicacionUncheckedCreateWithoutAutorInput>
  }

  export type ComentariosPublicacionUpdateWithWhereUniqueWithoutAutorInput = {
    where: ComentariosPublicacionWhereUniqueInput
    data: XOR<ComentariosPublicacionUpdateWithoutAutorInput, ComentariosPublicacionUncheckedUpdateWithoutAutorInput>
  }

  export type ComentariosPublicacionUpdateManyWithWhereWithoutAutorInput = {
    where: ComentariosPublicacionScalarWhereInput
    data: XOR<ComentariosPublicacionUpdateManyMutationInput, ComentariosPublicacionUncheckedUpdateManyWithoutAutorInput>
  }

  export type ComentariosPublicacionScalarWhereInput = {
    AND?: ComentariosPublicacionScalarWhereInput | ComentariosPublicacionScalarWhereInput[]
    OR?: ComentariosPublicacionScalarWhereInput[]
    NOT?: ComentariosPublicacionScalarWhereInput | ComentariosPublicacionScalarWhereInput[]
    id?: IntFilter<"ComentariosPublicacion"> | number
    publicacionId?: IntFilter<"ComentariosPublicacion"> | number
    autorId?: IntFilter<"ComentariosPublicacion"> | number
    contenido?: StringNullableFilter<"ComentariosPublicacion"> | string | null
    fecha?: DateTimeFilter<"ComentariosPublicacion"> | Date | string
  }

  export type NotificacionesUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacionesWhereUniqueInput
    update: XOR<NotificacionesUpdateWithoutUsuarioInput, NotificacionesUncheckedUpdateWithoutUsuarioInput>
    create: XOR<NotificacionesCreateWithoutUsuarioInput, NotificacionesUncheckedCreateWithoutUsuarioInput>
  }

  export type NotificacionesUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: NotificacionesWhereUniqueInput
    data: XOR<NotificacionesUpdateWithoutUsuarioInput, NotificacionesUncheckedUpdateWithoutUsuarioInput>
  }

  export type NotificacionesUpdateManyWithWhereWithoutUsuarioInput = {
    where: NotificacionesScalarWhereInput
    data: XOR<NotificacionesUpdateManyMutationInput, NotificacionesUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type NotificacionesScalarWhereInput = {
    AND?: NotificacionesScalarWhereInput | NotificacionesScalarWhereInput[]
    OR?: NotificacionesScalarWhereInput[]
    NOT?: NotificacionesScalarWhereInput | NotificacionesScalarWhereInput[]
    id?: IntFilter<"Notificaciones"> | number
    usuarioId?: IntFilter<"Notificaciones"> | number
    tipo?: StringNullableFilter<"Notificaciones"> | string | null
    mensaje?: StringNullableFilter<"Notificaciones"> | string | null
    leido?: BoolFilter<"Notificaciones"> | boolean
    fecha?: DateTimeFilter<"Notificaciones"> | Date | string
  }

  export type UbicacionesUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: UbicacionesWhereUniqueInput
    update: XOR<UbicacionesUpdateWithoutUsuarioInput, UbicacionesUncheckedUpdateWithoutUsuarioInput>
    create: XOR<UbicacionesCreateWithoutUsuarioInput, UbicacionesUncheckedCreateWithoutUsuarioInput>
  }

  export type UbicacionesUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: UbicacionesWhereUniqueInput
    data: XOR<UbicacionesUpdateWithoutUsuarioInput, UbicacionesUncheckedUpdateWithoutUsuarioInput>
  }

  export type UbicacionesUpdateManyWithWhereWithoutUsuarioInput = {
    where: UbicacionesScalarWhereInput
    data: XOR<UbicacionesUpdateManyMutationInput, UbicacionesUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type UbicacionesScalarWhereInput = {
    AND?: UbicacionesScalarWhereInput | UbicacionesScalarWhereInput[]
    OR?: UbicacionesScalarWhereInput[]
    NOT?: UbicacionesScalarWhereInput | UbicacionesScalarWhereInput[]
    id?: IntFilter<"Ubicaciones"> | number
    usuarioId?: IntFilter<"Ubicaciones"> | number
    nombreLugar?: StringNullableFilter<"Ubicaciones"> | string | null
    descripcion?: StringNullableFilter<"Ubicaciones"> | string | null
  }

  export type ResumenUsuarioUpsertWithoutUsuarioInput = {
    update: XOR<ResumenUsuarioUpdateWithoutUsuarioInput, ResumenUsuarioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<ResumenUsuarioCreateWithoutUsuarioInput, ResumenUsuarioUncheckedCreateWithoutUsuarioInput>
    where?: ResumenUsuarioWhereInput
  }

  export type ResumenUsuarioUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: ResumenUsuarioWhereInput
    data: XOR<ResumenUsuarioUpdateWithoutUsuarioInput, ResumenUsuarioUncheckedUpdateWithoutUsuarioInput>
  }

  export type ResumenUsuarioUpdateWithoutUsuarioInput = {
    totalProductos?: IntFieldUpdateOperationsInput | number
    totalVentas?: IntFieldUpdateOperationsInput | number
    totalCompras?: IntFieldUpdateOperationsInput | number
    promedioCalificacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type ResumenUsuarioUncheckedUpdateWithoutUsuarioInput = {
    totalProductos?: IntFieldUpdateOperationsInput | number
    totalVentas?: IntFieldUpdateOperationsInput | number
    totalCompras?: IntFieldUpdateOperationsInput | number
    promedioCalificacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type SeguidoresUpsertWithWhereUniqueWithoutUsuarioSigueInput = {
    where: SeguidoresWhereUniqueInput
    update: XOR<SeguidoresUpdateWithoutUsuarioSigueInput, SeguidoresUncheckedUpdateWithoutUsuarioSigueInput>
    create: XOR<SeguidoresCreateWithoutUsuarioSigueInput, SeguidoresUncheckedCreateWithoutUsuarioSigueInput>
  }

  export type SeguidoresUpdateWithWhereUniqueWithoutUsuarioSigueInput = {
    where: SeguidoresWhereUniqueInput
    data: XOR<SeguidoresUpdateWithoutUsuarioSigueInput, SeguidoresUncheckedUpdateWithoutUsuarioSigueInput>
  }

  export type SeguidoresUpdateManyWithWhereWithoutUsuarioSigueInput = {
    where: SeguidoresScalarWhereInput
    data: XOR<SeguidoresUpdateManyMutationInput, SeguidoresUncheckedUpdateManyWithoutUsuarioSigueInput>
  }

  export type SeguidoresScalarWhereInput = {
    AND?: SeguidoresScalarWhereInput | SeguidoresScalarWhereInput[]
    OR?: SeguidoresScalarWhereInput[]
    NOT?: SeguidoresScalarWhereInput | SeguidoresScalarWhereInput[]
    usuarioSigueId?: IntFilter<"Seguidores"> | number
    usuarioSeguidoId?: IntFilter<"Seguidores"> | number
    fecha?: DateTimeFilter<"Seguidores"> | Date | string
  }

  export type SeguidoresUpsertWithWhereUniqueWithoutUsuarioSeguidoInput = {
    where: SeguidoresWhereUniqueInput
    update: XOR<SeguidoresUpdateWithoutUsuarioSeguidoInput, SeguidoresUncheckedUpdateWithoutUsuarioSeguidoInput>
    create: XOR<SeguidoresCreateWithoutUsuarioSeguidoInput, SeguidoresUncheckedCreateWithoutUsuarioSeguidoInput>
  }

  export type SeguidoresUpdateWithWhereUniqueWithoutUsuarioSeguidoInput = {
    where: SeguidoresWhereUniqueInput
    data: XOR<SeguidoresUpdateWithoutUsuarioSeguidoInput, SeguidoresUncheckedUpdateWithoutUsuarioSeguidoInput>
  }

  export type SeguidoresUpdateManyWithWhereWithoutUsuarioSeguidoInput = {
    where: SeguidoresScalarWhereInput
    data: XOR<SeguidoresUpdateManyMutationInput, SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoInput>
  }

  export type FavoritosUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: FavoritosWhereUniqueInput
    update: XOR<FavoritosUpdateWithoutUsuarioInput, FavoritosUncheckedUpdateWithoutUsuarioInput>
    create: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput>
  }

  export type FavoritosUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: FavoritosWhereUniqueInput
    data: XOR<FavoritosUpdateWithoutUsuarioInput, FavoritosUncheckedUpdateWithoutUsuarioInput>
  }

  export type FavoritosUpdateManyWithWhereWithoutUsuarioInput = {
    where: FavoritosScalarWhereInput
    data: XOR<FavoritosUpdateManyMutationInput, FavoritosUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type FavoritosScalarWhereInput = {
    AND?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
    OR?: FavoritosScalarWhereInput[]
    NOT?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
    id?: IntFilter<"Favoritos"> | number
    usuarioId?: IntFilter<"Favoritos"> | number
    publicacionId?: IntFilter<"Favoritos"> | number
    fecha?: DateTimeFilter<"Favoritos"> | Date | string
  }

  export type CuentasCreateWithoutRolInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutRolInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutRolInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutRolInput, CuentasUncheckedCreateWithoutRolInput>
  }

  export type CuentasCreateManyRolInputEnvelope = {
    data: CuentasCreateManyRolInput | CuentasCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type CuentasUpsertWithWhereUniqueWithoutRolInput = {
    where: CuentasWhereUniqueInput
    update: XOR<CuentasUpdateWithoutRolInput, CuentasUncheckedUpdateWithoutRolInput>
    create: XOR<CuentasCreateWithoutRolInput, CuentasUncheckedCreateWithoutRolInput>
  }

  export type CuentasUpdateWithWhereUniqueWithoutRolInput = {
    where: CuentasWhereUniqueInput
    data: XOR<CuentasUpdateWithoutRolInput, CuentasUncheckedUpdateWithoutRolInput>
  }

  export type CuentasUpdateManyWithWhereWithoutRolInput = {
    where: CuentasScalarWhereInput
    data: XOR<CuentasUpdateManyMutationInput, CuentasUncheckedUpdateManyWithoutRolInput>
  }

  export type CuentasScalarWhereInput = {
    AND?: CuentasScalarWhereInput | CuentasScalarWhereInput[]
    OR?: CuentasScalarWhereInput[]
    NOT?: CuentasScalarWhereInput | CuentasScalarWhereInput[]
    id?: IntFilter<"Cuentas"> | number
    nombre?: StringFilter<"Cuentas"> | string
    apellido?: StringNullableFilter<"Cuentas"> | string | null
    correo?: StringFilter<"Cuentas"> | string
    usuario?: StringFilter<"Cuentas"> | string
    contrasena?: StringFilter<"Cuentas"> | string
    rolId?: IntFilter<"Cuentas"> | number
    estadoId?: IntFilter<"Cuentas"> | number
    fechaRegistro?: DateTimeFilter<"Cuentas"> | Date | string
    campus?: StringNullableFilter<"Cuentas"> | string | null
    reputacion?: DecimalFilter<"Cuentas"> | Decimal | DecimalJsLike | number | string
  }

  export type CuentasCreateWithoutEstadoInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutEstadoInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutEstadoInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutEstadoInput, CuentasUncheckedCreateWithoutEstadoInput>
  }

  export type CuentasCreateManyEstadoInputEnvelope = {
    data: CuentasCreateManyEstadoInput | CuentasCreateManyEstadoInput[]
    skipDuplicates?: boolean
  }

  export type CuentasUpsertWithWhereUniqueWithoutEstadoInput = {
    where: CuentasWhereUniqueInput
    update: XOR<CuentasUpdateWithoutEstadoInput, CuentasUncheckedUpdateWithoutEstadoInput>
    create: XOR<CuentasCreateWithoutEstadoInput, CuentasUncheckedCreateWithoutEstadoInput>
  }

  export type CuentasUpdateWithWhereUniqueWithoutEstadoInput = {
    where: CuentasWhereUniqueInput
    data: XOR<CuentasUpdateWithoutEstadoInput, CuentasUncheckedUpdateWithoutEstadoInput>
  }

  export type CuentasUpdateManyWithWhereWithoutEstadoInput = {
    where: CuentasScalarWhereInput
    data: XOR<CuentasUpdateManyMutationInput, CuentasUncheckedUpdateManyWithoutEstadoInput>
  }

  export type CategoriasCreateWithoutSubcategoriasInput = {
    nombre: string
    categoriaPadre?: CategoriasCreateNestedOneWithoutSubcategoriasInput
    productos?: ProductosCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriasUncheckedCreateWithoutSubcategoriasInput = {
    id?: number
    nombre: string
    categoriaPadreId?: number | null
    productos?: ProductosUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriasCreateOrConnectWithoutSubcategoriasInput = {
    where: CategoriasWhereUniqueInput
    create: XOR<CategoriasCreateWithoutSubcategoriasInput, CategoriasUncheckedCreateWithoutSubcategoriasInput>
  }

  export type CategoriasCreateWithoutCategoriaPadreInput = {
    nombre: string
    subcategorias?: CategoriasCreateNestedManyWithoutCategoriaPadreInput
    productos?: ProductosCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriasUncheckedCreateWithoutCategoriaPadreInput = {
    id?: number
    nombre: string
    subcategorias?: CategoriasUncheckedCreateNestedManyWithoutCategoriaPadreInput
    productos?: ProductosUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type CategoriasCreateOrConnectWithoutCategoriaPadreInput = {
    where: CategoriasWhereUniqueInput
    create: XOR<CategoriasCreateWithoutCategoriaPadreInput, CategoriasUncheckedCreateWithoutCategoriaPadreInput>
  }

  export type CategoriasCreateManyCategoriaPadreInputEnvelope = {
    data: CategoriasCreateManyCategoriaPadreInput | CategoriasCreateManyCategoriaPadreInput[]
    skipDuplicates?: boolean
  }

  export type ProductosCreateWithoutCategoriaInput = {
    nombre: string
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    vendedor: CuentasCreateNestedOneWithoutProductosInput
    estado: EstadosProductoCreateNestedOneWithoutProductosInput
    transacciones?: TransaccionesCreateNestedManyWithoutProductoInput
    carrito?: CarritoCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoCreateNestedManyWithoutProductoInput
    reportes?: ReportesCreateNestedManyWithoutProductoInput
  }

  export type ProductosUncheckedCreateWithoutCategoriaInput = {
    id?: number
    nombre: string
    vendedorId: number
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    estadoId: number
    transacciones?: TransaccionesUncheckedCreateNestedManyWithoutProductoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoUncheckedCreateNestedManyWithoutProductoInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductosCreateOrConnectWithoutCategoriaInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutCategoriaInput, ProductosUncheckedCreateWithoutCategoriaInput>
  }

  export type ProductosCreateManyCategoriaInputEnvelope = {
    data: ProductosCreateManyCategoriaInput | ProductosCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type CategoriasUpsertWithoutSubcategoriasInput = {
    update: XOR<CategoriasUpdateWithoutSubcategoriasInput, CategoriasUncheckedUpdateWithoutSubcategoriasInput>
    create: XOR<CategoriasCreateWithoutSubcategoriasInput, CategoriasUncheckedCreateWithoutSubcategoriasInput>
    where?: CategoriasWhereInput
  }

  export type CategoriasUpdateToOneWithWhereWithoutSubcategoriasInput = {
    where?: CategoriasWhereInput
    data: XOR<CategoriasUpdateWithoutSubcategoriasInput, CategoriasUncheckedUpdateWithoutSubcategoriasInput>
  }

  export type CategoriasUpdateWithoutSubcategoriasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaPadre?: CategoriasUpdateOneWithoutSubcategoriasNestedInput
    productos?: ProductosUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriasUncheckedUpdateWithoutSubcategoriasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaPadreId?: NullableIntFieldUpdateOperationsInput | number | null
    productos?: ProductosUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriasUpsertWithWhereUniqueWithoutCategoriaPadreInput = {
    where: CategoriasWhereUniqueInput
    update: XOR<CategoriasUpdateWithoutCategoriaPadreInput, CategoriasUncheckedUpdateWithoutCategoriaPadreInput>
    create: XOR<CategoriasCreateWithoutCategoriaPadreInput, CategoriasUncheckedCreateWithoutCategoriaPadreInput>
  }

  export type CategoriasUpdateWithWhereUniqueWithoutCategoriaPadreInput = {
    where: CategoriasWhereUniqueInput
    data: XOR<CategoriasUpdateWithoutCategoriaPadreInput, CategoriasUncheckedUpdateWithoutCategoriaPadreInput>
  }

  export type CategoriasUpdateManyWithWhereWithoutCategoriaPadreInput = {
    where: CategoriasScalarWhereInput
    data: XOR<CategoriasUpdateManyMutationInput, CategoriasUncheckedUpdateManyWithoutCategoriaPadreInput>
  }

  export type CategoriasScalarWhereInput = {
    AND?: CategoriasScalarWhereInput | CategoriasScalarWhereInput[]
    OR?: CategoriasScalarWhereInput[]
    NOT?: CategoriasScalarWhereInput | CategoriasScalarWhereInput[]
    id?: IntFilter<"Categorias"> | number
    nombre?: StringFilter<"Categorias"> | string
    categoriaPadreId?: IntNullableFilter<"Categorias"> | number | null
  }

  export type ProductosUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: ProductosWhereUniqueInput
    update: XOR<ProductosUpdateWithoutCategoriaInput, ProductosUncheckedUpdateWithoutCategoriaInput>
    create: XOR<ProductosCreateWithoutCategoriaInput, ProductosUncheckedCreateWithoutCategoriaInput>
  }

  export type ProductosUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: ProductosWhereUniqueInput
    data: XOR<ProductosUpdateWithoutCategoriaInput, ProductosUncheckedUpdateWithoutCategoriaInput>
  }

  export type ProductosUpdateManyWithWhereWithoutCategoriaInput = {
    where: ProductosScalarWhereInput
    data: XOR<ProductosUpdateManyMutationInput, ProductosUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type ProductosCreateWithoutEstadoInput = {
    nombre: string
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    categoria?: CategoriasCreateNestedOneWithoutProductosInput
    vendedor: CuentasCreateNestedOneWithoutProductosInput
    transacciones?: TransaccionesCreateNestedManyWithoutProductoInput
    carrito?: CarritoCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoCreateNestedManyWithoutProductoInput
    reportes?: ReportesCreateNestedManyWithoutProductoInput
  }

  export type ProductosUncheckedCreateWithoutEstadoInput = {
    id?: number
    nombre: string
    categoriaId?: number | null
    vendedorId: number
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    transacciones?: TransaccionesUncheckedCreateNestedManyWithoutProductoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoUncheckedCreateNestedManyWithoutProductoInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductosCreateOrConnectWithoutEstadoInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutEstadoInput, ProductosUncheckedCreateWithoutEstadoInput>
  }

  export type ProductosCreateManyEstadoInputEnvelope = {
    data: ProductosCreateManyEstadoInput | ProductosCreateManyEstadoInput[]
    skipDuplicates?: boolean
  }

  export type ProductosUpsertWithWhereUniqueWithoutEstadoInput = {
    where: ProductosWhereUniqueInput
    update: XOR<ProductosUpdateWithoutEstadoInput, ProductosUncheckedUpdateWithoutEstadoInput>
    create: XOR<ProductosCreateWithoutEstadoInput, ProductosUncheckedCreateWithoutEstadoInput>
  }

  export type ProductosUpdateWithWhereUniqueWithoutEstadoInput = {
    where: ProductosWhereUniqueInput
    data: XOR<ProductosUpdateWithoutEstadoInput, ProductosUncheckedUpdateWithoutEstadoInput>
  }

  export type ProductosUpdateManyWithWhereWithoutEstadoInput = {
    where: ProductosScalarWhereInput
    data: XOR<ProductosUpdateManyMutationInput, ProductosUncheckedUpdateManyWithoutEstadoInput>
  }

  export type CategoriasCreateWithoutProductosInput = {
    nombre: string
    categoriaPadre?: CategoriasCreateNestedOneWithoutSubcategoriasInput
    subcategorias?: CategoriasCreateNestedManyWithoutCategoriaPadreInput
  }

  export type CategoriasUncheckedCreateWithoutProductosInput = {
    id?: number
    nombre: string
    categoriaPadreId?: number | null
    subcategorias?: CategoriasUncheckedCreateNestedManyWithoutCategoriaPadreInput
  }

  export type CategoriasCreateOrConnectWithoutProductosInput = {
    where: CategoriasWhereUniqueInput
    create: XOR<CategoriasCreateWithoutProductosInput, CategoriasUncheckedCreateWithoutProductosInput>
  }

  export type CuentasCreateWithoutProductosInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutProductosInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutProductosInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutProductosInput, CuentasUncheckedCreateWithoutProductosInput>
  }

  export type EstadosProductoCreateWithoutProductosInput = {
    nombre: string
  }

  export type EstadosProductoUncheckedCreateWithoutProductosInput = {
    id?: number
    nombre: string
  }

  export type EstadosProductoCreateOrConnectWithoutProductosInput = {
    where: EstadosProductoWhereUniqueInput
    create: XOR<EstadosProductoCreateWithoutProductosInput, EstadosProductoUncheckedCreateWithoutProductosInput>
  }

  export type TransaccionesCreateWithoutProductoInput = {
    fecha?: Date | string
    comprador: CuentasCreateNestedOneWithoutTransaccionesCompraInput
    vendedor: CuentasCreateNestedOneWithoutTransaccionesVentaInput
    estado: EstadosTransaccionCreateNestedOneWithoutTransaccionesInput
    calificaciones?: CalificacionesCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionesUncheckedCreateWithoutProductoInput = {
    id?: number
    compradorId: number
    vendedorId: number
    fecha?: Date | string
    estadoId: number
    calificaciones?: CalificacionesUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionesCreateOrConnectWithoutProductoInput = {
    where: TransaccionesWhereUniqueInput
    create: XOR<TransaccionesCreateWithoutProductoInput, TransaccionesUncheckedCreateWithoutProductoInput>
  }

  export type TransaccionesCreateManyProductoInputEnvelope = {
    data: TransaccionesCreateManyProductoInput | TransaccionesCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type CarritoCreateWithoutProductoInput = {
    cantidad: number
    usuario: CuentasCreateNestedOneWithoutCarritoInput
  }

  export type CarritoUncheckedCreateWithoutProductoInput = {
    id?: number
    usuarioId: number
    cantidad: number
  }

  export type CarritoCreateOrConnectWithoutProductoInput = {
    where: CarritoWhereUniqueInput
    create: XOR<CarritoCreateWithoutProductoInput, CarritoUncheckedCreateWithoutProductoInput>
  }

  export type CarritoCreateManyProductoInputEnvelope = {
    data: CarritoCreateManyProductoInput | CarritoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type ImagenesProductoCreateWithoutProductoInput = {
    urlImagen?: Uint8Array | null
  }

  export type ImagenesProductoUncheckedCreateWithoutProductoInput = {
    id?: number
    urlImagen?: Uint8Array | null
  }

  export type ImagenesProductoCreateOrConnectWithoutProductoInput = {
    where: ImagenesProductoWhereUniqueInput
    create: XOR<ImagenesProductoCreateWithoutProductoInput, ImagenesProductoUncheckedCreateWithoutProductoInput>
  }

  export type ImagenesProductoCreateManyProductoInputEnvelope = {
    data: ImagenesProductoCreateManyProductoInput | ImagenesProductoCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type ReportesCreateWithoutProductoInput = {
    motivo?: string | null
    fecha?: Date | string
    reportante: CuentasCreateNestedOneWithoutReportesInput
    usuarioReportado?: CuentasCreateNestedOneWithoutReportesRecibidosInput
    estado: EstadosReporteCreateNestedOneWithoutReportesInput
  }

  export type ReportesUncheckedCreateWithoutProductoInput = {
    id?: number
    reportanteId: number
    usuarioReportadoId?: number | null
    motivo?: string | null
    fecha?: Date | string
    estadoId: number
  }

  export type ReportesCreateOrConnectWithoutProductoInput = {
    where: ReportesWhereUniqueInput
    create: XOR<ReportesCreateWithoutProductoInput, ReportesUncheckedCreateWithoutProductoInput>
  }

  export type ReportesCreateManyProductoInputEnvelope = {
    data: ReportesCreateManyProductoInput | ReportesCreateManyProductoInput[]
    skipDuplicates?: boolean
  }

  export type CategoriasUpsertWithoutProductosInput = {
    update: XOR<CategoriasUpdateWithoutProductosInput, CategoriasUncheckedUpdateWithoutProductosInput>
    create: XOR<CategoriasCreateWithoutProductosInput, CategoriasUncheckedCreateWithoutProductosInput>
    where?: CategoriasWhereInput
  }

  export type CategoriasUpdateToOneWithWhereWithoutProductosInput = {
    where?: CategoriasWhereInput
    data: XOR<CategoriasUpdateWithoutProductosInput, CategoriasUncheckedUpdateWithoutProductosInput>
  }

  export type CategoriasUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaPadre?: CategoriasUpdateOneWithoutSubcategoriasNestedInput
    subcategorias?: CategoriasUpdateManyWithoutCategoriaPadreNestedInput
  }

  export type CategoriasUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaPadreId?: NullableIntFieldUpdateOperationsInput | number | null
    subcategorias?: CategoriasUncheckedUpdateManyWithoutCategoriaPadreNestedInput
  }

  export type CuentasUpsertWithoutProductosInput = {
    update: XOR<CuentasUpdateWithoutProductosInput, CuentasUncheckedUpdateWithoutProductosInput>
    create: XOR<CuentasCreateWithoutProductosInput, CuentasUncheckedCreateWithoutProductosInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutProductosInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutProductosInput, CuentasUncheckedUpdateWithoutProductosInput>
  }

  export type CuentasUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type EstadosProductoUpsertWithoutProductosInput = {
    update: XOR<EstadosProductoUpdateWithoutProductosInput, EstadosProductoUncheckedUpdateWithoutProductosInput>
    create: XOR<EstadosProductoCreateWithoutProductosInput, EstadosProductoUncheckedCreateWithoutProductosInput>
    where?: EstadosProductoWhereInput
  }

  export type EstadosProductoUpdateToOneWithWhereWithoutProductosInput = {
    where?: EstadosProductoWhereInput
    data: XOR<EstadosProductoUpdateWithoutProductosInput, EstadosProductoUncheckedUpdateWithoutProductosInput>
  }

  export type EstadosProductoUpdateWithoutProductosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EstadosProductoUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type TransaccionesUpsertWithWhereUniqueWithoutProductoInput = {
    where: TransaccionesWhereUniqueInput
    update: XOR<TransaccionesUpdateWithoutProductoInput, TransaccionesUncheckedUpdateWithoutProductoInput>
    create: XOR<TransaccionesCreateWithoutProductoInput, TransaccionesUncheckedCreateWithoutProductoInput>
  }

  export type TransaccionesUpdateWithWhereUniqueWithoutProductoInput = {
    where: TransaccionesWhereUniqueInput
    data: XOR<TransaccionesUpdateWithoutProductoInput, TransaccionesUncheckedUpdateWithoutProductoInput>
  }

  export type TransaccionesUpdateManyWithWhereWithoutProductoInput = {
    where: TransaccionesScalarWhereInput
    data: XOR<TransaccionesUpdateManyMutationInput, TransaccionesUncheckedUpdateManyWithoutProductoInput>
  }

  export type CarritoUpsertWithWhereUniqueWithoutProductoInput = {
    where: CarritoWhereUniqueInput
    update: XOR<CarritoUpdateWithoutProductoInput, CarritoUncheckedUpdateWithoutProductoInput>
    create: XOR<CarritoCreateWithoutProductoInput, CarritoUncheckedCreateWithoutProductoInput>
  }

  export type CarritoUpdateWithWhereUniqueWithoutProductoInput = {
    where: CarritoWhereUniqueInput
    data: XOR<CarritoUpdateWithoutProductoInput, CarritoUncheckedUpdateWithoutProductoInput>
  }

  export type CarritoUpdateManyWithWhereWithoutProductoInput = {
    where: CarritoScalarWhereInput
    data: XOR<CarritoUpdateManyMutationInput, CarritoUncheckedUpdateManyWithoutProductoInput>
  }

  export type ImagenesProductoUpsertWithWhereUniqueWithoutProductoInput = {
    where: ImagenesProductoWhereUniqueInput
    update: XOR<ImagenesProductoUpdateWithoutProductoInput, ImagenesProductoUncheckedUpdateWithoutProductoInput>
    create: XOR<ImagenesProductoCreateWithoutProductoInput, ImagenesProductoUncheckedCreateWithoutProductoInput>
  }

  export type ImagenesProductoUpdateWithWhereUniqueWithoutProductoInput = {
    where: ImagenesProductoWhereUniqueInput
    data: XOR<ImagenesProductoUpdateWithoutProductoInput, ImagenesProductoUncheckedUpdateWithoutProductoInput>
  }

  export type ImagenesProductoUpdateManyWithWhereWithoutProductoInput = {
    where: ImagenesProductoScalarWhereInput
    data: XOR<ImagenesProductoUpdateManyMutationInput, ImagenesProductoUncheckedUpdateManyWithoutProductoInput>
  }

  export type ImagenesProductoScalarWhereInput = {
    AND?: ImagenesProductoScalarWhereInput | ImagenesProductoScalarWhereInput[]
    OR?: ImagenesProductoScalarWhereInput[]
    NOT?: ImagenesProductoScalarWhereInput | ImagenesProductoScalarWhereInput[]
    id?: IntFilter<"ImagenesProducto"> | number
    productoId?: IntFilter<"ImagenesProducto"> | number
    urlImagen?: BytesNullableFilter<"ImagenesProducto"> | Uint8Array | null
  }

  export type ReportesUpsertWithWhereUniqueWithoutProductoInput = {
    where: ReportesWhereUniqueInput
    update: XOR<ReportesUpdateWithoutProductoInput, ReportesUncheckedUpdateWithoutProductoInput>
    create: XOR<ReportesCreateWithoutProductoInput, ReportesUncheckedCreateWithoutProductoInput>
  }

  export type ReportesUpdateWithWhereUniqueWithoutProductoInput = {
    where: ReportesWhereUniqueInput
    data: XOR<ReportesUpdateWithoutProductoInput, ReportesUncheckedUpdateWithoutProductoInput>
  }

  export type ReportesUpdateManyWithWhereWithoutProductoInput = {
    where: ReportesScalarWhereInput
    data: XOR<ReportesUpdateManyMutationInput, ReportesUncheckedUpdateManyWithoutProductoInput>
  }

  export type ProductosCreateWithoutImagenesInput = {
    nombre: string
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    categoria?: CategoriasCreateNestedOneWithoutProductosInput
    vendedor: CuentasCreateNestedOneWithoutProductosInput
    estado: EstadosProductoCreateNestedOneWithoutProductosInput
    transacciones?: TransaccionesCreateNestedManyWithoutProductoInput
    carrito?: CarritoCreateNestedManyWithoutProductoInput
    reportes?: ReportesCreateNestedManyWithoutProductoInput
  }

  export type ProductosUncheckedCreateWithoutImagenesInput = {
    id?: number
    nombre: string
    categoriaId?: number | null
    vendedorId: number
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    estadoId: number
    transacciones?: TransaccionesUncheckedCreateNestedManyWithoutProductoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutProductoInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductosCreateOrConnectWithoutImagenesInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutImagenesInput, ProductosUncheckedCreateWithoutImagenesInput>
  }

  export type ProductosUpsertWithoutImagenesInput = {
    update: XOR<ProductosUpdateWithoutImagenesInput, ProductosUncheckedUpdateWithoutImagenesInput>
    create: XOR<ProductosCreateWithoutImagenesInput, ProductosUncheckedCreateWithoutImagenesInput>
    where?: ProductosWhereInput
  }

  export type ProductosUpdateToOneWithWhereWithoutImagenesInput = {
    where?: ProductosWhereInput
    data: XOR<ProductosUpdateWithoutImagenesInput, ProductosUncheckedUpdateWithoutImagenesInput>
  }

  export type ProductosUpdateWithoutImagenesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriasUpdateOneWithoutProductosNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutProductosNestedInput
    estado?: EstadosProductoUpdateOneRequiredWithoutProductosNestedInput
    transacciones?: TransaccionesUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateWithoutImagenesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    transacciones?: TransaccionesUncheckedUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type TransaccionesCreateWithoutEstadoInput = {
    fecha?: Date | string
    producto: ProductosCreateNestedOneWithoutTransaccionesInput
    comprador: CuentasCreateNestedOneWithoutTransaccionesCompraInput
    vendedor: CuentasCreateNestedOneWithoutTransaccionesVentaInput
    calificaciones?: CalificacionesCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionesUncheckedCreateWithoutEstadoInput = {
    id?: number
    productoId: number
    compradorId: number
    vendedorId: number
    fecha?: Date | string
    calificaciones?: CalificacionesUncheckedCreateNestedManyWithoutTransaccionInput
  }

  export type TransaccionesCreateOrConnectWithoutEstadoInput = {
    where: TransaccionesWhereUniqueInput
    create: XOR<TransaccionesCreateWithoutEstadoInput, TransaccionesUncheckedCreateWithoutEstadoInput>
  }

  export type TransaccionesCreateManyEstadoInputEnvelope = {
    data: TransaccionesCreateManyEstadoInput | TransaccionesCreateManyEstadoInput[]
    skipDuplicates?: boolean
  }

  export type TransaccionesUpsertWithWhereUniqueWithoutEstadoInput = {
    where: TransaccionesWhereUniqueInput
    update: XOR<TransaccionesUpdateWithoutEstadoInput, TransaccionesUncheckedUpdateWithoutEstadoInput>
    create: XOR<TransaccionesCreateWithoutEstadoInput, TransaccionesUncheckedCreateWithoutEstadoInput>
  }

  export type TransaccionesUpdateWithWhereUniqueWithoutEstadoInput = {
    where: TransaccionesWhereUniqueInput
    data: XOR<TransaccionesUpdateWithoutEstadoInput, TransaccionesUncheckedUpdateWithoutEstadoInput>
  }

  export type TransaccionesUpdateManyWithWhereWithoutEstadoInput = {
    where: TransaccionesScalarWhereInput
    data: XOR<TransaccionesUpdateManyMutationInput, TransaccionesUncheckedUpdateManyWithoutEstadoInput>
  }

  export type ProductosCreateWithoutTransaccionesInput = {
    nombre: string
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    categoria?: CategoriasCreateNestedOneWithoutProductosInput
    vendedor: CuentasCreateNestedOneWithoutProductosInput
    estado: EstadosProductoCreateNestedOneWithoutProductosInput
    carrito?: CarritoCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoCreateNestedManyWithoutProductoInput
    reportes?: ReportesCreateNestedManyWithoutProductoInput
  }

  export type ProductosUncheckedCreateWithoutTransaccionesInput = {
    id?: number
    nombre: string
    categoriaId?: number | null
    vendedorId: number
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    estadoId: number
    carrito?: CarritoUncheckedCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoUncheckedCreateNestedManyWithoutProductoInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductosCreateOrConnectWithoutTransaccionesInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutTransaccionesInput, ProductosUncheckedCreateWithoutTransaccionesInput>
  }

  export type CuentasCreateWithoutTransaccionesCompraInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutTransaccionesCompraInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutTransaccionesCompraInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutTransaccionesCompraInput, CuentasUncheckedCreateWithoutTransaccionesCompraInput>
  }

  export type CuentasCreateWithoutTransaccionesVentaInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutTransaccionesVentaInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutTransaccionesVentaInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutTransaccionesVentaInput, CuentasUncheckedCreateWithoutTransaccionesVentaInput>
  }

  export type EstadosTransaccionCreateWithoutTransaccionesInput = {
    nombre: string
  }

  export type EstadosTransaccionUncheckedCreateWithoutTransaccionesInput = {
    id?: number
    nombre: string
  }

  export type EstadosTransaccionCreateOrConnectWithoutTransaccionesInput = {
    where: EstadosTransaccionWhereUniqueInput
    create: XOR<EstadosTransaccionCreateWithoutTransaccionesInput, EstadosTransaccionUncheckedCreateWithoutTransaccionesInput>
  }

  export type CalificacionesCreateWithoutTransaccionInput = {
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
    calificador: CuentasCreateNestedOneWithoutCalificacionesDadasInput
    calificado: CuentasCreateNestedOneWithoutCalificacionesRecibidasInput
  }

  export type CalificacionesUncheckedCreateWithoutTransaccionInput = {
    id?: number
    calificadorId: number
    calificadoId: number
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
  }

  export type CalificacionesCreateOrConnectWithoutTransaccionInput = {
    where: CalificacionesWhereUniqueInput
    create: XOR<CalificacionesCreateWithoutTransaccionInput, CalificacionesUncheckedCreateWithoutTransaccionInput>
  }

  export type CalificacionesCreateManyTransaccionInputEnvelope = {
    data: CalificacionesCreateManyTransaccionInput | CalificacionesCreateManyTransaccionInput[]
    skipDuplicates?: boolean
  }

  export type ProductosUpsertWithoutTransaccionesInput = {
    update: XOR<ProductosUpdateWithoutTransaccionesInput, ProductosUncheckedUpdateWithoutTransaccionesInput>
    create: XOR<ProductosCreateWithoutTransaccionesInput, ProductosUncheckedCreateWithoutTransaccionesInput>
    where?: ProductosWhereInput
  }

  export type ProductosUpdateToOneWithWhereWithoutTransaccionesInput = {
    where?: ProductosWhereInput
    data: XOR<ProductosUpdateWithoutTransaccionesInput, ProductosUncheckedUpdateWithoutTransaccionesInput>
  }

  export type ProductosUpdateWithoutTransaccionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriasUpdateOneWithoutProductosNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutProductosNestedInput
    estado?: EstadosProductoUpdateOneRequiredWithoutProductosNestedInput
    carrito?: CarritoUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateWithoutTransaccionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    carrito?: CarritoUncheckedUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUncheckedUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type CuentasUpsertWithoutTransaccionesCompraInput = {
    update: XOR<CuentasUpdateWithoutTransaccionesCompraInput, CuentasUncheckedUpdateWithoutTransaccionesCompraInput>
    create: XOR<CuentasCreateWithoutTransaccionesCompraInput, CuentasUncheckedCreateWithoutTransaccionesCompraInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutTransaccionesCompraInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutTransaccionesCompraInput, CuentasUncheckedUpdateWithoutTransaccionesCompraInput>
  }

  export type CuentasUpdateWithoutTransaccionesCompraInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutTransaccionesCompraInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUpsertWithoutTransaccionesVentaInput = {
    update: XOR<CuentasUpdateWithoutTransaccionesVentaInput, CuentasUncheckedUpdateWithoutTransaccionesVentaInput>
    create: XOR<CuentasCreateWithoutTransaccionesVentaInput, CuentasUncheckedCreateWithoutTransaccionesVentaInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutTransaccionesVentaInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutTransaccionesVentaInput, CuentasUncheckedUpdateWithoutTransaccionesVentaInput>
  }

  export type CuentasUpdateWithoutTransaccionesVentaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutTransaccionesVentaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type EstadosTransaccionUpsertWithoutTransaccionesInput = {
    update: XOR<EstadosTransaccionUpdateWithoutTransaccionesInput, EstadosTransaccionUncheckedUpdateWithoutTransaccionesInput>
    create: XOR<EstadosTransaccionCreateWithoutTransaccionesInput, EstadosTransaccionUncheckedCreateWithoutTransaccionesInput>
    where?: EstadosTransaccionWhereInput
  }

  export type EstadosTransaccionUpdateToOneWithWhereWithoutTransaccionesInput = {
    where?: EstadosTransaccionWhereInput
    data: XOR<EstadosTransaccionUpdateWithoutTransaccionesInput, EstadosTransaccionUncheckedUpdateWithoutTransaccionesInput>
  }

  export type EstadosTransaccionUpdateWithoutTransaccionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EstadosTransaccionUncheckedUpdateWithoutTransaccionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CalificacionesUpsertWithWhereUniqueWithoutTransaccionInput = {
    where: CalificacionesWhereUniqueInput
    update: XOR<CalificacionesUpdateWithoutTransaccionInput, CalificacionesUncheckedUpdateWithoutTransaccionInput>
    create: XOR<CalificacionesCreateWithoutTransaccionInput, CalificacionesUncheckedCreateWithoutTransaccionInput>
  }

  export type CalificacionesUpdateWithWhereUniqueWithoutTransaccionInput = {
    where: CalificacionesWhereUniqueInput
    data: XOR<CalificacionesUpdateWithoutTransaccionInput, CalificacionesUncheckedUpdateWithoutTransaccionInput>
  }

  export type CalificacionesUpdateManyWithWhereWithoutTransaccionInput = {
    where: CalificacionesScalarWhereInput
    data: XOR<CalificacionesUpdateManyMutationInput, CalificacionesUncheckedUpdateManyWithoutTransaccionInput>
  }

  export type TransaccionesCreateWithoutCalificacionesInput = {
    fecha?: Date | string
    producto: ProductosCreateNestedOneWithoutTransaccionesInput
    comprador: CuentasCreateNestedOneWithoutTransaccionesCompraInput
    vendedor: CuentasCreateNestedOneWithoutTransaccionesVentaInput
    estado: EstadosTransaccionCreateNestedOneWithoutTransaccionesInput
  }

  export type TransaccionesUncheckedCreateWithoutCalificacionesInput = {
    id?: number
    productoId: number
    compradorId: number
    vendedorId: number
    fecha?: Date | string
    estadoId: number
  }

  export type TransaccionesCreateOrConnectWithoutCalificacionesInput = {
    where: TransaccionesWhereUniqueInput
    create: XOR<TransaccionesCreateWithoutCalificacionesInput, TransaccionesUncheckedCreateWithoutCalificacionesInput>
  }

  export type CuentasCreateWithoutCalificacionesDadasInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutCalificacionesDadasInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutCalificacionesDadasInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutCalificacionesDadasInput, CuentasUncheckedCreateWithoutCalificacionesDadasInput>
  }

  export type CuentasCreateWithoutCalificacionesRecibidasInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutCalificacionesRecibidasInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutCalificacionesRecibidasInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutCalificacionesRecibidasInput, CuentasUncheckedCreateWithoutCalificacionesRecibidasInput>
  }

  export type TransaccionesUpsertWithoutCalificacionesInput = {
    update: XOR<TransaccionesUpdateWithoutCalificacionesInput, TransaccionesUncheckedUpdateWithoutCalificacionesInput>
    create: XOR<TransaccionesCreateWithoutCalificacionesInput, TransaccionesUncheckedCreateWithoutCalificacionesInput>
    where?: TransaccionesWhereInput
  }

  export type TransaccionesUpdateToOneWithWhereWithoutCalificacionesInput = {
    where?: TransaccionesWhereInput
    data: XOR<TransaccionesUpdateWithoutCalificacionesInput, TransaccionesUncheckedUpdateWithoutCalificacionesInput>
  }

  export type TransaccionesUpdateWithoutCalificacionesInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductosUpdateOneRequiredWithoutTransaccionesNestedInput
    comprador?: CuentasUpdateOneRequiredWithoutTransaccionesCompraNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutTransaccionesVentaNestedInput
    estado?: EstadosTransaccionUpdateOneRequiredWithoutTransaccionesNestedInput
  }

  export type TransaccionesUncheckedUpdateWithoutCalificacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    compradorId?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type CuentasUpsertWithoutCalificacionesDadasInput = {
    update: XOR<CuentasUpdateWithoutCalificacionesDadasInput, CuentasUncheckedUpdateWithoutCalificacionesDadasInput>
    create: XOR<CuentasCreateWithoutCalificacionesDadasInput, CuentasUncheckedCreateWithoutCalificacionesDadasInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutCalificacionesDadasInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutCalificacionesDadasInput, CuentasUncheckedUpdateWithoutCalificacionesDadasInput>
  }

  export type CuentasUpdateWithoutCalificacionesDadasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutCalificacionesDadasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUpsertWithoutCalificacionesRecibidasInput = {
    update: XOR<CuentasUpdateWithoutCalificacionesRecibidasInput, CuentasUncheckedUpdateWithoutCalificacionesRecibidasInput>
    create: XOR<CuentasCreateWithoutCalificacionesRecibidasInput, CuentasUncheckedCreateWithoutCalificacionesRecibidasInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutCalificacionesRecibidasInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutCalificacionesRecibidasInput, CuentasUncheckedUpdateWithoutCalificacionesRecibidasInput>
  }

  export type CuentasUpdateWithoutCalificacionesRecibidasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutCalificacionesRecibidasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasCreateWithoutCarritoInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutCarritoInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutCarritoInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutCarritoInput, CuentasUncheckedCreateWithoutCarritoInput>
  }

  export type ProductosCreateWithoutCarritoInput = {
    nombre: string
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    categoria?: CategoriasCreateNestedOneWithoutProductosInput
    vendedor: CuentasCreateNestedOneWithoutProductosInput
    estado: EstadosProductoCreateNestedOneWithoutProductosInput
    transacciones?: TransaccionesCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoCreateNestedManyWithoutProductoInput
    reportes?: ReportesCreateNestedManyWithoutProductoInput
  }

  export type ProductosUncheckedCreateWithoutCarritoInput = {
    id?: number
    nombre: string
    categoriaId?: number | null
    vendedorId: number
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    estadoId: number
    transacciones?: TransaccionesUncheckedCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoUncheckedCreateNestedManyWithoutProductoInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductosCreateOrConnectWithoutCarritoInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutCarritoInput, ProductosUncheckedCreateWithoutCarritoInput>
  }

  export type CuentasUpsertWithoutCarritoInput = {
    update: XOR<CuentasUpdateWithoutCarritoInput, CuentasUncheckedUpdateWithoutCarritoInput>
    create: XOR<CuentasCreateWithoutCarritoInput, CuentasUncheckedCreateWithoutCarritoInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutCarritoInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutCarritoInput, CuentasUncheckedUpdateWithoutCarritoInput>
  }

  export type CuentasUpdateWithoutCarritoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutCarritoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ProductosUpsertWithoutCarritoInput = {
    update: XOR<ProductosUpdateWithoutCarritoInput, ProductosUncheckedUpdateWithoutCarritoInput>
    create: XOR<ProductosCreateWithoutCarritoInput, ProductosUncheckedCreateWithoutCarritoInput>
    where?: ProductosWhereInput
  }

  export type ProductosUpdateToOneWithWhereWithoutCarritoInput = {
    where?: ProductosWhereInput
    data: XOR<ProductosUpdateWithoutCarritoInput, ProductosUncheckedUpdateWithoutCarritoInput>
  }

  export type ProductosUpdateWithoutCarritoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriasUpdateOneWithoutProductosNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutProductosNestedInput
    estado?: EstadosProductoUpdateOneRequiredWithoutProductosNestedInput
    transacciones?: TransaccionesUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateWithoutCarritoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    transacciones?: TransaccionesUncheckedUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUncheckedUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type CuentasCreateWithoutMensajesEnviadosInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutMensajesEnviadosInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutMensajesEnviadosInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutMensajesEnviadosInput, CuentasUncheckedCreateWithoutMensajesEnviadosInput>
  }

  export type CuentasCreateWithoutMensajesRecibidosInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutMensajesRecibidosInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutMensajesRecibidosInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutMensajesRecibidosInput, CuentasUncheckedCreateWithoutMensajesRecibidosInput>
  }

  export type CuentasUpsertWithoutMensajesEnviadosInput = {
    update: XOR<CuentasUpdateWithoutMensajesEnviadosInput, CuentasUncheckedUpdateWithoutMensajesEnviadosInput>
    create: XOR<CuentasCreateWithoutMensajesEnviadosInput, CuentasUncheckedCreateWithoutMensajesEnviadosInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutMensajesEnviadosInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutMensajesEnviadosInput, CuentasUncheckedUpdateWithoutMensajesEnviadosInput>
  }

  export type CuentasUpdateWithoutMensajesEnviadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutMensajesEnviadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUpsertWithoutMensajesRecibidosInput = {
    update: XOR<CuentasUpdateWithoutMensajesRecibidosInput, CuentasUncheckedUpdateWithoutMensajesRecibidosInput>
    create: XOR<CuentasCreateWithoutMensajesRecibidosInput, CuentasUncheckedCreateWithoutMensajesRecibidosInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutMensajesRecibidosInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutMensajesRecibidosInput, CuentasUncheckedUpdateWithoutMensajesRecibidosInput>
  }

  export type CuentasUpdateWithoutMensajesRecibidosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutMensajesRecibidosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ReportesCreateWithoutEstadoInput = {
    motivo?: string | null
    fecha?: Date | string
    reportante: CuentasCreateNestedOneWithoutReportesInput
    usuarioReportado?: CuentasCreateNestedOneWithoutReportesRecibidosInput
    producto?: ProductosCreateNestedOneWithoutReportesInput
  }

  export type ReportesUncheckedCreateWithoutEstadoInput = {
    id?: number
    reportanteId: number
    usuarioReportadoId?: number | null
    productoId?: number | null
    motivo?: string | null
    fecha?: Date | string
  }

  export type ReportesCreateOrConnectWithoutEstadoInput = {
    where: ReportesWhereUniqueInput
    create: XOR<ReportesCreateWithoutEstadoInput, ReportesUncheckedCreateWithoutEstadoInput>
  }

  export type ReportesCreateManyEstadoInputEnvelope = {
    data: ReportesCreateManyEstadoInput | ReportesCreateManyEstadoInput[]
    skipDuplicates?: boolean
  }

  export type ReportesUpsertWithWhereUniqueWithoutEstadoInput = {
    where: ReportesWhereUniqueInput
    update: XOR<ReportesUpdateWithoutEstadoInput, ReportesUncheckedUpdateWithoutEstadoInput>
    create: XOR<ReportesCreateWithoutEstadoInput, ReportesUncheckedCreateWithoutEstadoInput>
  }

  export type ReportesUpdateWithWhereUniqueWithoutEstadoInput = {
    where: ReportesWhereUniqueInput
    data: XOR<ReportesUpdateWithoutEstadoInput, ReportesUncheckedUpdateWithoutEstadoInput>
  }

  export type ReportesUpdateManyWithWhereWithoutEstadoInput = {
    where: ReportesScalarWhereInput
    data: XOR<ReportesUpdateManyMutationInput, ReportesUncheckedUpdateManyWithoutEstadoInput>
  }

  export type CuentasCreateWithoutReportesInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutReportesInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutReportesInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutReportesInput, CuentasUncheckedCreateWithoutReportesInput>
  }

  export type CuentasCreateWithoutReportesRecibidosInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutReportesRecibidosInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutReportesRecibidosInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutReportesRecibidosInput, CuentasUncheckedCreateWithoutReportesRecibidosInput>
  }

  export type ProductosCreateWithoutReportesInput = {
    nombre: string
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    categoria?: CategoriasCreateNestedOneWithoutProductosInput
    vendedor: CuentasCreateNestedOneWithoutProductosInput
    estado: EstadosProductoCreateNestedOneWithoutProductosInput
    transacciones?: TransaccionesCreateNestedManyWithoutProductoInput
    carrito?: CarritoCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoCreateNestedManyWithoutProductoInput
  }

  export type ProductosUncheckedCreateWithoutReportesInput = {
    id?: number
    nombre: string
    categoriaId?: number | null
    vendedorId: number
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    estadoId: number
    transacciones?: TransaccionesUncheckedCreateNestedManyWithoutProductoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutProductoInput
    imagenes?: ImagenesProductoUncheckedCreateNestedManyWithoutProductoInput
  }

  export type ProductosCreateOrConnectWithoutReportesInput = {
    where: ProductosWhereUniqueInput
    create: XOR<ProductosCreateWithoutReportesInput, ProductosUncheckedCreateWithoutReportesInput>
  }

  export type EstadosReporteCreateWithoutReportesInput = {
    nombre: string
  }

  export type EstadosReporteUncheckedCreateWithoutReportesInput = {
    id?: number
    nombre: string
  }

  export type EstadosReporteCreateOrConnectWithoutReportesInput = {
    where: EstadosReporteWhereUniqueInput
    create: XOR<EstadosReporteCreateWithoutReportesInput, EstadosReporteUncheckedCreateWithoutReportesInput>
  }

  export type CuentasUpsertWithoutReportesInput = {
    update: XOR<CuentasUpdateWithoutReportesInput, CuentasUncheckedUpdateWithoutReportesInput>
    create: XOR<CuentasCreateWithoutReportesInput, CuentasUncheckedCreateWithoutReportesInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutReportesInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutReportesInput, CuentasUncheckedUpdateWithoutReportesInput>
  }

  export type CuentasUpdateWithoutReportesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutReportesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUpsertWithoutReportesRecibidosInput = {
    update: XOR<CuentasUpdateWithoutReportesRecibidosInput, CuentasUncheckedUpdateWithoutReportesRecibidosInput>
    create: XOR<CuentasCreateWithoutReportesRecibidosInput, CuentasUncheckedCreateWithoutReportesRecibidosInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutReportesRecibidosInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutReportesRecibidosInput, CuentasUncheckedUpdateWithoutReportesRecibidosInput>
  }

  export type CuentasUpdateWithoutReportesRecibidosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutReportesRecibidosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ProductosUpsertWithoutReportesInput = {
    update: XOR<ProductosUpdateWithoutReportesInput, ProductosUncheckedUpdateWithoutReportesInput>
    create: XOR<ProductosCreateWithoutReportesInput, ProductosUncheckedCreateWithoutReportesInput>
    where?: ProductosWhereInput
  }

  export type ProductosUpdateToOneWithWhereWithoutReportesInput = {
    where?: ProductosWhereInput
    data: XOR<ProductosUpdateWithoutReportesInput, ProductosUncheckedUpdateWithoutReportesInput>
  }

  export type ProductosUpdateWithoutReportesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriasUpdateOneWithoutProductosNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutProductosNestedInput
    estado?: EstadosProductoUpdateOneRequiredWithoutProductosNestedInput
    transacciones?: TransaccionesUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateWithoutReportesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    transacciones?: TransaccionesUncheckedUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type EstadosReporteUpsertWithoutReportesInput = {
    update: XOR<EstadosReporteUpdateWithoutReportesInput, EstadosReporteUncheckedUpdateWithoutReportesInput>
    create: XOR<EstadosReporteCreateWithoutReportesInput, EstadosReporteUncheckedCreateWithoutReportesInput>
    where?: EstadosReporteWhereInput
  }

  export type EstadosReporteUpdateToOneWithWhereWithoutReportesInput = {
    where?: EstadosReporteWhereInput
    data: XOR<EstadosReporteUpdateWithoutReportesInput, EstadosReporteUncheckedUpdateWithoutReportesInput>
  }

  export type EstadosReporteUpdateWithoutReportesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EstadosReporteUncheckedUpdateWithoutReportesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type CuentasCreateWithoutActividadesInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutActividadesInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutActividadesInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutActividadesInput, CuentasUncheckedCreateWithoutActividadesInput>
  }

  export type CuentasUpsertWithoutActividadesInput = {
    update: XOR<CuentasUpdateWithoutActividadesInput, CuentasUncheckedUpdateWithoutActividadesInput>
    create: XOR<CuentasCreateWithoutActividadesInput, CuentasUncheckedCreateWithoutActividadesInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutActividadesInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutActividadesInput, CuentasUncheckedUpdateWithoutActividadesInput>
  }

  export type CuentasUpdateWithoutActividadesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutActividadesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasCreateWithoutNotificacionesInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutNotificacionesInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutNotificacionesInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutNotificacionesInput, CuentasUncheckedCreateWithoutNotificacionesInput>
  }

  export type CuentasUpsertWithoutNotificacionesInput = {
    update: XOR<CuentasUpdateWithoutNotificacionesInput, CuentasUncheckedUpdateWithoutNotificacionesInput>
    create: XOR<CuentasCreateWithoutNotificacionesInput, CuentasUncheckedCreateWithoutNotificacionesInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutNotificacionesInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutNotificacionesInput, CuentasUncheckedUpdateWithoutNotificacionesInput>
  }

  export type CuentasUpdateWithoutNotificacionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutNotificacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasCreateWithoutPublicacionesInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutPublicacionesInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutPublicacionesInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutPublicacionesInput, CuentasUncheckedCreateWithoutPublicacionesInput>
  }

  export type FavoritosCreateWithoutPublicacionInput = {
    fecha?: Date | string
    usuario: CuentasCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritosUncheckedCreateWithoutPublicacionInput = {
    id?: number
    usuarioId: number
    fecha?: Date | string
  }

  export type FavoritosCreateOrConnectWithoutPublicacionInput = {
    where: FavoritosWhereUniqueInput
    create: XOR<FavoritosCreateWithoutPublicacionInput, FavoritosUncheckedCreateWithoutPublicacionInput>
  }

  export type FavoritosCreateManyPublicacionInputEnvelope = {
    data: FavoritosCreateManyPublicacionInput | FavoritosCreateManyPublicacionInput[]
    skipDuplicates?: boolean
  }

  export type CuentasUpsertWithoutPublicacionesInput = {
    update: XOR<CuentasUpdateWithoutPublicacionesInput, CuentasUncheckedUpdateWithoutPublicacionesInput>
    create: XOR<CuentasCreateWithoutPublicacionesInput, CuentasUncheckedCreateWithoutPublicacionesInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutPublicacionesInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutPublicacionesInput, CuentasUncheckedUpdateWithoutPublicacionesInput>
  }

  export type CuentasUpdateWithoutPublicacionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutPublicacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type FavoritosUpsertWithWhereUniqueWithoutPublicacionInput = {
    where: FavoritosWhereUniqueInput
    update: XOR<FavoritosUpdateWithoutPublicacionInput, FavoritosUncheckedUpdateWithoutPublicacionInput>
    create: XOR<FavoritosCreateWithoutPublicacionInput, FavoritosUncheckedCreateWithoutPublicacionInput>
  }

  export type FavoritosUpdateWithWhereUniqueWithoutPublicacionInput = {
    where: FavoritosWhereUniqueInput
    data: XOR<FavoritosUpdateWithoutPublicacionInput, FavoritosUncheckedUpdateWithoutPublicacionInput>
  }

  export type FavoritosUpdateManyWithWhereWithoutPublicacionInput = {
    where: FavoritosScalarWhereInput
    data: XOR<FavoritosUpdateManyMutationInput, FavoritosUncheckedUpdateManyWithoutPublicacionInput>
  }

  export type CuentasCreateWithoutForosInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutForosInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutForosInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutForosInput, CuentasUncheckedCreateWithoutForosInput>
  }

  export type PublicacionesForoCreateWithoutForoInput = {
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
    autor: CuentasCreateNestedOneWithoutPublicacionesForoInput
    comentarios?: ComentariosPublicacionCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionesForoUncheckedCreateWithoutForoInput = {
    id?: number
    autorId: number
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
    comentarios?: ComentariosPublicacionUncheckedCreateNestedManyWithoutPublicacionInput
  }

  export type PublicacionesForoCreateOrConnectWithoutForoInput = {
    where: PublicacionesForoWhereUniqueInput
    create: XOR<PublicacionesForoCreateWithoutForoInput, PublicacionesForoUncheckedCreateWithoutForoInput>
  }

  export type PublicacionesForoCreateManyForoInputEnvelope = {
    data: PublicacionesForoCreateManyForoInput | PublicacionesForoCreateManyForoInput[]
    skipDuplicates?: boolean
  }

  export type CuentasUpsertWithoutForosInput = {
    update: XOR<CuentasUpdateWithoutForosInput, CuentasUncheckedUpdateWithoutForosInput>
    create: XOR<CuentasCreateWithoutForosInput, CuentasUncheckedCreateWithoutForosInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutForosInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutForosInput, CuentasUncheckedUpdateWithoutForosInput>
  }

  export type CuentasUpdateWithoutForosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutForosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type PublicacionesForoUpsertWithWhereUniqueWithoutForoInput = {
    where: PublicacionesForoWhereUniqueInput
    update: XOR<PublicacionesForoUpdateWithoutForoInput, PublicacionesForoUncheckedUpdateWithoutForoInput>
    create: XOR<PublicacionesForoCreateWithoutForoInput, PublicacionesForoUncheckedCreateWithoutForoInput>
  }

  export type PublicacionesForoUpdateWithWhereUniqueWithoutForoInput = {
    where: PublicacionesForoWhereUniqueInput
    data: XOR<PublicacionesForoUpdateWithoutForoInput, PublicacionesForoUncheckedUpdateWithoutForoInput>
  }

  export type PublicacionesForoUpdateManyWithWhereWithoutForoInput = {
    where: PublicacionesForoScalarWhereInput
    data: XOR<PublicacionesForoUpdateManyMutationInput, PublicacionesForoUncheckedUpdateManyWithoutForoInput>
  }

  export type ForosCreateWithoutPublicacionesInput = {
    nombre: string
    descripcion?: string | null
    fechaCreacion?: Date | string
    creador: CuentasCreateNestedOneWithoutForosInput
  }

  export type ForosUncheckedCreateWithoutPublicacionesInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    creadorId: number
    fechaCreacion?: Date | string
  }

  export type ForosCreateOrConnectWithoutPublicacionesInput = {
    where: ForosWhereUniqueInput
    create: XOR<ForosCreateWithoutPublicacionesInput, ForosUncheckedCreateWithoutPublicacionesInput>
  }

  export type CuentasCreateWithoutPublicacionesForoInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutPublicacionesForoInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutPublicacionesForoInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutPublicacionesForoInput, CuentasUncheckedCreateWithoutPublicacionesForoInput>
  }

  export type ComentariosPublicacionCreateWithoutPublicacionInput = {
    contenido?: string | null
    fecha?: Date | string
    autor: CuentasCreateNestedOneWithoutComentariosPublicacionInput
  }

  export type ComentariosPublicacionUncheckedCreateWithoutPublicacionInput = {
    id?: number
    autorId: number
    contenido?: string | null
    fecha?: Date | string
  }

  export type ComentariosPublicacionCreateOrConnectWithoutPublicacionInput = {
    where: ComentariosPublicacionWhereUniqueInput
    create: XOR<ComentariosPublicacionCreateWithoutPublicacionInput, ComentariosPublicacionUncheckedCreateWithoutPublicacionInput>
  }

  export type ComentariosPublicacionCreateManyPublicacionInputEnvelope = {
    data: ComentariosPublicacionCreateManyPublicacionInput | ComentariosPublicacionCreateManyPublicacionInput[]
    skipDuplicates?: boolean
  }

  export type ForosUpsertWithoutPublicacionesInput = {
    update: XOR<ForosUpdateWithoutPublicacionesInput, ForosUncheckedUpdateWithoutPublicacionesInput>
    create: XOR<ForosCreateWithoutPublicacionesInput, ForosUncheckedCreateWithoutPublicacionesInput>
    where?: ForosWhereInput
  }

  export type ForosUpdateToOneWithWhereWithoutPublicacionesInput = {
    where?: ForosWhereInput
    data: XOR<ForosUpdateWithoutPublicacionesInput, ForosUncheckedUpdateWithoutPublicacionesInput>
  }

  export type ForosUpdateWithoutPublicacionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    creador?: CuentasUpdateOneRequiredWithoutForosNestedInput
  }

  export type ForosUncheckedUpdateWithoutPublicacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    creadorId?: IntFieldUpdateOperationsInput | number
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CuentasUpsertWithoutPublicacionesForoInput = {
    update: XOR<CuentasUpdateWithoutPublicacionesForoInput, CuentasUncheckedUpdateWithoutPublicacionesForoInput>
    create: XOR<CuentasCreateWithoutPublicacionesForoInput, CuentasUncheckedCreateWithoutPublicacionesForoInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutPublicacionesForoInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutPublicacionesForoInput, CuentasUncheckedUpdateWithoutPublicacionesForoInput>
  }

  export type CuentasUpdateWithoutPublicacionesForoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutPublicacionesForoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type ComentariosPublicacionUpsertWithWhereUniqueWithoutPublicacionInput = {
    where: ComentariosPublicacionWhereUniqueInput
    update: XOR<ComentariosPublicacionUpdateWithoutPublicacionInput, ComentariosPublicacionUncheckedUpdateWithoutPublicacionInput>
    create: XOR<ComentariosPublicacionCreateWithoutPublicacionInput, ComentariosPublicacionUncheckedCreateWithoutPublicacionInput>
  }

  export type ComentariosPublicacionUpdateWithWhereUniqueWithoutPublicacionInput = {
    where: ComentariosPublicacionWhereUniqueInput
    data: XOR<ComentariosPublicacionUpdateWithoutPublicacionInput, ComentariosPublicacionUncheckedUpdateWithoutPublicacionInput>
  }

  export type ComentariosPublicacionUpdateManyWithWhereWithoutPublicacionInput = {
    where: ComentariosPublicacionScalarWhereInput
    data: XOR<ComentariosPublicacionUpdateManyMutationInput, ComentariosPublicacionUncheckedUpdateManyWithoutPublicacionInput>
  }

  export type PublicacionesForoCreateWithoutComentariosInput = {
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
    foro: ForosCreateNestedOneWithoutPublicacionesInput
    autor: CuentasCreateNestedOneWithoutPublicacionesForoInput
  }

  export type PublicacionesForoUncheckedCreateWithoutComentariosInput = {
    id?: number
    foroId: number
    autorId: number
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
  }

  export type PublicacionesForoCreateOrConnectWithoutComentariosInput = {
    where: PublicacionesForoWhereUniqueInput
    create: XOR<PublicacionesForoCreateWithoutComentariosInput, PublicacionesForoUncheckedCreateWithoutComentariosInput>
  }

  export type CuentasCreateWithoutComentariosPublicacionInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutComentariosPublicacionInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutComentariosPublicacionInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutComentariosPublicacionInput, CuentasUncheckedCreateWithoutComentariosPublicacionInput>
  }

  export type PublicacionesForoUpsertWithoutComentariosInput = {
    update: XOR<PublicacionesForoUpdateWithoutComentariosInput, PublicacionesForoUncheckedUpdateWithoutComentariosInput>
    create: XOR<PublicacionesForoCreateWithoutComentariosInput, PublicacionesForoUncheckedCreateWithoutComentariosInput>
    where?: PublicacionesForoWhereInput
  }

  export type PublicacionesForoUpdateToOneWithWhereWithoutComentariosInput = {
    where?: PublicacionesForoWhereInput
    data: XOR<PublicacionesForoUpdateWithoutComentariosInput, PublicacionesForoUncheckedUpdateWithoutComentariosInput>
  }

  export type PublicacionesForoUpdateWithoutComentariosInput = {
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    foro?: ForosUpdateOneRequiredWithoutPublicacionesNestedInput
    autor?: CuentasUpdateOneRequiredWithoutPublicacionesForoNestedInput
  }

  export type PublicacionesForoUncheckedUpdateWithoutComentariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    foroId?: IntFieldUpdateOperationsInput | number
    autorId?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CuentasUpsertWithoutComentariosPublicacionInput = {
    update: XOR<CuentasUpdateWithoutComentariosPublicacionInput, CuentasUncheckedUpdateWithoutComentariosPublicacionInput>
    create: XOR<CuentasCreateWithoutComentariosPublicacionInput, CuentasUncheckedCreateWithoutComentariosPublicacionInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutComentariosPublicacionInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutComentariosPublicacionInput, CuentasUncheckedUpdateWithoutComentariosPublicacionInput>
  }

  export type CuentasUpdateWithoutComentariosPublicacionInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutComentariosPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasCreateWithoutUbicacionesInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutUbicacionesInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutUbicacionesInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutUbicacionesInput, CuentasUncheckedCreateWithoutUbicacionesInput>
  }

  export type CuentasUpsertWithoutUbicacionesInput = {
    update: XOR<CuentasUpdateWithoutUbicacionesInput, CuentasUncheckedUpdateWithoutUbicacionesInput>
    create: XOR<CuentasCreateWithoutUbicacionesInput, CuentasUncheckedCreateWithoutUbicacionesInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutUbicacionesInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutUbicacionesInput, CuentasUncheckedUpdateWithoutUbicacionesInput>
  }

  export type CuentasUpdateWithoutUbicacionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutUbicacionesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasCreateWithoutResumenUsuarioInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutResumenUsuarioInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutResumenUsuarioInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutResumenUsuarioInput, CuentasUncheckedCreateWithoutResumenUsuarioInput>
  }

  export type CuentasUpsertWithoutResumenUsuarioInput = {
    update: XOR<CuentasUpdateWithoutResumenUsuarioInput, CuentasUncheckedUpdateWithoutResumenUsuarioInput>
    create: XOR<CuentasCreateWithoutResumenUsuarioInput, CuentasUncheckedCreateWithoutResumenUsuarioInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutResumenUsuarioInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutResumenUsuarioInput, CuentasUncheckedUpdateWithoutResumenUsuarioInput>
  }

  export type CuentasUpdateWithoutResumenUsuarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutResumenUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasCreateWithoutSiguiendoInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutSiguiendoInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutSiguiendoInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutSiguiendoInput, CuentasUncheckedCreateWithoutSiguiendoInput>
  }

  export type CuentasCreateWithoutSeguidoresInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasUncheckedCreateWithoutSeguidoresInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type CuentasCreateOrConnectWithoutSeguidoresInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutSeguidoresInput, CuentasUncheckedCreateWithoutSeguidoresInput>
  }

  export type CuentasUpsertWithoutSiguiendoInput = {
    update: XOR<CuentasUpdateWithoutSiguiendoInput, CuentasUncheckedUpdateWithoutSiguiendoInput>
    create: XOR<CuentasCreateWithoutSiguiendoInput, CuentasUncheckedCreateWithoutSiguiendoInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutSiguiendoInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutSiguiendoInput, CuentasUncheckedUpdateWithoutSiguiendoInput>
  }

  export type CuentasUpdateWithoutSiguiendoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutSiguiendoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUpsertWithoutSeguidoresInput = {
    update: XOR<CuentasUpdateWithoutSeguidoresInput, CuentasUncheckedUpdateWithoutSeguidoresInput>
    create: XOR<CuentasCreateWithoutSeguidoresInput, CuentasUncheckedCreateWithoutSeguidoresInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutSeguidoresInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutSeguidoresInput, CuentasUncheckedUpdateWithoutSeguidoresInput>
  }

  export type CuentasUpdateWithoutSeguidoresInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutSeguidoresInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasCreateWithoutFavoritosInput = {
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    rol: RolesCreateNestedOneWithoutCuentasInput
    estado: EstadosUsuarioCreateNestedOneWithoutCuentasInput
    productos?: ProductosCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesCreateNestedManyWithoutUsuarioInput
    foros?: ForosCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresCreateNestedManyWithoutUsuarioSeguidoInput
  }

  export type CuentasUncheckedCreateWithoutFavoritosInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedCreateNestedManyWithoutVendedorInput
    transaccionesCompra?: TransaccionesUncheckedCreateNestedManyWithoutCompradorInput
    transaccionesVenta?: TransaccionesUncheckedCreateNestedManyWithoutVendedorInput
    calificacionesDadas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadorInput
    calificacionesRecibidas?: CalificacionesUncheckedCreateNestedManyWithoutCalificadoInput
    carrito?: CarritoUncheckedCreateNestedManyWithoutUsuarioInput
    actividades?: ActividadUsuarioUncheckedCreateNestedManyWithoutUsuarioInput
    mensajesEnviados?: MensajesUncheckedCreateNestedManyWithoutRemitenteInput
    mensajesRecibidos?: MensajesUncheckedCreateNestedManyWithoutDestinatarioInput
    reportes?: ReportesUncheckedCreateNestedManyWithoutReportanteInput
    reportesRecibidos?: ReportesUncheckedCreateNestedManyWithoutUsuarioReportadoInput
    publicaciones?: PublicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    foros?: ForosUncheckedCreateNestedManyWithoutCreadorInput
    publicacionesForo?: PublicacionesForoUncheckedCreateNestedManyWithoutAutorInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedCreateNestedManyWithoutAutorInput
    notificaciones?: NotificacionesUncheckedCreateNestedManyWithoutUsuarioInput
    ubicaciones?: UbicacionesUncheckedCreateNestedManyWithoutUsuarioInput
    resumenUsuario?: ResumenUsuarioUncheckedCreateNestedOneWithoutUsuarioInput
    siguiendo?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSigueInput
    seguidores?: SeguidoresUncheckedCreateNestedManyWithoutUsuarioSeguidoInput
  }

  export type CuentasCreateOrConnectWithoutFavoritosInput = {
    where: CuentasWhereUniqueInput
    create: XOR<CuentasCreateWithoutFavoritosInput, CuentasUncheckedCreateWithoutFavoritosInput>
  }

  export type PublicacionesCreateWithoutFavoritosInput = {
    titulo?: string | null
    cuerpo?: string | null
    estado?: string | null
    fecha?: Date | string
    visto?: boolean
    usuario: CuentasCreateNestedOneWithoutPublicacionesInput
  }

  export type PublicacionesUncheckedCreateWithoutFavoritosInput = {
    id?: number
    titulo?: string | null
    cuerpo?: string | null
    usuarioId: number
    estado?: string | null
    fecha?: Date | string
    visto?: boolean
  }

  export type PublicacionesCreateOrConnectWithoutFavoritosInput = {
    where: PublicacionesWhereUniqueInput
    create: XOR<PublicacionesCreateWithoutFavoritosInput, PublicacionesUncheckedCreateWithoutFavoritosInput>
  }

  export type CuentasUpsertWithoutFavoritosInput = {
    update: XOR<CuentasUpdateWithoutFavoritosInput, CuentasUncheckedUpdateWithoutFavoritosInput>
    create: XOR<CuentasCreateWithoutFavoritosInput, CuentasUncheckedCreateWithoutFavoritosInput>
    where?: CuentasWhereInput
  }

  export type CuentasUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: CuentasWhereInput
    data: XOR<CuentasUpdateWithoutFavoritosInput, CuentasUncheckedUpdateWithoutFavoritosInput>
  }

  export type CuentasUpdateWithoutFavoritosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
  }

  export type CuentasUncheckedUpdateWithoutFavoritosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
  }

  export type PublicacionesUpsertWithoutFavoritosInput = {
    update: XOR<PublicacionesUpdateWithoutFavoritosInput, PublicacionesUncheckedUpdateWithoutFavoritosInput>
    create: XOR<PublicacionesCreateWithoutFavoritosInput, PublicacionesUncheckedCreateWithoutFavoritosInput>
    where?: PublicacionesWhereInput
  }

  export type PublicacionesUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: PublicacionesWhereInput
    data: XOR<PublicacionesUpdateWithoutFavoritosInput, PublicacionesUncheckedUpdateWithoutFavoritosInput>
  }

  export type PublicacionesUpdateWithoutFavoritosInput = {
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    usuario?: CuentasUpdateOneRequiredWithoutPublicacionesNestedInput
  }

  export type PublicacionesUncheckedUpdateWithoutFavoritosInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioId?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ProductosCreateManyVendedorInput = {
    id?: number
    nombre: string
    categoriaId?: number | null
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    estadoId: number
  }

  export type TransaccionesCreateManyCompradorInput = {
    id?: number
    productoId: number
    vendedorId: number
    fecha?: Date | string
    estadoId: number
  }

  export type TransaccionesCreateManyVendedorInput = {
    id?: number
    productoId: number
    compradorId: number
    fecha?: Date | string
    estadoId: number
  }

  export type CalificacionesCreateManyCalificadorInput = {
    id?: number
    transaccionId: number
    calificadoId: number
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
  }

  export type CalificacionesCreateManyCalificadoInput = {
    id?: number
    transaccionId: number
    calificadorId: number
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
  }

  export type CarritoCreateManyUsuarioInput = {
    id?: number
    productoId: number
    cantidad: number
  }

  export type ActividadUsuarioCreateManyUsuarioInput = {
    id?: number
    accion?: string | null
    detalles?: string | null
    fecha?: Date | string
  }

  export type MensajesCreateManyRemitenteInput = {
    id?: number
    destinatarioId: number
    contenido?: string | null
    fechaEnvio?: Date | string
    leido?: boolean
  }

  export type MensajesCreateManyDestinatarioInput = {
    id?: number
    remitenteId: number
    contenido?: string | null
    fechaEnvio?: Date | string
    leido?: boolean
  }

  export type ReportesCreateManyReportanteInput = {
    id?: number
    usuarioReportadoId?: number | null
    productoId?: number | null
    motivo?: string | null
    fecha?: Date | string
    estadoId: number
  }

  export type ReportesCreateManyUsuarioReportadoInput = {
    id?: number
    reportanteId: number
    productoId?: number | null
    motivo?: string | null
    fecha?: Date | string
    estadoId: number
  }

  export type PublicacionesCreateManyUsuarioInput = {
    id?: number
    titulo?: string | null
    cuerpo?: string | null
    estado?: string | null
    fecha?: Date | string
    visto?: boolean
  }

  export type ForosCreateManyCreadorInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    fechaCreacion?: Date | string
  }

  export type PublicacionesForoCreateManyAutorInput = {
    id?: number
    foroId: number
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
  }

  export type ComentariosPublicacionCreateManyAutorInput = {
    id?: number
    publicacionId: number
    contenido?: string | null
    fecha?: Date | string
  }

  export type NotificacionesCreateManyUsuarioInput = {
    id?: number
    tipo?: string | null
    mensaje?: string | null
    leido?: boolean
    fecha?: Date | string
  }

  export type UbicacionesCreateManyUsuarioInput = {
    id?: number
    nombreLugar?: string | null
    descripcion?: string | null
  }

  export type SeguidoresCreateManyUsuarioSigueInput = {
    usuarioSeguidoId: number
    fecha?: Date | string
  }

  export type SeguidoresCreateManyUsuarioSeguidoInput = {
    usuarioSigueId: number
    fecha?: Date | string
  }

  export type FavoritosCreateManyUsuarioInput = {
    id?: number
    publicacionId: number
    fecha?: Date | string
  }

  export type ProductosUpdateWithoutVendedorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriasUpdateOneWithoutProductosNestedInput
    estado?: EstadosProductoUpdateOneRequiredWithoutProductosNestedInput
    transacciones?: TransaccionesUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaId?: NullableIntFieldUpdateOperationsInput | number | null
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    transacciones?: TransaccionesUncheckedUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUncheckedUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateManyWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaId?: NullableIntFieldUpdateOperationsInput | number | null
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type TransaccionesUpdateWithoutCompradorInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductosUpdateOneRequiredWithoutTransaccionesNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutTransaccionesVentaNestedInput
    estado?: EstadosTransaccionUpdateOneRequiredWithoutTransaccionesNestedInput
    calificaciones?: CalificacionesUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionesUncheckedUpdateWithoutCompradorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    calificaciones?: CalificacionesUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionesUncheckedUpdateManyWithoutCompradorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type TransaccionesUpdateWithoutVendedorInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductosUpdateOneRequiredWithoutTransaccionesNestedInput
    comprador?: CuentasUpdateOneRequiredWithoutTransaccionesCompraNestedInput
    estado?: EstadosTransaccionUpdateOneRequiredWithoutTransaccionesNestedInput
    calificaciones?: CalificacionesUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionesUncheckedUpdateWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    compradorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    calificaciones?: CalificacionesUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionesUncheckedUpdateManyWithoutVendedorInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    compradorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type CalificacionesUpdateWithoutCalificadorInput = {
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    transaccion?: TransaccionesUpdateOneRequiredWithoutCalificacionesNestedInput
    calificado?: CuentasUpdateOneRequiredWithoutCalificacionesRecibidasNestedInput
  }

  export type CalificacionesUncheckedUpdateWithoutCalificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    calificadoId?: IntFieldUpdateOperationsInput | number
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionesUncheckedUpdateManyWithoutCalificadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    calificadoId?: IntFieldUpdateOperationsInput | number
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionesUpdateWithoutCalificadoInput = {
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    transaccion?: TransaccionesUpdateOneRequiredWithoutCalificacionesNestedInput
    calificador?: CuentasUpdateOneRequiredWithoutCalificacionesDadasNestedInput
  }

  export type CalificacionesUncheckedUpdateWithoutCalificadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    calificadorId?: IntFieldUpdateOperationsInput | number
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionesUncheckedUpdateManyWithoutCalificadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    transaccionId?: IntFieldUpdateOperationsInput | number
    calificadorId?: IntFieldUpdateOperationsInput | number
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CarritoUpdateWithoutUsuarioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    producto?: ProductosUpdateOneRequiredWithoutCarritoNestedInput
  }

  export type CarritoUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type CarritoUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type ActividadUsuarioUpdateWithoutUsuarioInput = {
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActividadUsuarioUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ActividadUsuarioUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    accion?: NullableStringFieldUpdateOperationsInput | string | null
    detalles?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MensajesUpdateWithoutRemitenteInput = {
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    destinatario?: CuentasUpdateOneRequiredWithoutMensajesRecibidosNestedInput
  }

  export type MensajesUncheckedUpdateWithoutRemitenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MensajesUncheckedUpdateManyWithoutRemitenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    destinatarioId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MensajesUpdateWithoutDestinatarioInput = {
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
    remitente?: CuentasUpdateOneRequiredWithoutMensajesEnviadosNestedInput
  }

  export type MensajesUncheckedUpdateWithoutDestinatarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MensajesUncheckedUpdateManyWithoutDestinatarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitenteId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fechaEnvio?: DateTimeFieldUpdateOperationsInput | Date | string
    leido?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ReportesUpdateWithoutReportanteInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioReportado?: CuentasUpdateOneWithoutReportesRecibidosNestedInput
    producto?: ProductosUpdateOneWithoutReportesNestedInput
    estado?: EstadosReporteUpdateOneRequiredWithoutReportesNestedInput
  }

  export type ReportesUncheckedUpdateWithoutReportanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioReportadoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type ReportesUncheckedUpdateManyWithoutReportanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioReportadoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type ReportesUpdateWithoutUsuarioReportadoInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    reportante?: CuentasUpdateOneRequiredWithoutReportesNestedInput
    producto?: ProductosUpdateOneWithoutReportesNestedInput
    estado?: EstadosReporteUpdateOneRequiredWithoutReportesNestedInput
  }

  export type ReportesUncheckedUpdateWithoutUsuarioReportadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    reportanteId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type ReportesUncheckedUpdateManyWithoutUsuarioReportadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    reportanteId?: IntFieldUpdateOperationsInput | number
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type PublicacionesUpdateWithoutUsuarioInput = {
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    favoritos?: FavoritosUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionesUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
    favoritos?: FavoritosUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionesUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    visto?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ForosUpdateWithoutCreadorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    publicaciones?: PublicacionesForoUpdateManyWithoutForoNestedInput
  }

  export type ForosUncheckedUpdateWithoutCreadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
    publicaciones?: PublicacionesForoUncheckedUpdateManyWithoutForoNestedInput
  }

  export type ForosUncheckedUpdateManyWithoutCreadorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fechaCreacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionesForoUpdateWithoutAutorInput = {
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    foro?: ForosUpdateOneRequiredWithoutPublicacionesNestedInput
    comentarios?: ComentariosPublicacionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionesForoUncheckedUpdateWithoutAutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    foroId?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarios?: ComentariosPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionesForoUncheckedUpdateManyWithoutAutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    foroId?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentariosPublicacionUpdateWithoutAutorInput = {
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacion?: PublicacionesForoUpdateOneRequiredWithoutComentariosNestedInput
  }

  export type ComentariosPublicacionUncheckedUpdateWithoutAutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentariosPublicacionUncheckedUpdateManyWithoutAutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesUpdateWithoutUsuarioInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    leido?: BoolFieldUpdateOperationsInput | boolean
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    leido?: BoolFieldUpdateOperationsInput | boolean
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificacionesUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    mensaje?: NullableStringFieldUpdateOperationsInput | string | null
    leido?: BoolFieldUpdateOperationsInput | boolean
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UbicacionesUpdateWithoutUsuarioInput = {
    nombreLugar?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UbicacionesUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreLugar?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UbicacionesUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombreLugar?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SeguidoresUpdateWithoutUsuarioSigueInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioSeguido?: CuentasUpdateOneRequiredWithoutSeguidoresNestedInput
  }

  export type SeguidoresUncheckedUpdateWithoutUsuarioSigueInput = {
    usuarioSeguidoId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeguidoresUncheckedUpdateManyWithoutUsuarioSigueInput = {
    usuarioSeguidoId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeguidoresUpdateWithoutUsuarioSeguidoInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuarioSigue?: CuentasUpdateOneRequiredWithoutSiguiendoNestedInput
  }

  export type SeguidoresUncheckedUpdateWithoutUsuarioSeguidoInput = {
    usuarioSigueId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoInput = {
    usuarioSigueId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritosUpdateWithoutUsuarioInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    publicacion?: PublicacionesUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritosUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritosUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    publicacionId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CuentasCreateManyRolInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    estadoId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
  }

  export type CuentasUpdateWithoutRolInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    estado?: EstadosUsuarioUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateManyWithoutRolInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    estadoId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type CuentasCreateManyEstadoInput = {
    id?: number
    nombre: string
    apellido?: string | null
    correo: string
    usuario: string
    contrasena: string
    rolId: number
    fechaRegistro?: Date | string
    campus?: string | null
    reputacion?: Decimal | DecimalJsLike | number | string
  }

  export type CuentasUpdateWithoutEstadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    rol?: RolesUpdateOneRequiredWithoutCuentasNestedInput
    productos?: ProductosUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productos?: ProductosUncheckedUpdateManyWithoutVendedorNestedInput
    transaccionesCompra?: TransaccionesUncheckedUpdateManyWithoutCompradorNestedInput
    transaccionesVenta?: TransaccionesUncheckedUpdateManyWithoutVendedorNestedInput
    calificacionesDadas?: CalificacionesUncheckedUpdateManyWithoutCalificadorNestedInput
    calificacionesRecibidas?: CalificacionesUncheckedUpdateManyWithoutCalificadoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutUsuarioNestedInput
    actividades?: ActividadUsuarioUncheckedUpdateManyWithoutUsuarioNestedInput
    mensajesEnviados?: MensajesUncheckedUpdateManyWithoutRemitenteNestedInput
    mensajesRecibidos?: MensajesUncheckedUpdateManyWithoutDestinatarioNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutReportanteNestedInput
    reportesRecibidos?: ReportesUncheckedUpdateManyWithoutUsuarioReportadoNestedInput
    publicaciones?: PublicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    foros?: ForosUncheckedUpdateManyWithoutCreadorNestedInput
    publicacionesForo?: PublicacionesForoUncheckedUpdateManyWithoutAutorNestedInput
    comentariosPublicacion?: ComentariosPublicacionUncheckedUpdateManyWithoutAutorNestedInput
    notificaciones?: NotificacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    ubicaciones?: UbicacionesUncheckedUpdateManyWithoutUsuarioNestedInput
    resumenUsuario?: ResumenUsuarioUncheckedUpdateOneWithoutUsuarioNestedInput
    siguiendo?: SeguidoresUncheckedUpdateManyWithoutUsuarioSigueNestedInput
    seguidores?: SeguidoresUncheckedUpdateManyWithoutUsuarioSeguidoNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CuentasUncheckedUpdateManyWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    correo?: StringFieldUpdateOperationsInput | string
    usuario?: StringFieldUpdateOperationsInput | string
    contrasena?: StringFieldUpdateOperationsInput | string
    rolId?: IntFieldUpdateOperationsInput | number
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: NullableStringFieldUpdateOperationsInput | string | null
    reputacion?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type CategoriasCreateManyCategoriaPadreInput = {
    id?: number
    nombre: string
  }

  export type ProductosCreateManyCategoriaInput = {
    id?: number
    nombre: string
    vendedorId: number
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
    estadoId: number
  }

  export type CategoriasUpdateWithoutCategoriaPadreInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    subcategorias?: CategoriasUpdateManyWithoutCategoriaPadreNestedInput
    productos?: ProductosUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriasUncheckedUpdateWithoutCategoriaPadreInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    subcategorias?: CategoriasUncheckedUpdateManyWithoutCategoriaPadreNestedInput
    productos?: ProductosUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type CategoriasUncheckedUpdateManyWithoutCategoriaPadreInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ProductosUpdateWithoutCategoriaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    vendedor?: CuentasUpdateOneRequiredWithoutProductosNestedInput
    estado?: EstadosProductoUpdateOneRequiredWithoutProductosNestedInput
    transacciones?: TransaccionesUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    vendedorId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    transacciones?: TransaccionesUncheckedUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUncheckedUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateManyWithoutCategoriaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    vendedorId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type ProductosCreateManyEstadoInput = {
    id?: number
    nombre: string
    categoriaId?: number | null
    vendedorId: number
    precioAnterior?: Decimal | DecimalJsLike | number | string | null
    precioActual?: Decimal | DecimalJsLike | number | string | null
    descripcion?: string | null
    calificacion?: Decimal | DecimalJsLike | number | string | null
    cantidad?: number | null
    fechaAgregado?: Date | string
  }

  export type ProductosUpdateWithoutEstadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    categoria?: CategoriasUpdateOneWithoutProductosNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutProductosNestedInput
    transacciones?: TransaccionesUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
    transacciones?: TransaccionesUncheckedUpdateManyWithoutProductoNestedInput
    carrito?: CarritoUncheckedUpdateManyWithoutProductoNestedInput
    imagenes?: ImagenesProductoUncheckedUpdateManyWithoutProductoNestedInput
    reportes?: ReportesUncheckedUpdateManyWithoutProductoNestedInput
  }

  export type ProductosUncheckedUpdateManyWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoriaId?: NullableIntFieldUpdateOperationsInput | number | null
    vendedorId?: IntFieldUpdateOperationsInput | number
    precioAnterior?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precioActual?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    calificacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    fechaAgregado?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransaccionesCreateManyProductoInput = {
    id?: number
    compradorId: number
    vendedorId: number
    fecha?: Date | string
    estadoId: number
  }

  export type CarritoCreateManyProductoInput = {
    id?: number
    usuarioId: number
    cantidad: number
  }

  export type ImagenesProductoCreateManyProductoInput = {
    id?: number
    urlImagen?: Uint8Array | null
  }

  export type ReportesCreateManyProductoInput = {
    id?: number
    reportanteId: number
    usuarioReportadoId?: number | null
    motivo?: string | null
    fecha?: Date | string
    estadoId: number
  }

  export type TransaccionesUpdateWithoutProductoInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    comprador?: CuentasUpdateOneRequiredWithoutTransaccionesCompraNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutTransaccionesVentaNestedInput
    estado?: EstadosTransaccionUpdateOneRequiredWithoutTransaccionesNestedInput
    calificaciones?: CalificacionesUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionesUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    compradorId?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
    calificaciones?: CalificacionesUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionesUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    compradorId?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type CarritoUpdateWithoutProductoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    usuario?: CuentasUpdateOneRequiredWithoutCarritoNestedInput
  }

  export type CarritoUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type CarritoUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
  }

  export type ImagenesProductoUpdateWithoutProductoInput = {
    urlImagen?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
  }

  export type ImagenesProductoUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    urlImagen?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
  }

  export type ImagenesProductoUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    urlImagen?: NullableBytesFieldUpdateOperationsInput | Uint8Array | null
  }

  export type ReportesUpdateWithoutProductoInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    reportante?: CuentasUpdateOneRequiredWithoutReportesNestedInput
    usuarioReportado?: CuentasUpdateOneWithoutReportesRecibidosNestedInput
    estado?: EstadosReporteUpdateOneRequiredWithoutReportesNestedInput
  }

  export type ReportesUncheckedUpdateWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    reportanteId?: IntFieldUpdateOperationsInput | number
    usuarioReportadoId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type ReportesUncheckedUpdateManyWithoutProductoInput = {
    id?: IntFieldUpdateOperationsInput | number
    reportanteId?: IntFieldUpdateOperationsInput | number
    usuarioReportadoId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    estadoId?: IntFieldUpdateOperationsInput | number
  }

  export type TransaccionesCreateManyEstadoInput = {
    id?: number
    productoId: number
    compradorId: number
    vendedorId: number
    fecha?: Date | string
  }

  export type TransaccionesUpdateWithoutEstadoInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    producto?: ProductosUpdateOneRequiredWithoutTransaccionesNestedInput
    comprador?: CuentasUpdateOneRequiredWithoutTransaccionesCompraNestedInput
    vendedor?: CuentasUpdateOneRequiredWithoutTransaccionesVentaNestedInput
    calificaciones?: CalificacionesUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionesUncheckedUpdateWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    compradorId?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    calificaciones?: CalificacionesUncheckedUpdateManyWithoutTransaccionNestedInput
  }

  export type TransaccionesUncheckedUpdateManyWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productoId?: IntFieldUpdateOperationsInput | number
    compradorId?: IntFieldUpdateOperationsInput | number
    vendedorId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionesCreateManyTransaccionInput = {
    id?: number
    calificadorId: number
    calificadoId: number
    puntuacion?: Decimal | DecimalJsLike | number | string | null
    comentario?: string | null
    fecha?: Date | string
  }

  export type CalificacionesUpdateWithoutTransaccionInput = {
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    calificador?: CuentasUpdateOneRequiredWithoutCalificacionesDadasNestedInput
    calificado?: CuentasUpdateOneRequiredWithoutCalificacionesRecibidasNestedInput
  }

  export type CalificacionesUncheckedUpdateWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    calificadorId?: IntFieldUpdateOperationsInput | number
    calificadoId?: IntFieldUpdateOperationsInput | number
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CalificacionesUncheckedUpdateManyWithoutTransaccionInput = {
    id?: IntFieldUpdateOperationsInput | number
    calificadorId?: IntFieldUpdateOperationsInput | number
    calificadoId?: IntFieldUpdateOperationsInput | number
    puntuacion?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comentario?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportesCreateManyEstadoInput = {
    id?: number
    reportanteId: number
    usuarioReportadoId?: number | null
    productoId?: number | null
    motivo?: string | null
    fecha?: Date | string
  }

  export type ReportesUpdateWithoutEstadoInput = {
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    reportante?: CuentasUpdateOneRequiredWithoutReportesNestedInput
    usuarioReportado?: CuentasUpdateOneWithoutReportesRecibidosNestedInput
    producto?: ProductosUpdateOneWithoutReportesNestedInput
  }

  export type ReportesUncheckedUpdateWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    reportanteId?: IntFieldUpdateOperationsInput | number
    usuarioReportadoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportesUncheckedUpdateManyWithoutEstadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    reportanteId?: IntFieldUpdateOperationsInput | number
    usuarioReportadoId?: NullableIntFieldUpdateOperationsInput | number | null
    productoId?: NullableIntFieldUpdateOperationsInput | number | null
    motivo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritosCreateManyPublicacionInput = {
    id?: number
    usuarioId: number
    fecha?: Date | string
  }

  export type FavoritosUpdateWithoutPublicacionInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: CuentasUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritosUncheckedUpdateWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritosUncheckedUpdateManyWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PublicacionesForoCreateManyForoInput = {
    id?: number
    autorId: number
    titulo?: string | null
    contenido?: string | null
    fecha?: Date | string
  }

  export type PublicacionesForoUpdateWithoutForoInput = {
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autor?: CuentasUpdateOneRequiredWithoutPublicacionesForoNestedInput
    comentarios?: ComentariosPublicacionUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionesForoUncheckedUpdateWithoutForoInput = {
    id?: IntFieldUpdateOperationsInput | number
    autorId?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    comentarios?: ComentariosPublicacionUncheckedUpdateManyWithoutPublicacionNestedInput
  }

  export type PublicacionesForoUncheckedUpdateManyWithoutForoInput = {
    id?: IntFieldUpdateOperationsInput | number
    autorId?: IntFieldUpdateOperationsInput | number
    titulo?: NullableStringFieldUpdateOperationsInput | string | null
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentariosPublicacionCreateManyPublicacionInput = {
    id?: number
    autorId: number
    contenido?: string | null
    fecha?: Date | string
  }

  export type ComentariosPublicacionUpdateWithoutPublicacionInput = {
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    autor?: CuentasUpdateOneRequiredWithoutComentariosPublicacionNestedInput
  }

  export type ComentariosPublicacionUncheckedUpdateWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    autorId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ComentariosPublicacionUncheckedUpdateManyWithoutPublicacionInput = {
    id?: IntFieldUpdateOperationsInput | number
    autorId?: IntFieldUpdateOperationsInput | number
    contenido?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}